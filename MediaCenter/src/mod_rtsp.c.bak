#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <fcntl.h>
#include <signal.h>
#include "mod_core.h"
#include "util.h"
#include "mod_rtsp.h"

int fd;
int conn_fd;

void rtsp_init();
void rtsp_start();
void rtsp_release();

static void process_request(int fd);
static void process_command(req_info *header);
static int check_request(req_info *header);
static void send_respone_line(int status);
static void send_respone_header(int status);
static void send_respone_body(req_info *header);
static void send_message(char *buf, int len);

void create_rtsp(net_module *module) {
	if( !module )
		return;
	//memset(module, 0, sizeof(net_module));
	module->module_init = rtsp_init;
	module->module_start = rtsp_start;
	module->module_release = rtsp_release;
}

void rtsp_init(conf *_conf) {
	//module->process_request = process_request;
	/*
	socket_conf conf;
    conf.domain = AF_INET;
    conf.type = SOCK_STREAM;
    conf.port = 1234;
    conf.max_connection = 10;
	*/
	signal(SIGCLD, SIG_IGN);
    fd = network_init((socket_conf *)_conf);
	//if( (pid = fork()) < 1 )
	//	return;
	//process_request(fd);
}

void rtsp_start() {
	printf("rtsp start: %d!!\n", getpid());
	while( 1 ) {
		conn_fd = network_accept(fd);
		int pid = 0;
		if( (pid = fork()) > 0 ) {
			close(conn_fd);
        	continue;
		}

    	process_request(conn_fd);
		break;
	}
}

void rtsp_release() {
}

static void process_request(int fd) {
	char buf[1024] = {0};
	fd_set readset;
	FD_ZERO( &readset );
    FD_SET( fd, &readset );
	int size = 0;
	int t_size = 0;
	while( 1 ) {
		//if( select(conn_fd + 1, &readset, (fd_set*) 0, (fd_set*) 0, (struct timeval*) 0) < 0 ) 
		//	break;
        if( (size = read(conn_fd, buf + t_size, 1024)) == 0 ) {
			break;
		}
		t_size += size;
		//	printf("End flag [%d] [%d] [%d] [%d]\n", buf[t_size - 4], buf[t_size - 3], buf[t_size - 2], buf[t_size - 1]);
		
		if( t_size > 3 && buf[t_size - 4] == 13 && buf[t_size - 3] == 10 && buf[t_size - 2] == 13 && buf[t_size - 1] == 10 ) {
			//printf("End flag [%d] [%d] [%d] [%d]\n", buf[t_size - 4], buf[t_size - 3], buf[t_size - 2], buf[t_size - 1]);
			break;
			//printf("Find out the end flag\n");
		} 
		
		//buf[size] = '\0';
	}


	
			printf("rtsp request:%s\n", buf);
	req_info *header = parse_http(buf);
	/*
	if( header ) {
		printf("size: %d\n", header->size);
		printf("method: %d\n", header->method);
		printf("file: %s\n", header->file);
		printf("protocol: %d\n", header->protocol);
		printf("version: %f\n", header->version);
	}
	*/
	if( !header ) 
		return;

	/*
	char *file = header->file;
	char *query = strchr(file, "?");
	if( query ) {
		*query = '\0';
		query ++;
	}
	*/
	process_command(header);
/*
	if( check_request(header) < 0 ) {
		return;
	}

	send_respone_line(0);
	send_respone_body(header);
*/
/*
	write(fd, "HTTP/1.0 ", 8);
	write(fd, 200, 4);
	write(fd, "OK", 2);
	write(fd, "Content-Type:text/html\r\n",24);
	write(fd, "\r\n\r\n", 4);
	write(fd, "<html><body>test</body></html>", 30);
*/
	release_header(header);
	//if( header->_req_line->method == OPTIONS )
		close(conn_fd);
}

static int check_request(req_info *header) {
	if( !header || !header->_req_line->path )
        return -1;
    char *file = header->_req_line->path;
    if( *file == '/' ) {
        file ++;
    }

    if( access(file, 4) < 0 ) { //检查读权限
        printf("The file is not exist\n");
        return -2;
    }

	return 0;
}

static void send_respone_line(int status) {
	int len = 8 + 4 + 4;
	char buf[len] ;
	int tmp = 200;
	memcpy(buf, "RTSP/1.0 ", 9);
	memcpy(buf + 9, "200", 3);
	memcpy(buf + 9 + 3, " OK\r\n", 5); 
	
	//memcpy(buf + 16, "Content-Type:text/html\r\n\r\n", 26);
	send_message("RTSP/1.0 200 OK\r\n", strlen("RTSP/1.0 200 OK\r\n"));
	/*
	write(conn_fd, "HTTP/1.0 ", 8);
    write(conn_fd, 200, 4);
    write(conn_fd, "OK", 2);
    write(conn_fd, "Content-Type:text/html\r\n",24);
    write(conn_fd, "\r\n\r\n", 4);
	*/
}

static void send_response_header(req_info *info) {
	send_message("Content-Type:text/html\r\n\r\n", 26);
}
/*
void parse_file_type(char *file) {
}
*/

static void send_respone_file_data(char *file) {
	char buf[512];
	int file_fd;
	if( (file_fd = open(file, O_RDONLY)) < 0 ) {
        printf("Open file error!!\n");
        return;
    }

    int r_size = 0;
    while( (r_size = read(file_fd, buf, 512)) > 0 ) {
        send_message(buf, r_size);
    }
	close(file_fd);
}

static void make_envp(req_info *header) {
}

static void process_command(req_info *header) {
	//char a = '\r';
	//char b = '\n';
	switch(header->_req_line->method) {
	case CREATE:
		break;
	case OPTIONS:
		send_respone_line(0);
		write(conn_fd, "CSeq: 2\r\n", strlen("CSeq: 2\r\n"));
		//write(conn_fd, &(((req_rtsp_extend_header *)(header->_req_header->extend_header))->c_seq), 4);
		//write(conn_fd, "\r\n", 2);
		write(conn_fd, "Public: DESCRIBE, SETUP, TEARDOWN, PLAY, PAUSE\r\n\r\n", strlen("Public: DESCRIBE, SETUP, TEARDOWN, PLAY, PAUSE"));
		//write(conn_fd, 
		//printf("ab: %d, %d\n", a, b);
		break;
	case DESCRIBE: {
		char *tmp1 = "v=0\r\n\
o=- 201111280556110484 201111280556110484 IN IP4 127.0.0.1\r\n\
s= LIVE\r\n\
c=IN IP4 0.0.0.0\r\n\
b=AS:431\r\n\
a=maxps:5262\r\n\
t=0 0\r\n\
a=control:rtsp://222.240.196.154/xinwenlive/\r\n\
a=etag:{D52C3C07-CA20-B63E-F784-3D52C2D420EC}\r\n\
a=range:npt=5.000-5.000\r\n\
a=type:broadcast\r\n\
a=recvonly\r\n\
a=pgmpu:data:application/x-wms-contentdesc,8,language,31,0,,44,WMS_CONTENT_DESCRIPTION_SERVER_BRANDING_INFO,31,12,WMServer/9.1,35,WMS_CONTENT_DESCRIPTION_DESCRIPTION,31,11,OICQ%20237429,9,copyright,31,4,CSTV,6,author,31,9,%E6%A9%98%E5%AD%90%E7%9A%AE,5,title,31,23,%E9%95%BF%E6%B2%99%E6%96%B0%E9%97%BB%E9%A2%91%E9%81%93%20LIVE,51,WMS_CONTENT_DESCRIPTION_PLAYLIST_ENTRY_START_OFFSET,3,4,5000,47,WMS_CONTENT_DESCRIPTION_PLAYLIST_ENTRY_DURATION,3,1,0,58,WMS_CONTENT_DESCRIPTION_COPIED_METADATA_FROM_PLAYLIST_FILE,3,1,1,42,WMS_CONTENT_DESCRIPTION_PLAYLIST_ENTRY_URL,31,1,/%0D%0A\r\n\
a=pgmpu:data:application/vnd.ms.wms-hdr.asfv1;base64,MCaydY5mzxGm2QCqAGLObMYUAAAAAAAACAAAAAECMyaydY5mzxGm2QCqAGLObGQAAAAAAAAAGAAIAAoAGAAAAH+VmWywZfuVkZhTkCAATABJAFYARQAAAFhqUFuudgAAQwBTAFQAVgAAAE8ASQBDAFEAIAAyADMANwA0ADIAOQAAAM51+HuNRtERjYIAYJfJorImAAAAAAAAAAIAAQAA/gAAAgBAlAUAodyrjEepzxGO5ADADCBTZWgAAAAAAAAAYLhGEEEc0UeCMC19xSSrkPgUAAAAAAAAcMIN9Y+tzAH/////AAAAAAAAAAAAAAAAAAAAAAAAAACIEwAAAAAAAAkAAACOFAAAjhQAAECSBgC1A79fLqnPEY7jAMAMIFNlHxEAAAAAAAAR0tOruqnPEY7mAMAMIFNlBgDxEAAAqUZDfODv/EuyKTk+3kFchScAAAAAAAAAAQAMegBoAC0AYwBuAAAAy6XmFHLGMkODmalpUgZbWlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABj2AACIEwAAAAAAABj2AACIEwAAAAAAAPADAAAAAAAAAQAAAAAAAAAAAAAAAAAAAMul5hRyxjJDg5mpaVIGW1puAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwdgUAiBMAAAAAAABwdgUAiBMAAAAAAAAAAAAAAAAAAAIAAABjFwUAAAAAAAAAAQBQlL3Gf4YHSYOjx3khtzOtAgAAAAAAXYvxJoRF7EefXw5lHwRSyRoAAAAAAAAAAgHqy/jFr1t3SIRnqoxE+kzK4AAAAAAAAAAEAAAAAQAMAAIAAgAAAEkAcwBWAEIAUgAAAAAAAAABADQAAAAGAAAARABlAHYAaQBjAGUAQwBvAG4AZgBvAHIAbQBhAG4AYwBlAFQAZQBtAHAAbABhAHQAZQAAAEwAMgAAAAAAAgAMAAIAAgAAAEkAcwBWAEIAUgAAAAAAAAACADQAAAAMAAAARABlAHYAaQBjAGUAQwBvAG4AZgBvAHIAbQBhAG4AYwBlAFQAZQBtAHAAbABhAHQAZQAAAE0AUABAAEwATAAAAHTUBhjfyglFpLqaq8uWqugKDwy3t6nPEY7mAMAMIFNlcgAAAAAAAABAnmn4TVvPEaj9AIBfXEQrUM3Dv49hzxGLsgCqALTiIAAAAAAAAAAAHAAAAAgAAAABAABizmxhAQIAgLsAAMMeAADwAxAACgAAiAAAHwDwAwAAAfAD8AMBAACRB9y3t6nPEY7mAMAMIFNlhQAAAAAAAADA7xm8TVvPEaj9AIBfXEQrAFf7IFVbzxGo/QCAX1xEKwAAAAAAAAAANwAAAAAAAAACAABizmxAAQAA8AAAAAIsACwAAABAAQAA8AAAAAEAGABXTVYzAAAAAAAAAAAAAAAAAAAAAAAAAABOWRoBQKTQ0gfj0hGX8ACgyV6oUKQAAAAAAAAAAwAcAFcATQBGAFMARABLAFYAZQByAHMAaQBvAG4AAAAAABwAMQAwAC4AMAAwAC4AMAAwAC4AMwA4ADAAMgAAABoAVwBNAEYAUwBEAEsATgBlAGUAZABlAGQAAAAAABYAMAAuADAALgAwAC4AMAAwADAAMAAAAAwASQBzAFYAQgBSAAAAAgAEAAAAAABAUtGGHTHQEaOkAKDJA0j2/AAAAAAAAABBUtGGHTHQEaOkAKDJA0j2AgAAAAIAGABXAGkAbgBkAG8AdwBzACAATQBlAGQAaQBhACAAQQB1AGQAaQBvACAAOQAuADEAAAAuACAANgAzACAAawBiAHAAcwAsACAANAA4ACAAawBIAHoALAAgAHMAdABlAHIAZQBvACAATABvAHcAIABEAGUAbABhAHkAIAAxAC0AcABhAHMAcwAgAEMAQgBSAAAAAgBhAQEAFgBXAGkAbgBkAG8AdwBzACAATQBlAGQAaQBhACAAVgBpAGQAZQBvACAAOQAAAAEAAAAEAFdNVjM2JrJ1jmbPEabZAKoAYs5sMgAAAAAAAABguEYQQRzRR4IwLX3FJKuQAAAAAAAAAAABAQ==\r\n\
m=audio 0 RTP/AVP 96\r\n\
b=AS:66\r\n\
b=X-AV:63\r\n\
b=RS:0\r\n\
b=RR:0\r\n\
a=rtpmap:96 x-asf-pf/1000\r\n\
a=control:audio\r\n\
a=stream:1\r\n\
m=application 0 RTP/AVP 96\r\n\
b=RS:0\r\n\
b=RR:0\r\n\
a=rtpmap:96 x-wms-rtx/1000\r\n\
a=control:rtx\r\n\
a=stream:65536\r\n\
m=video 0 RTP/AVP 96\r\n\
b=AS:366\r\n\
b=X-AV:358\r\n\
b=RS:0\r\n\
b=RR:0\r\n\
a=rtpmap:96 x-asf-pf/1000\r\n\
a=control:video\r\n\
a=stream:2\r\n";
		//");
		printf("tmp1: %d\n", strlen(tmp1));
		send_respone_line(0);
		write(conn_fd, "CSeq: 3\r\n", 9);
		//write(conn_fd, &(((req_rtsp_extend_header *)header->_req_header->extend_header)->c_seq), 4);
		write(conn_fd, "Content-Length: 8394\r\n", strlen("Content-Length: 8394\r\n"));
		write(conn_fd, "Content-Type:application/sdp\r\n", strlen("Content-Type:application/sdp") + 2);
		write(conn_fd, "\r\n", 2);
		write(conn_fd, tmp1, strlen(tmp1));
		break;	}
	case SETUP:
		printf("Recive Setup command!!!!!!!\n");
	}
}

static void send_respone_body(req_info *header) {

	char *file = header->_req_line->path;
    if( *file == '/' ) {
        file ++;
    }

	int f_len = strlen(file);
}

static void send_message(char *buf, int len) {
	if( buf ) {
		write(conn_fd, buf, len);
	}
}
