cscope 15 $HOME/workspace/Test-Network/MediaCenter/sdk/rtplib-1.0a1               0000720476
	@config.h

8 
	#STDC_HEADERS
 1

	)

11 
	#TIME_WITH_SYS_TIME
 1

	)

21 
	#HAVE_GETHOSTNAME
 1

	)

24 
	#HAVE_GETTIMEOFDAY
 1

	)

27 
	#HAVE_SELECT
 1

	)

30 
	#HAVE_SNPRINTF
 1

	)

33 
	#HAVE_SOCKET
 1

	)

36 
	#HAVE_STRERROR
 1

	)

39 
	#HAVE_UNAME
 1

	)

42 
	#HAVE_VSNPRINTF
 1

	)

45 
	#HAVE_MALLOC_H
 1

	)

48 
	#HAVE_STDLIB_H
 1

	)

51 
	#HAVE_STRING_H
 1

	)

54 
	#HAVE_SYS_TIME_H
 1

	)

57 
	#HAVE_UNISTD_H
 1

	)

60 
	#HAVE_LIBNSL
 1

	)

	@example1.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

15 #ifde‡
__unix


16 
	~<sys/ty≥s.h
>

17 
	~<sys/sockë.h
>

18 
	~<√töë/ö.h
>

19 
	~<î∫o.h
>

20 
	~<sys/time.h
>

21 
	~<sys/∑øm.h
>

22 
	~<√tdb.h
>

23 
	~<uni°d.h
>

26 #ifde‡
WIN32


27 
	~<wösock2.h
>

28 
	#MAXHOSTNAMELEN
 50

	)

29 
gëtimeofday
(
timevÆ
 *, *);

32 
	~"πp_≠i.h
"

33 
	~"πp_highÀvñ.h
"

35 
	#PAYLOAD_TYPE_MULAW_8
 0

	)

38 
	#tv2dbl
(
tv
Ë(—v).
tv_£c
 + (tv).
tv_u£c
 / 1000000.0)

	)

41 
timevÆ
 
	$dbl2tv
(
d
)

43 
timevÆ
 
tv
;

45 
tv
.
tv_£c
 = (Ë
d
;

46 
tv
.
tv_u£c
 = (Ë((
d
 - () d) * 1000000.0);

48  
tv
;

49 
	}
}

57 
	sevt_queue_ñt
 {

58 
c⁄ãxt
 
	mcid
;

59 
πp_›aque_t
 
	mevít_›aque
;

60 
	mevít_time
;

61 
evt_queue_ñt
 *
	m√xt
;

64 
evt_queue_ñt
* 
	gevt_queue
 = 
NULL
;

66 
	$ö£π_ö_evt_queue
(
evt_queue_ñt
 *
ñt
)

68 i‡(
evt_queue
 =
NULL
 || 
ñt
->
evít_time
 <Évt_queue->event_time) {

69 
ñt
->
√xt
 = 
evt_queue
;

70 
evt_queue
 = 
ñt
;

73 
evt_queue_ñt
 *
s
 = 
evt_queue
;

74 
s
 !
NULL
) {

75 i‡(
s
->
√xt
 =
NULL
 || 
ñt
->
evít_time
 < s->next->event_time) {

76 
ñt
->
√xt
 = 
s
->next;

77 
s
->
√xt
 = 
ñt
;

80 
s
 = s->
√xt
;

83 
	}
}

91 
	$RTPScheduÀ
(
c⁄ãxt
 
cid
, 
πp_›aque_t
 
›aque
, 
timevÆ
 *
ç
)

93 
evt_queue_ñt
 *
ñt
;

95 
ñt
 = (
evt_queue_ñt
 *Ë
	`mÆloc
((evt_queue_elt));

96 i‡(
ñt
 =
NULL
)

99 
ñt
->
cid
 = cid;

100 
ñt
->
evít_›aque
 = 
›aque
;

101 
ñt
->
evít_time
 = 
	`tv2dbl
(*
ç
);

103 
	`ö£π_ö_evt_queue
(
ñt
);

106 
	}
}

109 
	$h±
(*
h
, 
u_öt16
 *
p‹t
, *
âl
)

111 *
s
;

114 
s
 = 
	`°rchr
(
h
, '/');

115 i‡(!
s
) {

119 *
s
 = '\0';

120 *
p‹t
 = 
	`©oi
(
s
+1);

121 
s
 = 
	`°rchr
(s+1, '/');

122 i‡(
s
 && 
âl
) {

123 *
âl
 = 
	`©oi
(
s
+1);

127 
	}
}

139 
	$£tup_c⁄√˘i⁄
(*
ªmŸe
, 
c⁄ãxt
 *
cid
, 
sock
[2])

142 
π≥º‹
 
îr
;

144 
u_öt16
 
p‹t
;

147 
âl
 = 1;

151 
sockty≥
 
sockt
;

153 
nfds
 = 0;

156 *
u£∫ame
;

157 
ho°«me
[
MAXHOSTNAMELEN
];

158 
˙ame
[
MAXHOSTNAMELEN
+32];

159 
timevÆ
 
ç
;

160 
≥rs⁄
 
uid
, 
c⁄id
;

161 #ifde‡
WIN32


162 
WORD
 
wVîsi⁄Reque°ed
;

163 
WSADATA
 
wßD©a
;

164 
îr2
;

166 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
( 2, 0 );

168 
îr2
 = 
	`WSASèπup
–
wVîsi⁄Reque°ed
, &
wßD©a
 );

169 i‡–
îr2
 != 0 ) {

176 i‡(
	`h±
(
ªmŸe
, &
p‹t
, &
âl
) < 0) {

177 
	`Ârötf
(
°dîr
, "%s: badáddªss\n", 
ªmŸe
);

183 
îr
 = 
	`RTPCª©e
(
cid
);

184 i‡(
îr
 !
RTP_OK
) {

185 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

190 
îr
 = 
	`RTPSessi⁄AddSídAddr
(*
cid
, 
ªmŸe
, 
p‹t
, 
âl
);

191 i‡(
îr
 !
RTP_OK
) {

192 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

201 
îr
 = 
	`RTPSessi⁄SëRe˚iveAddr
(*
cid
, 
ªmŸe
, 
p‹t
);

205 
u£∫ame
 = 
	`gëív
("USER");

206 i‡(
	`gëho°«me
(
ho°«me
, 
MAXHOSTNAMELEN
) < 0) {

207 
	`≥º‹
("gethostname");

210 i‡(
u£∫ame
Ë{ 
	`•rötf
(
˙ame
, "%s@%s", u£∫ame, 
ho°«me
); }

211 { 
	`°r˝y
(
˙ame
, 
ho°«me
); }

214 
îr
 = 
	`RTPMembîInfoSëSDES
(*
cid
, 0, 
RTP_MI_CNAME
, 
˙ame
);

215 i‡(
îr
 !
RTP_OK
) {

216 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

221 
îr
 = 
	`RTPMembîInfoSëSDES
(*
cid
, 0, 
RTP_MI_NAME
, "RTP Example Server");

222 i‡(
îr
 !
RTP_OK
) {

223 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

229 
	`gëtimeofday
(&
ç
, 
NULL
);

230 
	`§™d
(
ç
.
tv_u£c
);

231 
c⁄id
 = 
	`ønd
();

232 
îr
 = 
	`RTPSessi⁄AddToC⁄åibut‹Li°
(*
cid
, (Ë
c⁄id
);

233 i‡(
îr
) {

234 
	`Ârötf
(
°dîr
, "%†%s\n", 
	`RTPSåEº‹
(
îr
), 
	`RTPDebugSå
());

237 
îr
 = 
	`RTPSessi⁄GëUniqueIDF‹CSRC
(*
cid
,
c⁄id
,&
uid
);

238 i‡(
îr
) {

239 
	`Ârötf
(
°dîr
, "%†%s\n", 
	`RTPSåEº‹
(
îr
), 
	`RTPDebugSå
());

242 
	`•rötf
(
˙ame
, "C⁄åibut‹ %d", (Ë
c⁄id
);

243 
îr
 = 
	`RTPMembîInfoSëSDES
(*
cid
, 
uid
, 
RTP_MI_CNAME
, 
˙ame
);

244 i‡(
îr
) {

245 
	`Ârötf
(
°dîr
, "%†%s\n", 
	`RTPSåEº‹
(
îr
), 
	`RTPDebugSå
());

248 
îr
 = 
	`RTPMembîInfoSëSDES
(*
cid
, 
uid
, 
RTP_MI_NAME
, 
˙ame
);

249 i‡(
îr
) {

250 
	`Ârötf
(
°dîr
, "%†%s\n", 
	`RTPSåEº‹
(
îr
), 
	`RTPDebugSå
());

256 
îr
 = 
	`RTPO≥nC⁄√˘i⁄
(*
cid
);

257 i‡(
îr
 !
RTP_OK
) {

258 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

265 
îr
 = 
	`RTPSessi⁄GëRTPSockë
(*
cid
, &
sockt
);

266 i‡(
îr
 !
RTP_OK
) {

267 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

270 
sock
[0] = 
sockt
;

271 
nfds
 = 0;

272 #ifde‡
__unix


273 i‡(
nfds
 < 
sockt
)Çfds = sockt;

278 
îr
 = 
	`RTPSessi⁄GëRTCPSockë
(*
cid
, &
sockt
);

279 i‡(
îr
 !
RTP_OK
) {

280 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

283 
sock
[1] = 
sockt
;

284 #ifde‡
__unix


285 i‡(
nfds
 < 
sockt
)Çfds = sockt;

288  
nfds
;

289 
	}
}

291 
	$maö
(
¨gc
, *
¨gv
[])

295 
c⁄ãxt
 
cid
;

297 
sockty≥
 
sock
[2];

300 
nfds
;

303 
FILE
 *
öput
;

305 
	#BUFFER_SIZE
 160

	)

307 
buf„r
[
BUFFER_SIZE
];

309 
	#RECEIVE_BUFFER_SIZE
 65536

	)

313 
ª˚ive_buf„r
[
RECEIVE_BUFFER_SIZE
];

316 
byãs_ªad
, 
tŸÆ_ªad
, 
œ°_ªad
;

318 
timevÆ
 
°¨t_time_tv
, 
now_tv
;

319 
°¨t_time
, 
∂ay_time
, 
now
;

321 
ßm∂e_øã
, 
byã_øã
;

324 
tsöc
;

326 
m¨kî
 = 1;

329 
π≥º‹
 
îr
;

335 
ßm∂e_øã
 = 
byã_øã
 = 1/8000.0;

337 i‡(
¨gc
 < 3) {

338 
	`Ârötf
(
°dîr
, "ußge: %†fûêp‹t\n", 
¨gv
[0]);

339 
	`exô
(2);

342 
öput
 = 
	`f›í
(
¨gv
[1], "r");

343 i‡(
öput
 =
NULL
) {

344 
	`≥º‹
(
¨gv
[1]);

345 
	`exô
(1);

348 i‡((
nfds
 = 
	`£tup_c⁄√˘i⁄
(
¨gv
[2], &
cid
, 
sock
)) < 0) {

349 
	`exô
(1);

352 
tŸÆ_ªad
 = 0;

353 
œ°_ªad
 = 
BUFFER_SIZE
;

354 
	`gëtimeofday
(&
°¨t_time_tv
, 
NULL
);

355 
°¨t_time
 = 
	`tv2dbl
(
°¨t_time_tv
);

357 (
byãs_ªad
 = 
	`‰ód
(
buf„r
, 1, 
BUFFER_SIZE
, 
öput
)) > 0) {

361 
tsöc
 = 
œ°_ªad
 * (
ßm∂e_øã
/
byã_øã
);

365 
îr
 = 
	`RTPSíd
(
cid
, 
tsöc
, 
m¨kî
, 
PAYLOAD_TYPE_MULAW_8
, 
buf„r
,

366 
byãs_ªad
);

367 i‡(
îr
 !
RTP_OK
) {

368 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

369 
	`exô
(1);

372 
m¨kî
 = 0;

374 
tŸÆ_ªad
 +
byãs_ªad
;

375 
œ°_ªad
 = 
byãs_ªad
;

380 
∂ay_time
 = 
°¨t_time
 + (
tŸÆ_ªad
 * 
byã_øã
);

384 
	`gëtimeofday
(&
now_tv
, 
NULL
),

385 (
now
 = 
	`tv2dbl
(
now_tv
)Ë< 
∂ay_time
) {

386 
evít
;

387 
ªtvÆ
, 
i
;

388 
timeout
;

389 
timevÆ
 
timeout_tv
;

390 
fd_£t
 
sockës
;

394 i‡(
evt_queue
 !
NULL
 &&Évt_queue->
evít_time
 < 
∂ay_time
) {

395 
evít
 = 1;

396 
timeout
 = 
evt_queue
->
evít_time
 - 
now
;

399 
evít
 = 0;

400 
timeout
 = 
∂ay_time
 - 
now
;

402 i‡(
timeout
 < 0)Åimeout = 0;

403 
timeout_tv
 = 
	`dbl2tv
(
timeout
);

405 
	`FD_ZERO
(&
sockës
);

406 
	`FD_SET
(
sock
[0], &
sockës
);

407 
	`FD_SET
(
sock
[1], &
sockës
);

409 
ªtvÆ
 = 
	`£À˘
(
nfds
 + 1, &
sockës
, 
NULL
, NULL, &
timeout_tv
);

410 i‡(
ªtvÆ
 < 0) {

411 
	`≥º‹
("select");

412 
	`exô
(1);

414 i‡(
ªtvÆ
 > 0) {

415 
i
 = 0; i < 2; i++) {

416 i‡(
	`FD_ISSET
(
sock
[
i
], &
sockës
)) {

417 
ªcbuÊí
 = 
RECEIVE_BUFFER_SIZE
;

422 
îr
 = 
	`RTPRe˚ive
(
cid
, 
sock
[
i
], 
ª˚ive_buf„r
, &
ªcbuÊí
);

423 i‡(
îr
 !
RTP_OK
 &&Éº !
RTP_PACKET_LOOPBACK
) {

424 
	`Ârötf
(
°dîr
, "RTPReceive %s (%d): %s\n",

425 
i
 ? "RTCP" : "RTP", 
sock
[i],

426 
	`RTPSåEº‹
(
îr
));

432 i‡(
evít
) {

433 
evt_queue_ñt
 *
√xt
;

434 
	`gëtimeofday
(&
now_tv
, 
NULL
);

435 
now
 = 
	`tv2dbl
(
now_tv
);

436 
evt_queue
 !
NULL
 &&Évt_queue->
evít_time
 <
now
) {

439 
	`RTPExecuã
(
evt_queue
->
cid
,Évt_queue->
evít_›aque
);

441 
√xt
 = 
evt_queue
->next;

442 
	`‰ì
(
evt_queue
);

443 
evt_queue
 = 
√xt
;

454 i‡((
îr
 = 
	`RTPClo£C⁄√˘i⁄
(
cid
, "Goodbye!")Ë!
RTP_OK
) {

455 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

461 i‡((
îr
 = 
	`RTPDe°roy
(
cid
)Ë!
RTP_OK
) {

462 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

466 
	}
}

	@example2.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<sig«l.h
>

16 #ifde‡
__unix


17 
	~<sys/ty≥s.h
>

18 
	~<sys/sockë.h
>

19 
	~<√töë/ö.h
>

20 
	~<î∫o.h
>

21 
	~<sys/time.h
>

22 
	~<sys/∑øm.h
>

23 
	~<√tdb.h
>

24 
	~<uni°d.h
>

27 #ifde‡
WIN32


28 
	~<wösock2.h
>

32 
	~"πp_≠i.h
"

33 
	~"πp_highÀvñ.h
"

36 #ifde‡
WIN32


37 
gëtimeofday
(
timevÆ
 *, *);

41 
	#tv2dbl
(
tv
Ë(—v).
tv_£c
 + (tv).
tv_u£c
 / 1000000.0)

	)

44 
timevÆ
 
	$dbl2tv
(
d
)

46 
timevÆ
 
tv
;

48 
tv
.
tv_£c
 = (Ë
d
;

49 
tv
.
tv_u£c
 = (Ë((
d
 - () d) * 1000000.0);

51  
tv
;

52 
	}
}

56 
	$PrötRï‹tög
(
c⁄ãxt
 
cid
) {

58 
membî_ôî©‹
 
ôî
;

59 
≥rs⁄
 
p2
;

60 
membî°©us
 
ms
;

61 
£ndî°©us
 
£ndî
;

62 
π≥º‹
 
îr
;

63 
ª˚ivî_ªp‹t_ôî©‹
 
ôî2
;

64 
ª˚ivî_ªp‹t
 
º
;

65 
¡p64
 
¡±
;

66 
öt32
 
πps
;

68 if(
	`RTPSessi⁄GëMembîLi°
(
cid
, &
ôî
Ë!
RTP_OK
) {

69 
	`¥ötf
("DetectedÉrror in getting memberÜist\n");

74 
	`RTPCuºítMembî
(
cid
, &
ôî
, &
p2
);

75 
	`RTPMembîInfoGëSètus
(
cid
, 
p2
, &
ms
, &
£ndî
);

77 if(
£ndî
 !
RTP_SENDER_NOT
) {

79 
îr
 = 
	`RTPSídîInfoGëFú°Re˚ivîRï‹t
(
cid
, 
p2
, &
ôî2
, &
º
);

80 if((
îr
 !
RTP_OK
Ë&& (î∏!
RTP_END_OF_LIST
)) {

81 
	`Ârötf
(
°dîr
,"Error obtainingÑeceiverÑeport\n");

82 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

83 
	`exô
(-1);

86 
	`¥ötf
("Pîs⁄ %d:\n",(Ë
p2
);

88 
îr
 =
RTP_OK
) {

89 
	`¥ötf
(" Rï‹ãd by %u\n",(Ë
º
.
ªp‹ãr
);

90 
	`¥ötf
(" Fø˘i⁄ Lo°: %u\n",
º
.
‰a˘i⁄_lo°
);

91 
	`¥ötf
(" CumÜo°: %lu\n",
º
.
cum_lo°
);

92 
	`¥ötf
(" Highe° SN: %lu\n",
º
.
highe°_£qno
);

93 
	`¥ötf
(" Jôãr: %lu\n",
º
.
jôãr
);

94 
	`¥ötf
(" La° SR: %lu\n",
º
.
œ°_§
);

95 
	`¥ötf
(" DLSR: %lu\n",
º
.
dñay_œ°_§
);

97 
îr
 = 
	`RTPSídîInfoGëNextRe˚ivîRï‹t
(
cid
, 
p2
, &
ôî2
, &
º
);

98 if((
îr
 !
RTP_OK
Ë&& (î∏!
RTP_END_OF_LIST
)) {

99 
	`Ârötf
(
°dîr
,"Error obtainingÑeceiverÑeport\n");

100 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

101 
	`exô
(-1);

106 
îr
 = 
	`RTPSídîInfoGëLoˇlRe˚±i⁄
(
cid
, 
p2
, &
º
);

107 if(
îr
 =
RTP_OK
) {

108 
	`¥ötf
(" Local observation:\n");

109 
	`¥ötf
(" Fø˘i⁄ Lo°: %u\n",
º
.
‰a˘i⁄_lo°
);

110 
	`¥ötf
(" CumÜo°: %lu\n",
º
.
cum_lo°
);

111 
	`¥ötf
(" Highe° SN: %lu\n",
º
.
highe°_£qno
);

112 
	`¥ötf
(" Jôãr: %lu\n",
º
.
jôãr
);

113 
	`¥ötf
(" La° SR: %lu\n",
º
.
œ°_§
);

114 
	`¥ötf
(" DLSR: %lu\n",
º
.
dñay_œ°_§
);

117 
	`¥ötf
(" Info from SR:\n");

118 
	`RTPMembîInfoGëNTP
(
cid
, 
p2
, &
¡±
);

119 
	`¥ötf
(" NTP Sèmp: %lu.%lu\n", 
¡±
.
£cs
,Ççt.
‰ac
);

120 
	`RTPMembîInfoGëRTP
(
cid
, 
p2
, &
πps
);

121 
	`¥ötf
(" RTP Sèmp: %lu\n", 
πps
);

122 
	`RTPMembîInfoGëPktCou¡
(
cid
, 
p2
, &
πps
);

123 
	`¥ötf
(" Packë cou¡: %lu\n", 
πps
);

124 
	`RTPMembîInfoGëO˘Cou¡
(
cid
, 
p2
, &
πps
);

125 
	`¥ötf
(" O˘ë cou¡: %lu\n", 
πps
);

129 
	`¥ötf
("Pîs⁄ %d:\n",(Ë
p2
);

130 
	`¥ötf
(" Notá sender\n");

133 } 
	`RTPNextMembî
(
cid
, &
ôî
, &
p2
Ë!
RTP_END_OF_LIST
);

135 
	}
}

138 
	$h±
(*
h
, 
u_öt16
 *
p‹t
, *
âl
)

140 *
s
;

143 
s
 = 
	`°rchr
(
h
, '/');

144 i‡(!
s
) {

148 *
s
 = '\0';

149 *
p‹t
 = 
	`©oi
(
s
+1);

150 
s
 = 
	`°rchr
(s+1, '/');

151 i‡(
s
 && 
âl
) {

152 *
âl
 = 
	`©oi
(
s
+1);

156 
	}
}

165 
	sevt_queue_ñt
 {

166 
c⁄ãxt
 
	mcid
;

167 
πp_›aque_t
 
	mevít_›aque
;

168 
	mevít_time
;

169 
evt_queue_ñt
 *
	m√xt
;

172 
evt_queue_ñt
* 
	gevt_queue
 = 
NULL
;

174 
	$ö£π_ö_evt_queue
(
evt_queue_ñt
 *
ñt
)

176 i‡(
evt_queue
 =
NULL
 || 
ñt
->
evít_time
 <Évt_queue->event_time) {

177 
ñt
->
√xt
 = 
evt_queue
;

178 
evt_queue
 = 
ñt
;

181 
evt_queue_ñt
 *
s
 = 
evt_queue
;

182 
s
 !
NULL
) {

183 i‡(
s
->
√xt
 =
NULL
 || 
ñt
->
evít_time
 < s->next->event_time) {

184 
ñt
->
√xt
 = 
s
->next;

185 
s
->
√xt
 = 
ñt
;

188 
s
 = s->
√xt
;

191 
	}
}

199 
	$RTPScheduÀ
(
c⁄ãxt
 
cid
, 
πp_›aque_t
 
›aque
, 
timevÆ
 *
ç
)

201 
evt_queue_ñt
 *
ñt
;

203 
ñt
 = (
evt_queue_ñt
 *Ë
	`mÆloc
((evt_queue_elt));

204 i‡(
ñt
 =
NULL
)

207 
ñt
->
cid
 = cid;

208 
ñt
->
evít_›aque
 = 
›aque
;

209 
ñt
->
evít_time
 = 
	`tv2dbl
(*
ç
);

211 
	`ö£π_ö_evt_queue
(
ñt
);

214 
	}
}

220 
	$upd©e_membî_ˇŒback
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
id_no
, 
πpÊag
 
Êags
,

221 *
°r
)

223 
öt32
 
√w_s§c
;

224 
π≥º‹
 
îr
;

225 
îr
 = 
	`RTPMembîInfoGëSSRC
(
cid
, 
id_no
, &
√w_s§c
);

226 i‡(
îr
 !
RTP_OK
){

227 
	`Ârötf
(
°dîr
,

229 
cid
, 
id_no
, 
	`RTPSåEº‹
(
îr
));

232 
	`¥ötf
("MembîÇumbî %ld (SSRC 0x%lxË", 
id_no
, 
√w_s§c
);

233 
Êags
) {

234 
RTP_FLAG_NEW_MEMBER
:

235 
	`¥ötf
("joined.\n");

237 
RTP_FLAG_NEW_SENDER
:

238 
	`¥ötf
("was confirmedásá sender.\n");

240 
RTP_FLAG_EXPIRED_MEMBER
:

241 
	`¥ötf
("timed out.\n");

243 
RTP_FLAG_EXPIRED_SENDER
:

244 
	`¥ötf
("timed outásá sender.\n");

246 
RTP_FLAG_MEMBER_LEAVES
:

247 
	`¥ötf
("À·:Ñós⁄ \"%s\".\n", 
°r
);

249 
RTP_FLAG_OBSERVE_COLLISION
:

250 
	`¥ötf
("collided!\n");

252 
RTP_FLAG_A_CSRC_COLLIDES
:

253 
	`¥ötf
("collided withá csrc member\n");

255 
RTP_FLAG_UNIQUE_ID_REMAP
:

256 
	`¥ötf
("collidedánd hasÇowÑeturned\n");

258 
RTP_FLAG_MEMBER_ALIVE
:

259 
	`¥ötf
("isálive.\n");

261 
RTP_FLAG_MEMBER_CONFIRMED
:

262 
	`¥ötf
("was confirmedásá group member.\n");

264 
RTP_FLAG_DELETED_PENDING
:

265 
	`¥ötf
("was deleted (havingÅimed out,ándÇever having been confirmed).\n");

267 
RTP_FLAG_DELETED_MEMBER
:

268 
	`¥ötf
("was deleted (havingÅimed out someÅimeágo).\n");

270 
RTP_FLAG_ADDRESS_CHANGES
:

271 
	`¥ötf
("address changed\n");

273 
RTP_FLAG_COLLIDE_WITH_ME
:

274 
	`¥ötf
("collided withÜocal member\n");

276 
RTP_FLAG_PURPORTED_SENDER
:

277 
	`¥ötf
("isÖurportedlyá sender.\n");

279 
RTP_FLAG_DELETED_SENDER
:

280 
	`¥ötf
("is having its sender state destroyed.\n");

283 
	`¥ötf
("had unknow¿°©êch™gê%d.\n", 
Êags
);

286 
	}
}

291 
	$ch™ged_membîöfo_ˇŒback
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
id_no
,

292 
membîöfo
 
öfo
, * 
°r
,

293 
πpÊag
 
Êags
)

295 
öt32
 
√w_s§c
;

296 
π≥º‹
 
îr
;

298 
îr
 = 
	`RTPMembîInfoGëSSRC
(
cid
, 
id_no
, &
√w_s§c
);

299 i‡(
îr
 !
RTP_OK
){

300 
	`Ârötf
(
°dîr
,

302 
cid
, 
id_no
, 
	`RTPSåEº‹
(
îr
));

305 
	`¥ötf
("MembîÇumbî %ld (SSRC 0x%lxËha†", 
id_no
, 
√w_s§c
);

307 
öfo
) {

308 
RTP_MI_CNAME
:

309 
	`¥ötf
("CNAME");

311 
RTP_MI_NAME
:

312 
	`¥ötf
("NAME");

314 
RTP_MI_EMAIL
:

315 
	`¥ötf
("EMAIL");

317 
RTP_MI_PHONE
:

318 
	`¥ötf
("PHONE");

320 
RTP_MI_LOC
:

321 
	`¥ötf
("LOC");

323 
RTP_MI_TOOL
:

324 
	`¥ötf
("TOOL");

326 
RTP_MI_NOTE
:

327 
	`¥ötf
("NOTE");

329 
RTP_MI_PRIV
:

330 
	`¥ötf
("PRIV");

332 
RTP_MI_H323_CADDR
:

333 
	`¥ötf
("H323 CADDR");

336 
	`¥ötf
("unknow¿©åibuã %d", 
öfo
);

340 
	`¥ötf
(" \"%s\".\n", 
°r
);

342 
	}
}

348 
	$ªvîtög_id_ˇŒback
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
ˇn⁄iˇl
,

349 
≥rs⁄
 
to_dñëe
,

350 *
u£röfo_‰om_dñëì
, 
πpÊag
 
Êags
)

352 
	`¥ötf
("MemberÇumber %ld wasÅhe sameás %ld,ánd was merged into it.\n",

353 
to_dñëe
, 
ˇn⁄iˇl
);

355 
	}
}

359 
	$ch™ged_membî_addªss_ˇŒback
(
c⁄ãxt
 
cid
,

360 
≥rs⁄
 
id_no
,

361 *
addr
, *
p‹t
,

362 
is_π˝
)

364 
öt32
 
√w_s§c
;

365 
π≥º‹
 
îr
;

366 
îr
 = 
	`RTPMembîInfoGëSSRC
(
cid
, 
id_no
, &
√w_s§c
);

367 i‡(
îr
 !
RTP_OK
){

368 
	`Ârötf
(
°dîr
,

370 
cid
, 
id_no
, 
	`RTPSåEº‹
(
îr
));

373 
	`¥ötf
("MembîÇumbî %ld (SSRC 0x%lxËha†", 
id_no
, 
√w_s§c
);

374 i‡(
is_π˝
)

375 
	`¥ötf
("RTCP");

377 
	`¥ötf
("RTP");

379 
	`¥ötf
(" sour˚áddªs†%s:%s\n", 
addr
, 
p‹t
);

380 
	}
}

390 
	$£nd_îr‹_ˇŒback
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 
p‹t
, 
u_öt8
 
âl
)

392 
	`¥ötf
("Error sendingÅoáddress %s:%d (ttl %d): %s.\n",

393 
addr
, 
p‹t
, 
âl
, 
	`°ªº‹
(
î∫o
));

395 
	}
}

399 
	gföished
 = 0;

404 
	$d⁄e
(
sig
)

406 
föished
 = 1;

407 
	}
}

420 
	$£tup_c⁄√˘i⁄
(*
ªmŸe
, 
c⁄ãxt
 *
cid
, 
sock
[2])

423 
π≥º‹
 
îr
;

425 
u_öt16
 
p‹t
;

428 
âl
 = 1;

432 
sockty≥
 
sockt
;

434 
nfds
 = 0;

437 *
u£∫ame
;

439 #i‚de‡
MAXHOSTNAMELEN


440 
	#MAXHOSTNAMELEN
 50

	)

443 
ho°«me
[
MAXHOSTNAMELEN
];

444 
˙ame
[
MAXHOSTNAMELEN
+32];

447 i‡(
	`h±
(
ªmŸe
, &
p‹t
, &
âl
) < 0) {

448 
	`Ârötf
(
°dîr
, "%s: badáddªss\n", 
ªmŸe
);

454 
îr
 = 
	`RTPCª©e
(
cid
);

455 i‡(
îr
 !
RTP_OK
) {

456 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

462 
îr
 = 
	`RTPSëUpd©eMembîCÆlBack
(*
cid
, &
upd©e_membî_ˇŒback
);

463 i‡(
îr
 !
RTP_OK
) {

464 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

468 
îr
 = 
	`RTPSëCh™gedMembîInfoCÆlBack
(*
cid
, &
ch™ged_membîöfo_ˇŒback
);

469 i‡(
îr
 !
RTP_OK
) {

470 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

474 
îr
 = 
	`RTPSëRevîtögIDCÆlBack
(*
cid
, &
ªvîtög_id_ˇŒback
);

475 i‡(
îr
 !
RTP_OK
) {

476 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

480 
îr
 = 
	`RTPSëCh™gedMembîAddªssCÆlBack
(*
cid
, &
ch™ged_membî_addªss_ˇŒback
);

481 i‡(
îr
 !
RTP_OK
) {

482 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

486 
îr
 = 
	`RTPSëSídEº‹CÆlBack
(*
cid
, &
£nd_îr‹_ˇŒback
);

487 i‡(
îr
 !
RTP_OK
) {

488 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

493 
îr
 = 
	`RTPSessi⁄AddSídAddr
(*
cid
, 
ªmŸe
, 
p‹t
, 
âl
);

494 i‡(
îr
 !
RTP_OK
) {

495 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

504 
îr
 = 
	`RTPSessi⁄SëRe˚iveAddr
(*
cid
, 
ªmŸe
, 
p‹t
);

505 i‡(
îr
 !
RTP_OK
) {

506 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

511 
u£∫ame
 = 
	`gëív
("USER");

512 i‡(
	`gëho°«me
(
ho°«me
, 
MAXHOSTNAMELEN
) < 0) {

513 
	`≥º‹
("gethostname");

516 i‡(
u£∫ame
Ë{ 
	`•rötf
(
˙ame
, "%s@%s", u£∫ame, 
ho°«me
); }

517 { 
	`°r˝y
(
˙ame
, 
ho°«me
); }

520 
îr
 = 
	`RTPMembîInfoSëSDES
(*
cid
, 0, 
RTP_MI_CNAME
, 
˙ame
);

521 i‡(
îr
 !
RTP_OK
) {

522 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

527 
îr
 = 
	`RTPMembîInfoSëSDES
(*
cid
, 0, 
RTP_MI_NAME
, "RTP Example Listener");

528 i‡(
îr
 !
RTP_OK
) {

529 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

534 
îr
 = 
	`RTPO≥nC⁄√˘i⁄
(*
cid
);

535 i‡(
îr
 !
RTP_OK
) {

536 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

543 
îr
 = 
	`RTPSessi⁄GëRTPSockë
(*
cid
, &
sockt
);

544 i‡(
îr
 !
RTP_OK
) {

545 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

548 
sock
[0] = 
sockt
;

549 
nfds
 = 0;

550 #ifde‡
__unix


551 i‡(
nfds
 < 
sockt
)Çfds = sockt;

556 
îr
 = 
	`RTPSessi⁄GëRTCPSockë
(*
cid
, &
sockt
);

557 i‡(
îr
 !
RTP_OK
) {

558 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

561 
sock
[1] = 
sockt
;

563 #ifde‡
__unix


564 i‡(
nfds
 < 
sockt
)Çfds = sockt;

567  
nfds
;

568 
	}
}

570 
	$maö
(
¨gc
, *
¨gv
[])

574 
c⁄ãxt
 
cid
;

576 
sockty≥
 
sock
[2];

579 
nfds
;

582 
	#RECEIVE_BUFFER_SIZE
 65536

	)

586 
ª˚ive_buf„r
[
RECEIVE_BUFFER_SIZE
];

589 
timevÆ
 
now_tv
;

590 
now
;

593 
π≥º‹
 
îr
 = 
RTP_OK
;

594 #ifde‡
WIN32


595 
WORD
 
wVîsi⁄Reque°ed
;

596 
WSADATA
 
wßD©a
;

597 
îr2
;

599 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
( 2, 0 );

601 
îr2
 = 
	`WSASèπup
–
wVîsi⁄Reque°ed
, &
wßD©a
 );

602 i‡–
îr2
 != 0 ) {

608 i‡(
¨gc
 < 2) {

609 
	`Ârötf
(
°dîr
, "ußge: %†addªss/p‹t/âl\n", 
¨gv
[0]);

610 
	`exô
(2);

613 i‡((
nfds
 = 
	`£tup_c⁄√˘i⁄
(
¨gv
[1], &
cid
, 
sock
)) < 0) {

614 
	`exô
(1);

618 
	`sig«l
(
SIGINT
, 
d⁄e
);

619 
	`sig«l
(
SIGTERM
, 
d⁄e
);

621 #ifde‡
__unix


622 
	`sig«l
(
SIGHUP
, 
d⁄e
);

625 !
föished
) {

626 
evít
;

627 
ªtvÆ
, 
i
;

628 
timeout
;

629 
timevÆ
 
timeout_tv
, *
timeout_tvp
;

630 
fd_£t
 
sockës
;

632 
	`gëtimeofday
(&
now_tv
, 
NULL
);

633 
now
 = 
	`tv2dbl
(
now_tv
);

637 i‡(
evt_queue
 !
NULL
) {

638 
evít
 = 1;

639 
timeout
 = 
evt_queue
->
evít_time
 - 
now
;

640 i‡(
timeout
 < 0)Åimeout = 0;

641 
timeout_tv
 = 
	`dbl2tv
(
timeout
);

642 
timeout_tvp
 = &
timeout_tv
;

645 
evít
 = 0;

646 
timeout_tvp
 = 
NULL
;

649 
	`FD_ZERO
(&
sockës
);

650 
	`FD_SET
(
sock
[0], &
sockës
);

651 
	`FD_SET
(
sock
[1], &
sockës
);

653 
ªtvÆ
 = 
	`£À˘
(
nfds
 + 1, &
sockës
, 
NULL
, NULL, 
timeout_tvp
);

654 i‡(
ªtvÆ
 < 0) {

656 #ifde‡
__unix


657 i‡(
î∫o
 =
EINTR
) {

663 
	`≥º‹
("select");

664 
	`exô
(1);

666 i‡(
ªtvÆ
 > 0) {

667 
i
 = 0; i < 2; i++) {

668 i‡(
	`FD_ISSET
(
sock
[
i
], &
sockës
)) {

669 
ªcbuÊí
 = 
RECEIVE_BUFFER_SIZE
;

674 
îr
 = 
	`RTPRe˚ive
(
cid
, 
sock
[
i
], 
ª˚ive_buf„r
, &
ªcbuÊí
);

676 i‡(
îr
 !
RTP_OK
 &&Éº !
RTP_PACKET_LOOPBACK
) {

677 
	`Ârötf
(
°dîr
, "RTPReceive %s (%d): %s\n",

678 
i
 ? "RTCP" : "RTP", 
sock
[i],

679 
	`RTPSåEº‹
(
îr
));

682 if(
i
 =1Ë
	`PrötRï‹tög
(
cid
);

687 i‡(
evít
) {

688 
evt_queue_ñt
 *
√xt
;

689 
	`gëtimeofday
(&
now_tv
, 
NULL
);

690 
now
 = 
	`tv2dbl
(
now_tv
);

691 
evt_queue
 !
NULL
 &&Évt_queue->
evít_time
 <
now
) {

694 
	`RTPExecuã
(
evt_queue
->
cid
,Évt_queue->
evít_›aque
);

696 
√xt
 = 
evt_queue
->next;

697 
	`‰ì
(
evt_queue
);

698 
evt_queue
 = 
√xt
;

708 i‡((
îr
 = 
	`RTPClo£C⁄√˘i⁄
(
cid
,"Goodbye!")Ë!
RTP_OK
) {

709 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

715 i‡((
îr
 = 
	`RTPDe°roy
(
cid
)Ë!
RTP_OK
) {

716 
	`Ârötf
(
°dîr
, "%s\n", 
	`RTPSåEº‹
(
îr
));

720 
	}
}

	@global.h

9 #i‚de‡
PROTOTYPES


14 *
	tPOINTER
;

17 
	tUINT2
;

20 
	tUINT4
;

26 #ifde‡
PROTOTYPES


27 
	#PROTO_LIST
(
li°
Ë
	)
list

29 
	#PROTO_LIST
(
li°
Ë()

	)

	@host2ip.c

1 #ifde‡
__unix


2 
	~<sys/ty≥s.h
>

3 
	~<sys/sockë.h
>

4 
	~<√tdb.h
>

5 
	~<√töë/ö.h
>

6 
	~<¨∑/öë.h
>

7 
	~<Ωcsvc/yp˛¡.h
>

10 #ifde‡
WIN32


11 
	~<wösock2.h
>

14 
	grcsid
[] = "$Id: host2ip.c,v 1.3 1999/02/10 20:49:27 jdrosen Exp $";

20 
ö_addr
 
	$ho°2ù
(*
ho°
)

22 
ö_addr
 
ö
;

23 
ho°ít
 *
hï
;

26 i‡(!
ho°
 || *host == '\0') {

27 
ö
.
s_addr
 = 
INADDR_ANY
;

29 i‡((
ö
.
s_addr
 = 
	`öë_addr
(
ho°
)) != -1) {

32 i‡((
hï
 = 
	`gëho°by«me
(
ho°
))) {

33 
ö
 = *(
ö_addr
 *)(
hï
->
h_addr_li°
[0]);

37 #ifde‡
__unix


38 *
domaö
 = 0;

39 *
vÆue
;

40 
vÆue_Àn
;

42 i‡(!
domaö
Ë
	`yp_gë_deÁu…_domaö
(&domain);

43 i‡(
	`yp_m©ch
(
domaö
, "ho°s.by«me", 
ho°
, 
	`°æí
(ho°), &
vÆue
, &
vÆue_Àn
) == 0) {

44 
ö
.
s_addr
 = 
	`öë_addr
(
vÆue
);

48  
ö
;

49 
	}
}

	@md5.h

27 
UINT4
 
	m°©e
[4];

28 
UINT4
 
	mcou¡
[2];

29 
	mbuf„r
[64];

30 } 
	tMD5_CTX
;

32 
MD5Inô
 
PROTO_LIST
 ((
MD5_CTX
 *));

33 
MD5Upd©e
 
PROTO_LIST
 ((
MD5_CTX
 *, *, ));

34 
MD5FöÆ
 
PROTO_LIST
 (([16], 
MD5_CTX
 *));

	@md5c.c

26 
	~"globÆ.h
"

27 
	~"md5.h
"

28 
	~<°rög.h
>

30 
	grcsid
[] = "$Id: md5c.c,v 1.2 1999/08/25 21:45:14Üennox Exp $";

35 
	#S11
 7

	)

36 
	#S12
 12

	)

37 
	#S13
 17

	)

38 
	#S14
 22

	)

39 
	#S21
 5

	)

40 
	#S22
 9

	)

41 
	#S23
 14

	)

42 
	#S24
 20

	)

43 
	#S31
 4

	)

44 
	#S32
 11

	)

45 
	#S33
 16

	)

46 
	#S34
 23

	)

47 
	#S41
 6

	)

48 
	#S42
 10

	)

49 
	#S43
 15

	)

50 
	#S44
 21

	)

52 
MD5Tønsf‹m
 
PROTO_LIST
 ((
UINT4
 [4], [64]));

53 
Encode
 
PROTO_LIST
 ((*, 
UINT4
 *, ));

54 
Decode
 
PROTO_LIST
 ((
UINT4
 *, *, ));

56 
	gPADDING
[64] = {

64 
	#F
(
x
, 
y
, 
z
Ë(((xË& (y)Ë| ((~xË& (z)))

	)

65 
	#G
(
x
, 
y
, 
z
Ë(((xË& (z)Ë| ((yË& (~z)))

	)

66 
	#H
(
x
, 
y
, 
z
Ë((xË^ (yË^ (z))

	)

67 
	#I
(
x
, 
y
, 
z
Ë((yË^ ((xË| (~z)))

	)

71 
	#ROTATE_LEFT
(
x
, 
n
Ë(((xË<< (n)Ë| ((xË>> (32-“))))

	)

76 
	#FF
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

77 (
a
Ë+
	`F
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

78 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

79 (
a
Ë+(
b
); \

80 }

	)

81 
	#GG
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

82 (
a
Ë+
	`G
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

83 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

84 (
a
Ë+(
b
); \

85 }

	)

86 
	#HH
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

87 (
a
Ë+
	`H
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

88 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

89 (
a
Ë+(
b
); \

90 }

	)

91 
	#II
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

92 (
a
Ë+
	`I
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

93 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

94 (
a
Ë+(
b
); \

95 }

	)

99 
	$MD5Inô
 (
c⁄ãxt
)

100 
MD5_CTX
 *
c⁄ãxt
;

102 
c⁄ãxt
->
cou¡
[0] = context->count[1] = 0;

105 
c⁄ãxt
->
°©e
[0] = 0x67452301;

106 
c⁄ãxt
->
°©e
[1] = 0xefcdab89;

107 
c⁄ãxt
->
°©e
[2] = 0x98badcfe;

108 
c⁄ãxt
->
°©e
[3] = 0x10325476;

109 
	}
}

115 
	$MD5Upd©e
 (
c⁄ãxt
, 
öput
, 
öputLí
)

116 
MD5_CTX
 *
c⁄ãxt
;

117 *
öput
;

118 
öputLí
;

120 
i
, 
ödex
, 
∑πLí
;

123 
ödex
 = ()((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3F);

126 i‡((
c⁄ãxt
->
cou¡
[0] +((
UINT4
)
öputLí
 << 3)) < ((UINT4)inputLen << 3))

127 
c⁄ãxt
->
cou¡
[1]++;

128 
c⁄ãxt
->
cou¡
[1] +((
UINT4
)
öputLí
 >> 29);

130 
∑πLí
 = 64 - 
ödex
;

133 i‡(
öputLí
 >
∑πLí
) {

134 
mem˝y


135 ((
POINTER
)&
c⁄ãxt
->
buf„r
[
ödex
], (POINTER)
öput
, 
∑πLí
);

136 
	`MD5Tønsf‹m
 (
c⁄ãxt
->
°©e
, c⁄ãxt->
buf„r
);

138 
i
 = 
∑πLí
; i + 63 < 
öputLí
; i += 64)

139 
	`MD5Tønsf‹m
 (
c⁄ãxt
->
°©e
, &
öput
[
i
]);

141 
ödex
 = 0;

144 
i
 = 0;

147 
mem˝y


148 ((
POINTER
)&
c⁄ãxt
->
buf„r
[
ödex
], (POINTER)&
öput
[
i
],

149 
öputLí
-
i
);

150 
	}
}

155 
	$MD5FöÆ
 (
dige°
, 
c⁄ãxt
)

156 
dige°
[16];

157 
MD5_CTX
 *
c⁄ãxt
;

159 
bôs
[8];

160 
ödex
, 
∑dLí
;

163 
	`Encode
 (
bôs
, 
c⁄ãxt
->
cou¡
, 8);

166 
ödex
 = ()((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3f);

167 
∑dLí
 = (
ödex
 < 56) ? (56 - index) : (120 - index);

168 
	`MD5Upd©e
 (
c⁄ãxt
, 
PADDING
, 
∑dLí
);

171 
	`MD5Upd©e
 (
c⁄ãxt
, 
bôs
, 8);

175 
	`Encode
 (
dige°
, 
c⁄ãxt
->
°©e
, 16);

178 
	`mem£t
 ((
POINTER
)
c⁄ãxt
, 0,  (*context));

179 
	}
}

184 
	$MD5Tønsf‹m
 (
°©e
, 
block
)

185 
UINT4
 
°©e
[4];

186 
block
[64];

188 
UINT4
 
a
 = 
°©e
[0], 
b
 = sèã[1], 
c
 = sèã[2], 
d
 = sèã[3], 
x
[16];

190 
	`Decode
 (
x
, 
block
, 64);

193 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[ 0], 
S11
, 0xd76aa478);

194 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[ 1], 
S12
, 0xe8c7b756);

195 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[ 2], 
S13
, 0x242070db);

196 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[ 3], 
S14
, 0xc1bdceee);

197 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[ 4], 
S11
, 0xf57c0faf);

198 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[ 5], 
S12
, 0x4787c62a);

199 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[ 6], 
S13
, 0xa8304613);

200 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[ 7], 
S14
, 0xfd469501);

201 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[ 8], 
S11
, 0x698098d8);

202 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[ 9], 
S12
, 0x8b44f7af);

203 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[10], 
S13
, 0xffff5bb1);

204 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[11], 
S14
, 0x895cd7be);

205 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[12], 
S11
, 0x6b901122);

206 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[13], 
S12
, 0xfd987193);

207 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[14], 
S13
, 0xa679438e);

208 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[15], 
S14
, 0x49b40821);

211 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[ 1], 
S21
, 0xf61e2562);

212 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[ 6], 
S22
, 0xc040b340);

213 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[11], 
S23
, 0x265e5a51);

214 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[ 0], 
S24
, 0xe9b6c7aa);

215 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[ 5], 
S21
, 0xd62f105d);

216 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[10], 
S22
, 0x2441453);

217 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[15], 
S23
, 0xd8a1e681);

218 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[ 4], 
S24
, 0xe7d3fbc8);

219 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[ 9], 
S21
, 0x21e1cde6);

220 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[14], 
S22
, 0xc33707d6);

221 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[ 3], 
S23
, 0xf4d50d87);

222 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[ 8], 
S24
, 0x455a14ed);

223 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[13], 
S21
, 0xa9e3e905);

224 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[ 2], 
S22
, 0xfcefa3f8);

225 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[ 7], 
S23
, 0x676f02d9);

226 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[12], 
S24
, 0x8d2a4c8a);

229 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[ 5], 
S31
, 0xfffa3942);

230 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[ 8], 
S32
, 0x8771f681);

231 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[11], 
S33
, 0x6d9d6122);

232 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[14], 
S34
, 0xfde5380c);

233 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[ 1], 
S31
, 0xa4beea44);

234 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[ 4], 
S32
, 0x4bdecfa9);

235 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[ 7], 
S33
, 0xf6bb4b60);

236 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[10], 
S34
, 0xbebfbc70);

237 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[13], 
S31
, 0x289b7ec6);

238 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[ 0], 
S32
, 0xeaa127fa);

239 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[ 3], 
S33
, 0xd4ef3085);

240 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[ 6], 
S34
, 0x4881d05);

241 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[ 9], 
S31
, 0xd9d4d039);

242 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[12], 
S32
, 0xe6db99e5);

243 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[15], 
S33
, 0x1fa27cf8);

244 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[ 2], 
S34
, 0xc4ac5665);

247 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[ 0], 
S41
, 0xf4292244);

248 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[ 7], 
S42
, 0x432aff97);

249 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[14], 
S43
, 0xab9423a7);

250 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[ 5], 
S44
, 0xfc93a039);

251 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[12], 
S41
, 0x655b59c3);

252 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[ 3], 
S42
, 0x8f0ccc92);

253 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[10], 
S43
, 0xffeff47d);

254 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[ 1], 
S44
, 0x85845dd1);

255 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[ 8], 
S41
, 0x6fa87e4f);

256 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[15], 
S42
, 0xfe2ce6e0);

257 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[ 6], 
S43
, 0xa3014314);

258 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[13], 
S44
, 0x4e0811a1);

259 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[ 4], 
S41
, 0xf7537e82);

260 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[11], 
S42
, 0xbd3af235);

261 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[ 2], 
S43
, 0x2ad7d2bb);

262 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[ 9], 
S44
, 0xeb86d391);

264 
°©e
[0] +
a
;

265 
°©e
[1] +
b
;

266 
°©e
[2] +
c
;

267 
°©e
[3] +
d
;

270 
	`mem£t
 ((
POINTER
)
x
, 0,  (x));

271 
	}
}

277 
	$Encode
(
ouçut
, 
öput
, 
Àn
)

278 *
ouçut
;

279 
UINT4
 *
öput
;

280 
Àn
;

282 
i
, 
j
;

284 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4) {

285 
ouçut
[
j
] = ()(
öput
[
i
] & 0xff);

286 
ouçut
[
j
+1] = ()((
öput
[
i
] >> 8) & 0xff);

287 
ouçut
[
j
+2] = ()((
öput
[
i
] >> 16) & 0xff);

288 
ouçut
[
j
+3] = ()((
öput
[
i
] >> 24) & 0xff);

290 
	}
}

296 
	$Decode
 (
ouçut
, 
öput
, 
Àn
)

297 
UINT4
 *
ouçut
;

298 *
öput
;

299 
Àn
;

301 
i
, 
j
;

303 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4)

304 
ouçut
[
i
] = ((
UINT4
)
öput
[
j
]) | (((UINT4)input[j+1]) << 8) |

305 (((
UINT4
)
öput
[
j
+2]) << 16) | (((UINT4)input[j+3]) << 24);

306 
	}
}

	@rtp_api.c

7 
	~"sysdï.h
"

9 
	~"πp_≠i_öã∫Æ.h
"

10 
	~"πp_mli°.h
"

11 
	~"πp_≠i.h
"

12 
	~"πp_í¸y±.h
"

13 
	~"πp_cﬁlisi⁄.h
"

14 
	~"πp_lowÀvñ.h
"

16 
π≥º‹
 
	$RTPLowLevñCª©e
(
c⁄ãxt
 *
the_c⁄ãxt
){

17 
c⁄ãxt
 
i
;

18 
	`InôR™dom
();

20 i‡(
_RTP_c⁄ãxts_ö_u£
 < 
_RTP_c⁄ãxt_above_u£d
){

23 
i
=0; i < 
_RTP_c⁄ãxt_above_u£d
; i++){

24 i‡(
C⁄ãxtLi°
[
i
] =
NULL
){

29 i‡(
C⁄ãxtLi°
==
NULL
){

30 
i
 = 
_RTP_c⁄ãxt_above_u£d
;

31 
_RTP_c⁄ãxt_above_u£d
 = 
_RTP_INIT_CONTEXTS_AVAIL
;

32 
C⁄ãxtLi°
 = (
_RTP_CONTEXT
**Ë
	`ˇŒoc
(
_RTP_INIT_CONTEXTS_AVAIL
,

33 (
_RTP_CONTEXT
*));

37 
i
 = 
_RTP_c⁄ãxt_above_u£d
;

38 
_RTP_c⁄ãxt_above_u£d
 +
_RTP_CONTEXT_INC
;

39 
C⁄ãxtLi°
 = 
	`ªÆloc
(ContextList,

40 (
_RTP_CONTEXT
*Ë* 
_RTP_c⁄ãxt_above_u£d
);

43 
C⁄ãxtLi°
[
i
] = 
	`mÆloc
((
_RTP_CONTEXT
));

44 
_RTP_c⁄ãxts_ö_u£
++;

45 i‡(
C⁄ãxtLi°
[
i
]==
NULL
){

46  
	`îr‹debug
(
RTP_CANT_ALLOC_MEM
, "RTPLowLevelCreate", "%ld contexts in use",

47 
_RTP_c⁄ãxts_ö_u£
);

49 
C⁄ãxtLi°
[
i
]->
c⁄ãxt_num
 = i;

56 
C⁄ãxtLi°
[
i
]->
CSRCLi°
 = 
NULL
;

57 
C⁄ãxtLi°
[
i
]->
CSRCÀn
 = 0;

58 
C⁄ãxtLi°
[
i
]->
c⁄åibli°
 = 
NULL
;

59 
C⁄ãxtLi°
[
i
]->
unique_id_cou¡î
 = 0;

60 
C⁄ãxtLi°
[
i
]->
num_ªm≠s
 = 0;

61 
C⁄ãxtLi°
[
i
]->
ªc⁄sidî©i⁄
 = 
RTP_RECONSIDERATION_UNCONDITIONAL
;

62 
C⁄ãxtLi°
[
i
]->
¥ev_group_size
 = 0;

63 
C⁄ãxtLi°
[
i
]->
£ssi⁄_b™dwidth
 = 
_RTP_DEFAULT_BANDWIDTH
;

64 
C⁄ãxtLi°
[
i
]->
π˝_‰a˘i⁄
 = (Ë
_RTP_DEFAULT_RTCP_FRAC
;

65 
C⁄ãxtLi°
[
i
]->
£ndî_bw_‰a˘i⁄
 = 
_RTP_DEFAULT_SENDER_BW_FRAC
;

66 
	`SëDeÁu…PaylﬂdR©es
(
C⁄ãxtLi°
[
i
]);

71 
C⁄ãxtLi°
[
i
]->
öô_RTP_time°amp
 = 
	`øndom32
(i);

72 
C⁄ãxtLi°
[
i
]->
time_ñ≠£d
 = 0;

76 
C⁄ãxtLi°
[
i
]->
£q_no
 = 
	`øndom32
(i) % 65536;

77 
C⁄ãxtLi°
[
i
]->
öô_£q_no
 = C⁄ãxtLi°[i]->
£q_no
;

83 
C⁄ãxtLi°
[
i
]->
°©ic_s§c
 = 0;

84 
C⁄ãxtLi°
[
i
]->
s§c_mask
 = 0;

85 
C⁄ãxtLi°
[
i
]->
my_s§c
 = 0;

87 
C⁄ãxtLi°
[
i
]->
hdr_exãnsi⁄
 = 
NULL
;

90 
C⁄ãxtLi°
[
i
]->
mo°_ª˚¡_πp_£ndî
 = 
NULL
;

91 
C⁄ãxtLi°
[
i
]->
mo°_ª˚¡_π˝_£ndî
 = 
NULL
;

93 
C⁄ãxtLi°
[
i
]->
mo°_ª˚¡_addr
.
ß_Ámûy
 = 
_RTP_ADDRESS_NOT_YET_KNOWN
;

95 
C⁄ãxtLi°
[
i
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

96 
C⁄ãxtLi°
[
i
]->
Upd©eMembîCÆlBack
 = 
NULL
;

97 
C⁄ãxtLi°
[
i
]->
Ch™gedMembîInfoCÆlBack
 = 
NULL
;

98 
C⁄ãxtLi°
[
i
]->
Ch™gedMembîSockaddrCÆlBack
 = 
NULL
;

99 
C⁄ãxtLi°
[
i
]->
CﬁlidedMembîCÆlBack
 = 
NULL
;

100 
C⁄ãxtLi°
[
i
]->
RevîtögIDCÆlBack
 = 
NULL
;

102 
	`RTP_Membîshù_Inôülize
(
C⁄ãxtLi°
[
i
]);

105 
C⁄ãxtLi°
[
i
]->
my_membîöfo
 =

106 
	`E°ablishNewMembî
(
C⁄ãxtLi°
[
i
], C⁄ãxtLi°[i]->
my_s§c
, 
NULL
,

107 
NULL
, 
FALSE
, 
RTP_MEMBER_PENDING
);

110 
	`Ch™geMembîSètus
(
C⁄ãxtLi°
[
i
], C⁄ãxtLi°[i]->
my_membîöfo
,

111 
RTP_MEMBER_CONFIRMED
);

113 
C⁄ãxtLi°
[
i
]->
my_membîöfo
->
my_addr
[0].
ß_Ámûy
 =

114 
_RTP_ADDRESS_NOT_YET_KNOWN
;

115 
C⁄ãxtLi°
[
i
]->
my_membîöfo
->
my_addr
[1].
ß_Ámûy
 =

116 
_RTP_ADDRESS_NOT_YET_KNOWN
;

118 
	`gëtimeofday
(&
C⁄ãxtLi°
[
i
]->
œ°_π˝_£nd
, 
NULL
);

120 *
the_c⁄ãxt
 = 
i
;

121  
RTP_OK
;

122 
	}
}

125 
π≥º‹
 
	$RTPLowLevñDe°roy
(
c⁄ãxt
 
cid
){

126 
π≥º‹
 
îr
;

127 
c⁄åibut‹_t
 *
c⁄
, *
ãmpc⁄
;

129 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPDe°roy")Ë!
RTP_OK
)

130  
îr
;

133 
	`CÀ™MembîshùLi°
(
C⁄ãxtLi°
[
cid
], &C⁄ãxtLi°[cid]->
RTP_MembîLi°
);

134 
	`CÀ™MembîshùLi°
(
C⁄ãxtLi°
[
cid
], &C⁄ãxtLi°[cid]->
RTP_SídîLi°
);

135 
	`DñëeSSRCHashTabÀ
(
C⁄ãxtLi°
[
cid
]);

136 
	`DñëeUniqueIDHashTabÀ
(
C⁄ãxtLi°
[
cid
]);

137 
	`DñëeCNAMEHashTabÀ
(
C⁄ãxtLi°
[
cid
]);

140 i‡(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
 !
NULL
){

141 
	`‰ì
(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
);

145 
c⁄
 = 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
;

146 
c⁄
 !
NULL
) {

147 
ãmpc⁄
 = 
c⁄
;

148 
c⁄
 = c⁄->
√xt
;

149 
	`‰ì
(
ãmpc⁄
);

153 
	`‰ì
 (
C⁄ãxtLi°
[
cid
]);

154 
C⁄ãxtLi°
[
cid
] = 
NULL
;

155 
_RTP_c⁄ãxts_ö_u£
--;

156  
RTP_OK
;

157 
	}
}

159 
π≥º‹
 
	$RTPSessi⁄SëRTPSèmpR©e
(
c⁄ãxt
 
cid
, 
öt32
 
∑ylﬂd_ty≥
,

160 
öt32
 
u£c
){

161 
π≥º‹
 
îr
;

162 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄SëRTPSèmpR©e")Ë!
RTP_OK
)

163  
îr
;

164 i‡(
∑ylﬂd_ty≥
 >
_RTP_MAX_PAYLOAD_TYPES
){

165  
	`îr‹debug
(
RTP_BAD_PROFILE
, "RTPSessionSetRTPStampRate",

166 "PaylﬂdÅy≥ %ldÇŸáŒowed", 
∑ylﬂd_ty≥
);

168 
C⁄ãxtLi°
[
cid
]->
¥ofûeRTPTimeR©es
[
∑ylﬂd_ty≥
] = 
u£c
;

169  
RTP_OK
;

170 
	}
}

172 
π≥º‹
 
	$RTPSessi⁄GëRTPSèmpR©e
(
c⁄ãxt
 
cid
, 
öt32
 
∑ylﬂd_ty≥
,

173 
öt32
 *
u£c
){

174 
π≥º‹
 
îr
;

175 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëRTPSèmpR©e")Ë!
RTP_OK
)

176  
îr
;

177 i‡(
∑ylﬂd_ty≥
 >
_RTP_MAX_PAYLOAD_TYPES
){

178  
	`îr‹debug
(
RTP_BAD_PROFILE
, "RTPSessionGetRTPStampRate",

179 "PaylﬂdÅy≥ %ldÇŸáŒowed", 
∑ylﬂd_ty≥
);

181 *
u£c
 = 
C⁄ãxtLi°
[
cid
]->
¥ofûeRTPTimeR©es
[
∑ylﬂd_ty≥
];

182  
RTP_OK
;

183 
	}
}

186 
π≥º‹
 
	$RTPSessi⁄SëRec⁄sidî©i⁄
(
c⁄ãxt
 
cid
, 
ªc⁄sidî©i⁄_t
 
vÆue
){

187 
π≥º‹
 
îr
;

188 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄SëRec⁄sidî©i⁄")Ë!
RTP_OK
)

189  
îr
;

191 
C⁄ãxtLi°
[
cid
]->
ªc⁄sidî©i⁄
 = 
vÆue
;

192  
RTP_OK
;

193 
	}
}

195 
π≥º‹
 
	$RTPSessi⁄GëRec⁄sidî©i⁄
(
c⁄ãxt
 
cid
, 
ªc⁄sidî©i⁄_t
 *
vÆue
){

196 
π≥º‹
 
îr
;

197 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëRec⁄sidî©i⁄")Ë!
RTP_OK
)

198  
îr
;

200 *
vÆue
 = 
C⁄ãxtLi°
[
cid
]->
ªc⁄sidî©i⁄
;

201  
RTP_OK
;

202 
	}
}

204 
π≥º‹
 
	$RTPSessi⁄SëExãnsi⁄
(
c⁄ãxt
 
cid
, 
πp_hdr_ext
 *
the_ext
){

205 
π≥º‹
 
îr
;

206 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄SëExãnsi⁄")Ë!
RTP_OK
)

207  
îr
;

208 
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
 = 
the_ext
;

209  
RTP_OK
;

210 
	}
}

212 
π≥º‹
 
	$RTPSessi⁄GëExãnsi⁄
(
c⁄ãxt
 
cid
, 
πp_hdr_ext
 **
the_ext
){

213 
π≥º‹
 
îr
;

214 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄SëExãnsi⁄")Ë!
RTP_OK
)

215  
îr
;

216 *
the_ext
 = 
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
;

217  
RTP_OK
;

218 
	}
}

221 
π≥º‹
 
	$RTPSessi⁄SëB™dwidth
(
c⁄ãxt
 
cid
, 
£ssi⁄_bwidth
,

222 
π˝_‰a˘i⁄
){

223 
π≥º‹
 
îr
;

224 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄SëB™dwidth")Ë!
RTP_OK
)

225  
îr
;

226 i‡((
£ssi⁄_bwidth
 > 0.0Ë&& (
π˝_‰a˘i⁄
 > 0.0)) {

232 
C⁄ãxtLi°
[
cid
]->
£ssi⁄_b™dwidth
 = 
£ssi⁄_bwidth
;

233 
C⁄ãxtLi°
[
cid
]->
π˝_‰a˘i⁄
 =Ñtcp_fraction;

234  
RTP_OK
;

236  
	`îr‹debug
(
RTP_BAD_VALUE
, "RTPSessionSetBandwidth",

238 ()
cid
, 
£ssi⁄_bwidth
, 
π˝_‰a˘i⁄
);

240 
	}
}

242 
π≥º‹
 
	$RTPSessi⁄GëB™dwidth
(
c⁄ãxt
 
cid
, *
£ssi⁄_bwidth
,

243 *
π˝_‰a˘i⁄
){

244 
π≥º‹
 
îr
;

245 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëB™dwidth")Ë!
RTP_OK
)

246  
îr
;

247 *
£ssi⁄_bwidth
 = 
C⁄ãxtLi°
[
cid
]->
£ssi⁄_b™dwidth
;

248 *
π˝_‰a˘i⁄
 = 
C⁄ãxtLi°
[
cid
]->rtcp_fraction;

249  
RTP_OK
;

250 
	}
}

252 
π≥º‹
 
	$RTPSessi⁄SëU£rInfo
(
c⁄ãxt
 
cid
, *
öfo
){

253 
π≥º‹
 
îr
;

254 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄SëU£rInfo")Ë!
RTP_OK
)

255  
îr
;

256 
C⁄ãxtLi°
[
cid
]->
u£r_d©a
 = 
öfo
;

257  
RTP_OK
;

258 
	}
}

260 
π≥º‹
 
	$RTPSessi⁄GëU£rInfo
(
c⁄ãxt
 
cid
, **
öfo
){

261 
π≥º‹
 
îr
;

262 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëU£rInfo")Ë!
RTP_OK
)

263  
îr
;

264 *
öfo
 = 
C⁄ãxtLi°
[
cid
]->
u£r_d©a
;

265  
RTP_OK
;

266 
	}
}

269 
π≥º‹
 
	$RTPSessi⁄SëHighLevñInfo
(
c⁄ãxt
 
cid
, *
öfo
){

270 
π≥º‹
 
îr
;

271 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄SëHighLevñInfo")Ë!
RTP_OK
)

272  
îr
;

273 
C⁄ãxtLi°
[
cid
]->
nd_d©a
 = 
öfo
;

274  
RTP_OK
;

275 
	}
}

277 
π≥º‹
 
	$RTPSessi⁄GëHighLevñInfo
(
c⁄ãxt
 
cid
, **
öfo
){

278 
π≥º‹
 
îr
;

279 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëHighLevñInfo")Ë!
RTP_OK
)

280  
îr
;

281 *
öfo
 = 
C⁄ãxtLi°
[
cid
]->
nd_d©a
;

282  
RTP_OK
;

283 
	}
}

286 
π≥º‹
 
	$RTPSèπSessi⁄
(
c⁄ãxt
 
cid
) {

287 
π≥º‹
 
îr
;

288 
_RTP_CONTEXT
 *
cur_c⁄ãxt
;

289 
timevÆ
 
£nd_time
, 
dñè_time
;

291 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSèπSessi⁄")Ë!
RTP_OK
)

292  
îr
;

294 
cur_c⁄ãxt
 = 
C⁄ãxtLi°
[
cid
];

296 
cur_c⁄ãxt
->
time_ñ≠£d
 = 0;

297 
cur_c⁄ãxt
->
öôül
 = 
TRUE
;

298 
cur_c⁄ãxt
->
£ndög_pkt_cou¡
 = 0;

299 
cur_c⁄ãxt
->
£ndög_o˘ë_cou¡
 = 0;

301 
	`gëtimeofday
(&
cur_c⁄ãxt
->
œ°_π˝_£nd
, 
NULL
);

302 
cur_c⁄ãxt
->
øndom_Á˘‹
 = (.5 + 
	`dønd48
());

303 i‡(
cur_c⁄ãxt
->
π˝_‰a˘i⁄
 != 0.0 &&

304 
cur_c⁄ãxt
->
£ssi⁄_b™dwidth
 != 0){

305 
dñè_time
 = 
	`C⁄vîtDoubÀToTime
(
	`CompuãRTCPSídDñay
(
cur_c⁄ãxt
) *

306 
cur_c⁄ãxt
->
øndom_Á˘‹
);

307 
£nd_time
 =

308 
	`AddTimes
(&
cur_c⁄ãxt
->
œ°_π˝_£nd
, &
dñè_time
);

311 
	`RTPSëTimî
(
cid
, 
RTP_TIMER_SEND_RTCP
, 0, 
NULL
, &
£nd_time
);

314  
RTP_OK
;

315 
	}
}

317 
π≥º‹
 
	$RTPSt›Sessi⁄
(
c⁄ãxt
 
cid
, *
ªas⁄
) {

318 
π≥º‹
 
îr
;

319 
timevÆ
 
now
;

321 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSt›Sessi⁄")Ë!
RTP_OK
)

322  
îr
;

324 
	`gëtimeofday
(&
now
, 
NULL
);

325 
	`RTPSëTimî
(
cid
, 
RTP_TIMER_SEND_BYE_ALL
, 0, 
ªas⁄
, &
now
);

327 (
RTP_OK
);

328 
	}
}

331 
π≥º‹
 
	$RTPBuûdByePackë
(
c⁄ãxt
 
cid
, 
⁄e_c§c
, 
u_öt32
 
s§c
,

332 *
ªas⁄
, 
∑ddög_block
, *
buf„r
,

333 *
Àngth
)

335 *
bye_íd
;

336 
_RTP_CONTEXT
 *
the_c⁄ãxt
;

337 
π≥º‹
 
îr
;

339 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPBuûdByePackë")Ë!
RTP_OK
)

340  
îr
;

341 
the_c⁄ãxt
 = 
C⁄ãxtLi°
[
cid
];

344 i‡(
the_c⁄ãxt
->
öôül
 &&Åhe_c⁄ãxt->
£ndög_pkt_cou¡
==0){

346 
îr
 = 
RTP_ERROR_CANT_SEND_BYE
;

347 (
îr
);

351 
the_c⁄ãxt
->
öôül
 = 
FALSE
;

358 
bye_íd
 = 
buf„r
;

359 
bye_íd
 = 
	`Buûd_RRSR_Packës
(
the_c⁄ãxt
, bye_end);

361 i‡(
⁄e_c§c
) {

362 
bye_íd
 = 
	`BuûdIndividuÆByePackë
(
the_c⁄ãxt
, bye_íd, 
buf„r
,

363 
∑ddög_block
, 
ªas⁄
, 
s§c
);

366 
bye_íd
 = 
	`BuûdCompoundByePackë
(
the_c⁄ãxt
, bye_íd, 
buf„r
,

367 
∑ddög_block
, 
ªas⁄
);

370 *
Àngth
 = 
bye_íd
 - 
buf„r
;

373 
the_c⁄ãxt
->
œ°_pkt_size
 = *
Àngth
;

377 
the_c⁄ãxt
->
avg_π˝_size
 +=

378 (
the_c⁄ãxt
->
œ°_pkt_size
 -Åhe_c⁄ãxt->
avg_π˝_size
) *

379 
_RTCP_SIZE_GAIN
;

382 
the_c⁄ãxt
->
my_membîöfo
->
π˝_cou¡
++;

384 (
RTP_OK
);

385 
	}
}

387 
π≥º‹
 
	$RTPBuûdRTCPPackë
(
c⁄ãxt
 
cid
, 
π˝_sub∑πs_t
 
sub∑πs
,

388 
∑ddög_block
, *
buf„r
, *
Àngth
)

390 *
cur_pos
;

391 
timevÆ
 
π˝_dñay
;

392 
timevÆ
 
cur_time
, 
£nd_time
;

393 
lök
 *
dummy
;

394 
_RTP_CONTEXT
 *
the_c⁄ãxt
;

395 
π≥º‹
 
îr
;

397 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPBuûdRTCPPackë")Ë!
RTP_OK
)

398  
îr
;

399 
the_c⁄ãxt
 = 
C⁄ãxtLi°
[
cid
];

401 
cur_pos
 = 
buf„r
;

405 i‡(
the_c⁄ãxt
->
£ssi⁄_b™dwidth
 == 0.0 ||

406 
the_c⁄ãxt
->
π˝_‰a˘i⁄
 == 0.0){

407  
RTP_DONT_SEND_NOW
;

411 i‡(
sub∑πs
 !
RTCP_SUBPARTS_RRSR
){

412 i‡(!
	`DoRTCPRec⁄sidî©i⁄
(
the_c⁄ãxt
)) {

413  
RTP_DONT_SEND_NOW
;

419 i‡(
the_c⁄ãxt
->
öôül
 &&Åhe_c⁄ãxt->
£ndög_pkt_cou¡
==0){

420 
	`CompuãNewSSRC
(
the_c⁄ãxt
);

425 
the_c⁄ãxt
->
my_¥evious_s§c
 =Åhe_c⁄ãxt->
my_s§c
;

430 
the_c⁄ãxt
->
öôül
 = 
FALSE
;

436 i‡(
sub∑πs
 =
RTCP_SUBPARTS_SDES
) {

437 
dummy
 = 
NULL
;

438 
cur_pos
 = 
	`Buûd_RR_Packë
(
the_c⁄ãxt
, cur_pos, &
dummy
, 
TRUE
);

441 
cur_pos
 = 
	`Buûd_RRSR_Packës
(
the_c⁄ãxt
, cur_pos);

444 i‡(
sub∑πs
 !
RTCP_SUBPARTS_RRSR
){

445 
cur_pos
 = 
	`Buûd_SDES_Packë
(
the_c⁄ãxt
, cur_pos, 
buf„r
, 
∑ddög_block
);

448 *
Àngth
 = 
cur_pos
 - 
buf„r
;

451 
the_c⁄ãxt
->
œ°_pkt_size
 = *
Àngth
;

456 
the_c⁄ãxt
->
avg_π˝_size
 +=

457 (
the_c⁄ãxt
->
œ°_pkt_size
 -Åhe_c⁄ãxt->
avg_π˝_size
) *

458 
_RTCP_SIZE_GAIN
;

461 
the_c⁄ãxt
->
my_membîöfo
->
π˝_cou¡
++;

463 
	`Upd©eMembîshùLi°s
(
the_c⁄ãxt
);

465 i‡(
sub∑πs
 !
RTCP_SUBPARTS_RRSR
){

467 
the_c⁄ãxt
->
øndom_Á˘‹
 = .5 + 
	`dønd48
();

470 
	`gëtimeofday
(&
cur_time
, 
NULL
);

471 
the_c⁄ãxt
->
œ°_π˝_£nd
 = 
cur_time
;

472 
π˝_dñay
 = 
	`C⁄vîtDoubÀToTime
(
	`CompuãRTCPSídDñay
(
the_c⁄ãxt
) *

473 
the_c⁄ãxt
->
øndom_Á˘‹
);

474 
£nd_time
 = 
	`AddTimes
(&
cur_time
, &
π˝_dñay
);

475 
	`RTPSëTimî
(
the_c⁄ãxt
->
c⁄ãxt_num
, 
RTP_TIMER_SEND_RTCP
, 0, 
NULL
,

476 &
£nd_time
);

479 (
RTP_OK
);

480 
	}
}

483 
πp_∑ckë
 
	$RTPGëRTPPackë
(*
πµackë
, 
pkéí
){

484 
πp_∑ckë
 
the_∑ckë
;

488 
the_∑ckë
.
RTP_hódî
 = (
πp_hdr_t
*Ë
πµackë
;

490 i‡(
	`RTP_X
(*
the_∑ckë
.
RTP_hódî
) == 1){

493 
the_∑ckë
.
RTP_exãnsi⁄
 =

494 (
πp_hdr_ext
*Ë((*)
πµackë
 + (
πp_hdr_t
) +

495 (
	`RTP_CC
(*
the_∑ckë
.
RTP_hódî
) - 1) * 4);

501 
the_∑ckë
.
∑ylﬂd
 =

502 ((*Ë
the_∑ckë
.
RTP_exãnsi⁄
 +

503 (
the_∑ckë
.
RTP_exãnsi⁄
->
ñí
 + 1) * 4);

508 
the_∑ckë
.
RTP_exãnsi⁄
 = 
NULL
;

509 
the_∑ckë
.
∑ylﬂd
 =

510 ((*Ë
πµackë
 + (
πp_hdr_t
) +

511 (
	`RTP_CC
(*
the_∑ckë
.
RTP_hódî
) - 1) * 4);

513 
the_∑ckë
.
∑ylﬂd_Àn
 = 
pkéí
 + ()(
πµackë
 -Åhe_∑ckë.
∑ylﬂd
);

514 i‡(
	`RTP_P
(*
the_∑ckë
.
RTP_hódî
) == 1){

520 
the_∑ckë
.
∑ylﬂd_Àn
 -=

521 (Ë
the_∑ckë
.
∑ylﬂd
[the_∑ckë.
∑ylﬂd_Àn
-1];

523  
the_∑ckë
;

524 
	}
}

529 
u_öt32
 
	$RTPPackëGëCSRC
(
πp_∑ckë
 *
πµkt
, 
c§c_no
){

531  *(
u_öt32
*Ë((*)
πµkt
->
RTP_hódî
->
c§c
 + (4 * 
c§c_no
));

532 
	}
}

537 
	$RTPS∂ôCompoundRTCP
(*
π˝∑ckë
, *
ödpkts
[], 
Àn
){

540 
numpkts
 = 0;

541 * 
cuæoc
 = 
π˝∑ckë
;

542 
u_öt16
 
cur_π˝_pkéí
;

543 
Àn
 > 0){

544 
ödpkts
[
numpkts
] = 
cuæoc
;

545 
numpkts
++;

548 
cur_π˝_pkéí
 = *((
u_öt16
*Ë((*)
cuæoc
 + 2));

549 
Àn
 -4 * 
cur_π˝_pkéí
 + 4;

550 
cuæoc
 +4 * 
cur_π˝_pkéí
 + 4;

552  
numpkts
;

553 
	}
}

558 
π˝_∑ckë
 
	$RTPGëRTCPPackë
(*
π˝∑ckë
){

559 
π˝_∑ckë
 
the_∑ckë
;

560 *
p
 = 
π˝∑ckë
;

561 
i
;

563 
the_∑ckë
.
comm⁄
 = (
π˝_comm⁄
 *Ë
p
;

564 
p
 +
RTCP_COMMON_SIZE
;

566 
the_∑ckë
.
comm⁄
->
±
){

567 
RTCP_PACKET_SR
:

568 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
 = (
π˝_§
 *Ë
p
;

569 
p
 +
RTCP_SR_SIZE
;

570 
i
 = 0; i < 
	`RTCP_RC
(*
the_∑ckë
.
comm⁄
); i++) {

571 
the_∑ckë
.
v¨ü¡
.
§
.
rblock
[
i
] = (
π˝_ªp‹t_block
 *Ë
p
;

572 
p
 +
RTCP_REPORT_BLOCK_SIZE
;

574 
the_∑ckë
.
v¨ü¡
.
§
.
exãnsi⁄
 = 
p
;

577 
RTCP_PACKET_RR
:

578 
the_∑ckë
.
v¨ü¡
.
º
.
º_fixed
 = (
π˝_º
 *Ë
p
;

579 
p
 +
RTCP_RR_SIZE
;

580 
i
 = 0; i < 
	`RTCP_RC
(*
the_∑ckë
.
comm⁄
); i++) {

581 
the_∑ckë
.
v¨ü¡
.
º
.
rblock
[
i
] = (
π˝_ªp‹t_block
 *Ë
p
;

582 
p
 +
RTCP_REPORT_BLOCK_SIZE
;

584 
the_∑ckë
.
v¨ü¡
.
º
.
exãnsi⁄
 = 
p
;

587 
RTCP_PACKET_SDES
:

588 
the_∑ckë
.
v¨ü¡
.
sdes
.
ªmaödî
 = 
p
;

591 
RTCP_PACKET_BYE
:

592 
i
 = 0; i < 
	`RTCP_RC
(*
the_∑ckë
.
comm⁄
); i++) {

593 
the_∑ckë
.
v¨ü¡
.
bye
.
byeblock
[
i
] = (
π˝_bye_block
 *Ë
p
;

594 
p
 +
RTCP_BYE_BLOCK_SIZE
;

600 i‡(
π˝∑ckë
 + ((
the_∑ckë
.
comm⁄
->
Àn
 + 1Ë* 4Ë> 
p
) {

601 
the_∑ckë
.
v¨ü¡
.
bye
.
ªas⁄_Àngth
 = *
p
;

602 
the_∑ckë
.
v¨ü¡
.
bye
.
ªas⁄
 = 
p
 + 1;

606 
the_∑ckë
.
v¨ü¡
.
bye
.
ªas⁄_Àngth
 = 0;

607 
the_∑ckë
.
v¨ü¡
.
bye
.
ªas⁄
 = 
NULL
;

610 
RTCP_PACKET_APP
:

611 
the_∑ckë
.
v¨ü¡
.
≠p
.
≠p_fixed
 = (
π˝_≠p
 *Ë
p
;

612 
p
 +
RTCP_APP_SIZE
;

613 
the_∑ckë
.
v¨ü¡
.
≠p
.
≠pd©a
 = 
p
;

616 
the_∑ckë
.
v¨ü¡
.
unknown
.
d©a
 = 
p
;

619  
the_∑ckë
;

620 
	}
}

623 
	$GëFú°SDESIãmF‹SSRC
(
π˝_sdes_ôem
 *
the_ôem
, * 
°¨çoöt
){

625 
the_ôem
->
s§c
 = 
	`¡ohl
(*(
u_öt32
*)
°¨çoöt
);

626 
the_ôem
->
ty≥
 = *(
öt8
*)(
°¨çoöt
+4);

627 i‡(
the_ôem
->
ty≥
 != 0){

628 
the_ôem
->
Àn
 = *(
öt8
*)(
°¨çoöt
+5);

630 
the_ôem
->
off£t
 = (2 +Åhe_ôem->
Àn
) % 4;

633 
the_ôem
->
Àn
 = 0;

637 
the_ôem
->
off£t
 = 0;

639 
the_ôem
->
des¸ùti⁄
 = 
°¨çoöt
 + 6;

641 
the_ôem
->
chunkno
++;

643 
	}
}

645 
π˝_sdes_ôem
 
	$InôSDESIãmIãr
(
π˝_∑ckë
 *
π˝sdes
){

646 
π˝_sdes_ôem
 
my_ôem
;

647 
my_ôem
.
chunkno
 = 0;

648 
	`GëFú°SDESIãmF‹SSRC
(&
my_ôem
, 
π˝sdes
->
v¨ü¡
.
sdes
.
ªmaödî
);

649  
my_ôem
;

650 
	}
}

652 
π˝_sdes_ôem
 
	$GëNextIãm
(
π˝_sdes_ôem
 *
¥ev_ôem
){

653 
π˝_sdes_ôem
 
√w_ôem
;

654 i‡(
¥ev_ôem
->
ty≥
 == 0){

661 
√w_ôem
.
chunkno
 = 
¥ev_ôem
->chunkno;

662 
	`GëFú°SDESIãmF‹SSRC
(&
√w_ôem
,

663 
¥ev_ôem
->
des¸ùti⁄
 + 2 -Öªv_ôem->
off£t
);

666 
√w_ôem
.
s§c
 = 
¥ev_ôem
->ssrc;

667 
√w_ôem
.
chunkno
 = 
¥ev_ôem
->chunkno;

668 
√w_ôem
.
ty≥
 = *(
öt8
*Ë(
¥ev_ôem
->
des¸ùti⁄
 +

669 
¥ev_ôem
->
Àn
);

670 i‡(
√w_ôem
.
ty≥
 == 0){

672 
√w_ôem
.
Àn
 = 0;

673 
√w_ôem
.
off£t
 = 
¥ev_ôem
->offset;

676 
√w_ôem
.
Àn
 = *(
öt8
*)(
¥ev_ôem
->
des¸ùti⁄
 +

677 
¥ev_ôem
->
Àn
 + 1);

678 
√w_ôem
.
off£t
 = (
¥ev_ôem
->off£à+ 2 +Çew_ôem.
Àn
) % 4;

680 
√w_ôem
.
des¸ùti⁄
 = (
öt8
*)
¥ev_ôem
->description +

681 
¥ev_ôem
->
Àn
 + 2;

683  
√w_ôem
;

684 
	}
}

688 
π˝_ªp‹t_block
 
	$RTPGëRï‹tBlock
(
π˝_∑ckë
 *
π˝º§
, 
blockno
){

689 
π˝_ªp‹t_block
 *
the_block
;

690 
π˝_ªp‹t_block
 
dummy_block
;

692 
π˝º§
->
comm⁄
->
±
){

693 
RTCP_PACKET_SR
:

694 
the_block
 = 
π˝º§
->
v¨ü¡
.
§
.
rblock
[
blockno
];

696 
RTCP_PACKET_RR
:

697 
the_block
 = 
π˝º§
->
v¨ü¡
.
º
.
rblock
[
blockno
];

701 
the_block
 = &
dummy_block
;

702 
	`mem£t
((*)
the_block
, '\0', (
π˝_ªp‹t_block
));

705  *
the_block
;

706 
	}
}

708 
π˝_bye_block
 
	$RTPGëByeBlock
(
π˝_∑ckë
 *
π˝bye
, 
blockno
){

709  *
π˝bye
->
v¨ü¡
.
bye
.
byeblock
[
blockno
];

710 
	}
}

713 
π≥º‹
 
	$RTPSessi⁄GëMembîLi°
(
c⁄ãxt
 
cid
, 
membî_ôî©‹
 *
ôî
){

714 
membîshù_li°
 *
the_membî_li°
;

716 
π≥º‹
 
îr
;

717 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëMembîLi°")Ë!
RTP_OK
)

718  
îr
;

720 
the_membî_li°
 = &
C⁄ãxtLi°
[
cid
]->
RTP_MembîLi°
;

722 
ôî
->
cur_lök
 = 
the_membî_li°
->
a˘uÆ_li°
.
œ°_lök
;

723 
ôî
->
go_f‹w¨d
 = 
FALSE
;

724  
RTP_OK
;

725 
	}
}

735 
π≥º‹
 
	$RTPSessi⁄AddToC⁄åibut‹Li°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
) {

736 
membî
 *
the_membî
;

737 
π≥º‹
 
îr
;

738 
c⁄åibut‹_t
 *
√w
;

740 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄AddToC⁄åibut‹Li°")Ë!
RTP_OK
)

741  
îr
;

746 
√w
 = 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
;

747 
√w
 !
NULL
) {

748 if(
√w
->
s§c
 == ssrc) {

749  
	`îr‹debug
(
RTP_SSRC_IN_USE
, "RTPSessionAddToContributorList",

751 ()
cid
, (Ë
s§c
);

753 
√w
 =Çew->
√xt
;

759 if((
√w
 = 
	`mÆloc
((
c⁄åibut‹_t
))Ë=
NULL
) {

760  
	`îr‹debug
(
RTP_CANT_ALLOC_MEM
, "RTPSessionAddToContributorList",

763 
√w
->
√xt
 = 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
;

764 
√w
->
s§c
 = ssrc;

765 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
 = 
√w
;

772 if(
s§c
 =
C⁄ãxtLi°
[
cid
]->
my_s§c
) {

773 
the_membî
 = 
	`H™dÀSSRCCﬁlisi⁄
(
C⁄ãxtLi°
[
cid
],

774 
C⁄ãxtLi°
[
cid
]->
my_membîöfo
,

775 
NULL
, 
FALSE
, NULL, 1);

777 
the_membî
 = 
	`GëMembîFromSSRCHash
(
C⁄ãxtLi°
[
cid
], 
s§c
);

779 i‡(
the_membî
 =
NULL
){

780 
the_membî
 = 
	`E°ablishNewMembî
(
C⁄ãxtLi°
[
cid
], 
s§c
, 
NULL
, NULL,

781 
FALSE
, 
RTP_MEMBER_PENDING_CONTRIBUTOR
);

783 
the_membî
 = 
	`H™dÀSSRCCﬁlisi⁄
(
C⁄ãxtLi°
[
cid
],Åhe_member,

784 
NULL
, 
FALSE
, NULL, 1);

788 
the_membî
->
⁄_c§c_li°
 = 
TRUE
;

790  
RTP_OK
;

791 
	}
}

797 
π≥º‹
 
	$RTPSessi⁄AddToCSRCLi°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
) {

798 
size
;

799 
π≥º‹
 
îr
;

800 
c⁄åibut‹_t
 *
c⁄t
;

802 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄AddToCSRCLi°")Ë!
RTP_OK
)

803  
îr
;

807 if(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
 =
NULL
) {

808 
C⁄ãxtLi°
[
cid
]->
CSRCLi°
 = (
u_öt32
 *Ë
	`mÆloc
((u_öt32Ë* 
_RTP_MAX_CSRC
);

809 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
 = 0;

811 
size
 = 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
;

816 
c⁄t
 = 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
;

817 
c⁄t
 !
NULL
) {

818 if(
c⁄t
->
s§c
 == ssrc) ;

819 
c⁄t
 = c⁄t->
√xt
;

821 if(
c⁄t
 =
NULL
) {

822  
	`îr‹debug
(
RTP_NO_SUCH_CONTRIBUTOR
, "RTPSessionAddToCSRCList",

823 "Nÿsuch c⁄åibut‹ %d\n",(Ë
s§c
);

826 if(
C⁄ãxtLi°
[
cid
]->
CSRCÀn
 == 15) {

827  
	`îr‹debug
(
RTP_CSRC_LIST_FULL
, "RTPSessionAddToCSRCList",

831 
C⁄ãxtLi°
[
cid
]->
CSRCLi°
[
size
] = 
s§c
;

832 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
 += 1;

833  
RTP_OK
;

834 
	}
}

838 
π≥º‹
 
	$RTPSessi⁄RemoveFromCSRCLi°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
) {

839 
i
,
foundô
,
size
;

840 
π≥º‹
 
îr
;

842 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄RemoveFromCSRCLi°")Ë!
RTP_OK
)

843  
îr
;

847 if(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
 =
NULL
) {

848  
	`îr‹debug
(
RTP_CSRC_LIST_NOT_SET
, "RTPSessionRemoveFromCSRCList",

855 
size
 = 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
;

856 
foundô
 = 0;

857 
i
=0; i<
size
; i++){

859 i‡(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
[
i
] =
s§c
) {

860 
foundô
 = 1;

861 } if(
foundô
 == 1) {

862 
C⁄ãxtLi°
[
cid
]->
CSRCLi°
[
i
-1] = ContextList[cid]->CSRCList[i];

869 if(
foundô
 == 0) {

870  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, "RTPSessionRemoveFromCSRCList",

872 (
RTP_NO_SUCH_PERSON
);

877 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
 -= 1;

878 if(
C⁄ãxtLi°
[
cid
]->
CSRCÀn
 == 0)

879 
	`‰ì
(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
);

881 (
RTP_OK
);

883 
	}
}

887 
π≥º‹
 
	$RTPSessi⁄LowLevñRemoveFromC⁄åibut‹Li°
(
c⁄ãxt
 
cid
,

888 
u_öt32
 
s§c
,

889 *
ªas⁄
) {

890 
membî
 *
the_membî
;

891 
c⁄åibut‹_t
 *
c⁄t
, *
pc⁄t
;

892 
π≥º‹
 
îr
;

893 
≥rs⁄
 
p
;

894 
timevÆ
 
now
;

896 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPLowLevñSessi⁄RemoveFromC⁄åibut‹Li°")Ë!
RTP_OK
)

897  
îr
;

899 
c⁄t
 = 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
;

900 
pc⁄t
 = 
NULL
;

901 
c⁄t
 !
NULL
) {

902 if(
c⁄t
->
s§c
 == ssrc) ;

903 
pc⁄t
 = 
c⁄t
;

904 
c⁄t
 = c⁄t->
√xt
;

909 if(
c⁄t
 =
NULL
) {

910  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, "RTPSessionRemoveFromContributorList",

915 
	`RTPSessi⁄RemoveFromCSRCLi°
(
cid
,
s§c
);

918 
	`gëtimeofday
(&
now
, 
NULL
);

919 
	`RTPSëTimî
(
cid
, 
RTP_TIMER_SEND_BYE_CONTRIBUTOR
, 
s§c
, 
ªas⁄
, &
now
);

921 if((
îr
 = 
	`RTPSessi⁄GëUniqueIDF‹CSRC
(
cid
, 
s§c
, &
p
)Ë!
RTP_OK
) {

922 (
îr
);

924 
the_membî
 = 
	`GëMembîFromUniqueIDHash
(
C⁄ãxtLi°
[
cid
], 
p
);

927 if(
pc⁄t
 =
NULL
)

928 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
 = 
c⁄t
->
√xt
;

930 
pc⁄t
->
√xt
 = 
c⁄t
->next;

931 
	`‰ì
(
c⁄t
);

933 
	`RemoveMembî
(
C⁄ãxtLi°
[
cid
], 
the_membî
);

934 i‡(
C⁄ãxtLi°
[
cid
]->
Upd©eMembîCÆlBack
 !
NULL
){

935 
C⁄ãxtLi°
[
cid
]->
	`Upd©eMembîCÆlBack
(cid,

936 
the_membî
->
unique_id
,

937 
RTP_FLAG_DELETED_MEMBER
,

938 
NULL
);

940 
	`De°royMembî
(
C⁄ãxtLi°
[
cid
], 
the_membî
);

943 (
RTP_OK
);

944 
	}
}

946 
π≥º‹
 
	$RTPSessi⁄GëCSRCLi°
(
c⁄ãxt
 
cid
, 
u_öt32
 *
vÆue
, 
öt32
 *
size
){

948 
öt32
 
i
;

949 
π≥º‹
 
îr
;

950 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëCSRCLi°")Ë!
RTP_OK
)

951  
îr
;

952 i‡(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
 =
NULL
){

953  
	`îr‹debug
(
RTP_CSRC_LIST_NOT_SET
, "RTPSessionGetCSRCList",

955 ()
cid
);

957 i‡(*
size
 < 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
){

958 
	`îr‹debug
(
RTP_INSUFFICIENT_BUFFER
, "RTPSessionGetCSRCList",

960 ()
cid
, ()*
size
, ()
C⁄ãxtLi°
[cid]->
CSRCÀn
);

961 *
size
 = 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
;

962  
RTP_INSUFFICIENT_BUFFER
;

964 *
size
 = 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
;

965 
i
=0; i < *
size
; i++){

966 
vÆue
[
i
] = 
C⁄ãxtLi°
[
cid
]->
CSRCLi°
[i];

968  
RTP_OK
;

969 
	}
}

971 
π≥º‹
 
	$RTPSessi⁄GëUniqueIDF‹CSRC
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
, 
≥rs⁄
 *
p
){

972 
membî
 *
the_membî
;

973 
π≥º‹
 
îr
;

974 
c⁄åibut‹_t
 *
c⁄t
;

976 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSessi⁄GëUniqueIDF‹CSRC")Ë!
RTP_OK
)

977  
îr
;

979 
c⁄t
 = 
C⁄ãxtLi°
[
cid
]->
c⁄åibli°
;

980 
c⁄t
 !
NULL
) {

981 i‡(
c⁄t
->
s§c
 == ssrc) ;

982 
c⁄t
 = c⁄t->
√xt
;

984 i‡(
c⁄t
 =
NULL
) {

986  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, "RTPSessionGetUniqueIDForCSRC",

988 ()
cid
, ()
s§c
);

989  
RTP_NO_SUCH_PERSON
;

992 
the_membî
 = 
	`GëMembîFromSSRCHash
(
C⁄ãxtLi°
[
cid
], 
s§c
);

993 
the_membî
 !
NULL
){

994 i‡(
the_membî
->
⁄_c§c_li°
){

995 *
p
 = 
the_membî
->
unique_id
;

996  
RTP_OK
;

998 
the_membî
 =Åhe_membî->
cﬁlides_wôh_√xt
;

1000  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, "RTPSessionGetUniqueIDForCSRC",

1001 "c⁄ãxà%d CSRC %xÇŸ o¿CSRCÜi°", ()
cid
, ()
s§c
);

1002  
RTP_NO_SUCH_PERSON
;

1003 
	}
}

1005 
π≥º‹
 
	$RTPGëRTPHódîLígth
(
c⁄ãxt
 
cid
, *
Àngth
)

1007 
π≥º‹
 
îr
;

1008 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPGëRTPHódîLígth")Ë!
RTP_OK
)

1009  
îr
;

1016 *
Àngth
 = ((
πp_hdr_t
Ë- (
u_öt32
))

1017 + ((
u_öt32
Ë* 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
)

1018 + ((
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
 !
NULL
) ?

1019 (
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
->
ñí
 * 4 + 4) :

1022 (
RTP_OK
);

1023 
	}
}

1025 
π≥º‹
 
	$RTPBuûdRTPHódî
(
c⁄ãxt
 
cid
, 
öt32
 
tsöc
, 
öt8
 
m¨kî
,

1026 
öt16
 
±i
, 
öt8
 
∑ddög
, 
∑ylﬂd_Àn
,

1027 *
buf„r
, *
buÊí
)

1036 
πp_hdr_t
 *
the_hódî
;

1037 
πp_hdr_ext
 *
hdr_ext
;

1038 *
buÂå
;

1039 
buÊí_åue
;

1040 
timevÆ
 
now
;

1041 
π≥º‹
 
îr
;

1043 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPBuûdRTPHódî")Ë!
RTP_OK
)

1044  
îr
;

1045 i‡(
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
){

1046  
	`îr‹debug
(
RTP_CANT_CALL_FUNCTION
, "RTPBuildRTPHeader",

1048 ()
cid
);

1055 
buÊí_åue
 = ((
πp_hdr_t
Ë- (
u_öt32
))

1056 + ((
u_öt32
Ë* 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
)

1057 + ((
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
 !
NULL
) ?

1058 (
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
->
ñí
 * 4 + 4) :

1061 i‡(*
buÊí
 < 
buÊí_åue
) {

1062  
	`îr‹debug
(
RTP_INSUFFICIENT_BUFFER
, "RTPBuildRTPHeader",

1064 ()
cid
);

1066 *
buÊí
 = 
buÊí_åue
;

1068 
buÂå
 = 
buf„r
;

1069 
the_hódî
 = (
πp_hdr_t
 *Ë
buf„r
;

1070 
	`mem£t
(
buÂå
, '\0', 
buÊí_åue
);

1073 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
TRUE
;

1077 i‡(
C⁄ãxtLi°
[
cid
]->
öôül
 && C⁄ãxtLi°[cid]->
£ndög_pkt_cou¡
==0){

1079 
	`CompuãNewSSRC
(
C⁄ãxtLi°
[
cid
]);

1084 
C⁄ãxtLi°
[
cid
]->
my_¥evious_s§c
 = C⁄ãxtLi°[cid]->
my_s§c
;

1087 
	`gëtimeofday
(&
now
, 
NULL
);

1088 
	`Upd©eSídîTime
(
C⁄ãxtLi°
[
cid
], C⁄ãxtLi°[cid]->
my_membîöfo
,

1089 
now
,1);

1090 
C⁄ãxtLi°
[
cid
]->
time_ñ≠£d
 +
tsöc
;

1092 
	`SET_RTP_VERSION
(*
the_hódî
, 
_RTP_VERSION
);

1093 
	`SET_RTP_X
(*
the_hódî
, 0);

1094 i‡(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
 =
NULL
){

1095 
	`SET_RTP_CC
(*
the_hódî
, 0);

1098 
	`SET_RTP_CC
(*
the_hódî
, 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
);

1100 
	`SET_RTP_M
(*
the_hódî
, 
m¨kî
);

1101 
	`SET_RTP_PT
(*
the_hódî
, 
±i
);

1102 
	`SET_RTP_P
(*
the_hódî
, (
∑ddög
 != 0));

1103 
the_hódî
->
£q
 = (
u_öt16
Ë
C⁄ãxtLi°
[
cid
]->
£q_no
;

1104 
C⁄ãxtLi°
[
cid
]->
£q_no
++;

1105 
the_hódî
->
ts
 = 
C⁄ãxtLi°
[
cid
]->
time_ñ≠£d
 +

1106 
C⁄ãxtLi°
[
cid
]->
öô_RTP_time°amp
;

1107 
the_hódî
->
s§c
 = 
C⁄ãxtLi°
[
cid
]->
my_s§c
;

1110 
buÂå
 +(
πp_hdr_t
Ë- (
u_öt32
);

1112 i‡(
C⁄ãxtLi°
[
cid
]->
CSRCLi°
 !
NULL
) {

1113 
	`mem˝y
(
buÂå
, (*Ë
C⁄ãxtLi°
[
cid
]->
CSRCLi°
,

1114 (
u_öt32
Ë* 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
);

1115 
buÂå
 +(
u_öt32
Ë* 
C⁄ãxtLi°
[
cid
]->
CSRCÀn
;

1118 i‡(
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
 !
NULL
) {

1119 
	`mem˝y
(
buÂå
, (*Ë
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
,

1120 
C⁄ãxtLi°
[
cid
]->
hdr_exãnsi⁄
->
ñí
 * 4 + 4);

1122 
hdr_ext
 = (
πp_hdr_ext
 *Ë
buÂå
;

1125 
hdr_ext
 = 
NULL
;

1128 
C⁄ãxtLi°
[
cid
]->
£ndög_o˘ë_cou¡
 +
∑ylﬂd_Àn
;

1130 
C⁄ãxtLi°
[
cid
]->
£ndög_pkt_cou¡
++;

1132 
the_hódî
->
£q
 = 
	`ht⁄s
(the_header->seq);

1133 
the_hódî
->
ts
 = 
	`ht⁄l
(the_header->ts);

1134 
the_hódî
->
s§c
 = 
	`ht⁄l
(the_header->ssrc);

1136 i‡(
hdr_ext
 !
NULL
){

1137 
hdr_ext
->
ëy≥
 =

1138 
	`ht⁄s
(
hdr_ext
->
ëy≥
);

1139 
hdr_ext
->
ñí
 =

1140 
	`ht⁄s
(
hdr_ext
->
ñí
);

1143 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

1144 (
RTP_OK
);

1145 
	}
}

1148 
π≥º‹
 
	$RTPFödMembî
(
c⁄ãxt
 
cid
, 
membîöfo
 
mi
, *
sdes_fõld
,

1149 
≥rs⁄
 *
p
){

1150 
lök
 *
cur_lök
;

1152 
π≥º‹
 
îr
;

1153 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPFödMembî")Ë!
RTP_OK
)

1154  
îr
;

1156 
mi
--;

1157 i‡(
mi
 >
_RTP_NUM_SDES_TYPES
){

1158  
	`îr‹debug
(
RTP_NO_SUCH_SDES
, "RTPMemberInfoSetSDES",

1160 ()
cid
, 
mi
);

1163 
cur_lök
 = 
C⁄ãxtLi°
[
cid
]->
RTP_MembîLi°
.
a˘uÆ_li°
.
œ°_lök
;

1164 
cur_lök
 !
NULL
){

1165 i‡(
	`°rcmp
(
sdes_fõld
, 
cur_lök
->
my_membî
->
sdes_öfo
[(Ë
mi
])==0){

1166 *
p
 = 
cur_lök
->
my_membî
->
unique_id
;

1167  
RTP_OK
;

1169 
cur_lök
 = cur_lök->
¥ev_lök
;

1172  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, "RTPFindMember",

1174 ()
cid
, (Ë
mi
, 
sdes_fõld
);

1175 
	}
}

1178 
π≥º‹
 
	$RTPMo°Re˚¡RTPTime
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1179 
timevÆ
 *
the_time
){

1180 
membî
 *
the_membî
;

1181 
π≥º‹
 
îr
;

1182 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMo°Re˚¡RTPTime")Ë!
RTP_OK
)

1183  
îr
;

1184 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1185 "RTPMo°Re˚¡RTPTime")Ë!
RTP_OK
)

1186  
îr
;

1187 *
the_time
 = 
the_membî
->
œ°_πp_£nd_time
;

1188  
RTP_OK
;

1189 
	}
}

1191 
π≥º‹
 
	$RTPMo°Re˚¡RTCPTime
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1192 
timevÆ
 *
the_time
){

1193 
membî
 *
the_membî
;

1194 
π≥º‹
 
îr
;

1195 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMo°Re˚¡RTCPTime")Ë!
RTP_OK
)

1196  
îr
;

1197 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1198 "RTPMo°Re˚¡RTCPTime")Ë!
RTP_OK
)

1199  
îr
;

1201 *
the_time
 = 
the_membî
->
œ°_π˝_£nd_time
;

1202  
RTP_OK
;

1203 
	}
}

1205 
π≥º‹
 
	$RTPMo°Re˚¡RTPPîs⁄
(
c⁄ãxt
 
cid
, 
≥rs⁄
 *
p
){

1206 
π≥º‹
 
îr
;

1207 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMo°Re˚¡RTPPîs⁄")Ë!
RTP_OK
)

1208  
îr
;

1209 i‡(
C⁄ãxtLi°
[
cid
]->
mo°_ª˚¡_πp_£ndî
 =
NULL
){

1210  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, "RTPMostRecentRTPPerson",

1211 "c⁄ãxà%dÖîs⁄Üe· o∏nÿπ∞∑ckë†ª˚ived", ()
cid
);

1213 *
p
 = 
C⁄ãxtLi°
[
cid
]->
mo°_ª˚¡_πp_£ndî
->
unique_id
;

1214  
RTP_OK
;

1215 
	}
}

1217 
π≥º‹
 
	$RTPMo°Re˚¡RTCPPîs⁄
(
c⁄ãxt
 
cid
, 
≥rs⁄
 *
p
){

1218 
π≥º‹
 
îr
;

1219 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMo°Re˚¡RTCPPîs⁄")Ë!
RTP_OK
)

1220  
îr
;

1221 i‡(
C⁄ãxtLi°
[
cid
]->
mo°_ª˚¡_π˝_£ndî
 =
NULL
){

1222  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, "RTPMostRecentRTCPPerson",

1224 ()
cid
);

1226 *
p
 = 
C⁄ãxtLi°
[
cid
]->
mo°_ª˚¡_π˝_£ndî
->
unique_id
;

1227  
RTP_OK
;

1228 
	}
}

1231 
π≥º‹
 
	$RTPMo°Re˚¡Sockaddr
(
c⁄ãxt
 
cid
, 
sockaddr
 *
addr
) {

1232 
π≥º‹
 
îr
;

1234 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMo°Re˚¡Addr")Ë!
RTP_OK
)

1235  
îr
;

1237 i‡(
C⁄ãxtLi°
[
cid
]->
mo°_ª˚¡_addr
.
ß_Ámûy
 ==

1238 
_RTP_ADDRESS_NOT_YET_KNOWN
) {

1239  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPMostRecentAddr",

1240 "c⁄ãxà%dÇÿ∑ckë†ªcõved", ()
cid
);

1243 
	`mem˝y
(
addr
, &
C⁄ãxtLi°
[
cid
]->
mo°_ª˚¡_addr
, (
sockaddr
));

1245  
RTP_OK
;

1246 
	}
}

1252 
π≥º‹
 
	$RTPMembîInfoGëSètus
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membî°©us
 *
s
,

1253 
£ndî°©us
 *
£ndî
 )

1255 
membî
 *
the_membî
;

1256 
π≥º‹
 
îr
;

1257 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëSètus")Ë!
RTP_OK
)

1258  
îr
;

1261 if((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1262 "RTPMembîGëSètus")Ë!
RTP_OK
)

1263  
îr
;

1264 *
s
 = 
the_membî
->
°©us
;

1265 *
£ndî
 = 
the_membî
->
£nd°©us
;

1267 (
RTP_OK
);

1268 
	}
}

1270 
π≥º‹
 
	$RTPMembîInfoSëSDES
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membîöfo
 
SDES_fõld
,

1271 *
the_öfo
){

1272 
membî
 *
the_membî
;

1273 
π≥º‹
 
îr
;

1274 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëSDES")Ë!
RTP_OK
)

1275  
îr
;

1276 
SDES_fõld
--;

1277 i‡(
SDES_fõld
 >
_RTP_NUM_SDES_TYPES
){

1278  
	`îr‹debug
(
RTP_NO_SUCH_SDES
, "RTPMemberInfoSetSDES",

1280 ()
cid
, 
SDES_fõld
);

1282 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1283 "RTPMembîInfoSëSDES")Ë!
RTP_OK
)

1284  
îr
;

1286 i‡(
p
 !0 && !
the_membî
->
⁄_c§c_li°
){

1287  
	`îr‹debug
(
RTP_PERSON_DATA_PROTECTED
, "RTPMemberInfoSetSDES",

1289 ()
cid
, 
p
);

1293 i‡(
the_membî
->
sdes_öfo
[
SDES_fõld
] !
NULL
){

1294 
	`‰ì
(
the_membî
->
sdes_öfo
[
SDES_fõld
]);

1295 if(
SDES_fõld
 =
RTP_MI_CNAME
) {

1296 
	`RemoveMembîFromCNAMEHash
(
C⁄ãxtLi°
[
cid
], 
the_membî
);

1300 
the_membî
->
sdes_öfo
[
SDES_fõld
] = (*Ë
	`mÆloc
(() *

1301 (
	`°æí
(
the_öfo
) + 1));

1302 
	`°r˝y
(
the_membî
->
sdes_öfo
[
SDES_fõld
], 
the_öfo
);

1303 
the_membî
->
sdes_öfo
[
SDES_fõld
][
	`°æí
(
the_öfo
)] = '\0';

1305 if(
SDES_fõld
 =
RTP_MI_CNAME
) {

1306 
	`E¡îCNAMEHashTabÀ
(
C⁄ãxtLi°
[
cid
], 
the_membî
);

1309  
RTP_OK
;

1310 
	}
}

1314 
π≥º‹
 
	$RTPMembîInfoGëSDES
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membîöfo
 
SDES_fõld
,

1315 *
the_öfo
){

1316 
membî
 *
the_membî
;

1317 
π≥º‹
 
îr
;

1318 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëSDES")Ë!
RTP_OK
)

1319  
îr
;

1320 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1321 "RTPMembîInfoGëSDES")Ë!
RTP_OK
)

1322  
îr
;

1324 
SDES_fõld
--;

1325 i‡(
SDES_fõld
 >
_RTP_NUM_SDES_TYPES
){

1326  
	`îr‹debug
(
RTP_NO_SUCH_SDES
, "RTPMemberInfoGetSDES",

1328 ()
cid
, 
SDES_fõld
);

1331 i‡(
the_membî
->
sdes_öfo
[
SDES_fõld
] =
NULL
){

1332 
the_öfo
[0] = '\0';

1335 
	`°r˝y
(
the_öfo
, 
the_membî
->
sdes_öfo
[
SDES_fõld
]);

1336 
the_öfo
[
	`°æí
(
the_membî
->
sdes_öfo
[
SDES_fõld
])] = '\0';

1338  
RTP_OK
;

1339 
	}
}

1342 
π≥º‹
 
	$RTPMembîInfoGëRTPSockaddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1343 
sockaddr
 *
addr
) {

1344 
membî
 *
the_membî
;

1345 
π≥º‹
 
îr
;

1347 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëRTPAddr")Ë!
RTP_OK
)

1348  
îr
;

1349 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1350 "RTPMembîInfoGëRTPAddr")Ë!
RTP_OK
)

1351  
îr
;

1353 
	`mem˝y
(
addr
, &
the_membî
->
my_addr
[0], (
sockaddr
));

1355  
RTP_OK
;

1356 
	}
}

1359 
π≥º‹
 
	$RTPMembîInfoGëRTCPSockaddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1360 
sockaddr
 *
addr
) {

1361 
membî
 *
the_membî
;

1362 
π≥º‹
 
îr
;

1364 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëRTCPAddr")Ë!
RTP_OK
)

1365  
îr
;

1366 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1367 "RTPMembîInfoGëRTCPAddr")Ë!
RTP_OK
)

1368  
îr
;

1370 
	`mem˝y
(
addr
, &
the_membî
->
my_addr
[1], (
sockaddr
));

1372  
RTP_OK
;

1373 
	}
}

1375 
π≥º‹
 
	$RTPMembîInfoSëNTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1376 
¡p64
 
NTP_time
){

1377 
membî
 *
the_membî
;

1378 
π≥º‹
 
îr
;

1379 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëNTP")Ë!
RTP_OK
)

1380  
îr
;

1381 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1382 "RTPMembîInfoSëNTP")Ë!
RTP_OK
)

1383  
îr
;

1385 i‡(
p
 !0 && !
the_membî
->
⁄_c§c_li°
){

1386  
	`îr‹debug
(
RTP_PERSON_DATA_PROTECTED
, "RTPMemberInfoSetNTP",

1388 ()
cid
, 
p
);

1389  
RTP_PERSON_DATA_PROTECTED
;

1391 
the_membî
->
¡p_time°amp
 = 
NTP_time
;

1392  
RTP_OK
;

1393 
	}
}

1395 
π≥º‹
 
	$RTPMembîInfoGëNTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1396 
¡p64
 *
NTP_time
){

1397 
membî
 *
the_membî
;

1398 
π≥º‹
 
îr
;

1399 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëNTP")Ë!
RTP_OK
)

1400  
îr
;

1401 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1402 "RTPMembîInfoGëNTP")Ë!
RTP_OK
)

1403  
îr
;

1405 *
NTP_time
 = 
the_membî
->
¡p_time°amp
;

1406  
RTP_OK
;

1407 
	}
}

1410 
π≥º‹
 
	$RTPMembîInfoSëRTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1411 
öt32
 
πp_°amp
){

1412 
membî
 *
the_membî
;

1413 
π≥º‹
 
îr
;

1414 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëRTP")Ë!
RTP_OK
)

1415  
îr
;

1416 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1417 "RTPMembîInfoSëRTP")Ë!
RTP_OK
)

1418  
îr
;

1420 i‡(
p
 !0 && !
the_membî
->
⁄_c§c_li°
){

1421  
	`îr‹debug
(
RTP_PERSON_DATA_PROTECTED
, "RTPMemberInfoSetRTP",

1423 ()
cid
, 
p
);

1425 
the_membî
->
πp_time°amp
 = 
πp_°amp
;

1426  
RTP_OK
;

1427 
	}
}

1429 
π≥º‹
 
	$RTPMembîInfoGëRTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1430 
öt32
 *
πp_°amp
){

1431 
membî
 *
the_membî
;

1432 
π≥º‹
 
îr
;

1433 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëRTP")Ë!
RTP_OK
)

1434  
îr
;

1435 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1436 "RTPMembîInfoGëRTP")Ë!
RTP_OK
)

1437  
îr
;

1439 *
πp_°amp
 = 
the_membî
->
πp_time°amp
;

1440  
RTP_OK
;

1441 
	}
}

1444 
π≥º‹
 
	$RTPMembîInfoSëPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1445 
öt32
 
cou¡
){

1446 
membî
 *
the_membî
;

1447 
π≥º‹
 
îr
;

1448 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëPktCou¡")Ë!
RTP_OK
)

1449  
îr
;

1450 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1451 "RTPMembîInfoSëPktCou¡")Ë!
RTP_OK
)

1452  
îr
;

1454 i‡(
p
 !0 && !
the_membî
->
⁄_c§c_li°
){

1455  
	`îr‹debug
(
RTP_PERSON_DATA_PROTECTED
, "RTPMemberInfoSetPktCount",

1457 ()
cid
, 
p
);

1458  
RTP_PERSON_DATA_PROTECTED
;

1460 
the_membî
->
pkt_cou¡
 = 
cou¡
;

1461  
RTP_OK
;

1462 
	}
}

1464 
π≥º‹
 
	$RTPMembîInfoGëPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1465 
öt32
 *
cou¡
){

1466 
membî
 *
the_membî
;

1467 
π≥º‹
 
îr
;

1468 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëPktCou¡")Ë!
RTP_OK
)

1469  
îr
;

1470 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1471 "RTPMembîInfoGëPktCou¡")Ë!
RTP_OK
)

1472  
îr
;

1474 *
cou¡
 = 
the_membî
->
pkt_cou¡
;

1475  
RTP_OK
;

1476 
	}
}

1480 
π≥º‹
 
	$RTPMembîInfoSëRTCPPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
öt32
 
cou¡
)

1482 
membî
 *
the_membî
;

1483 
π≥º‹
 
îr
;

1484 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëRTCPPktCou¡")Ë!
RTP_OK
)

1485  
îr
;

1486 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1487 "RTPMembîInfoSëRTCPPktCou¡")Ë!
RTP_OK
)

1488  
îr
;

1490 i‡(
p
 !0 && !
the_membî
->
⁄_c§c_li°
){

1491  
	`îr‹debug
(
RTP_PERSON_DATA_PROTECTED
, "RTPMemberInfoSetRTCPPktCount",

1493 ()
cid
, 
p
);

1495 
the_membî
->
π˝_cou¡
 = 
cou¡
;

1496  
RTP_OK
;

1497 
	}
}

1499 
π≥º‹
 
	$RTPMembîInfoGëRTCPPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
öt32
 *
cou¡
)

1501 
membî
 *
the_membî
;

1502 
π≥º‹
 
îr
;

1503 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëRTCPPktCou¡")Ë!
RTP_OK
)

1504  
îr
;

1505 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1506 "RTPMembîInfoGëRTCPPktCou¡")Ë!
RTP_OK
)

1507  
îr
;

1509 *
cou¡
 = 
the_membî
->
π˝_cou¡
;

1510  
RTP_OK
;

1511 
	}
}

1516 
π≥º‹
 
	$RTPMembîInfoSëO˘Cou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1517 
öt32
 
cou¡
){

1518 
membî
 *
the_membî
;

1519 
π≥º‹
 
îr
;

1520 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëO˘Cou¡")Ë!
RTP_OK
)

1521  
îr
;

1522 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1523 "RTPMembîInfoSëO˘Cou¡")Ë!
RTP_OK
)

1524  
îr
;

1526 i‡(
p
 !0 && !
the_membî
->
⁄_c§c_li°
){

1527  
	`îr‹debug
(
RTP_PERSON_DATA_PROTECTED
, "RTPMemberInfoSetOctCount",

1529 ()
cid
, 
p
);

1531 
the_membî
->
o˘_cou¡
 = 
cou¡
;

1532  
RTP_OK
;

1533 
	}
}

1535 
π≥º‹
 
	$RTPMembîInfoGëO˘Cou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1536 
öt32
 *
cou¡
){

1537 
membî
 *
the_membî
;

1538 
π≥º‹
 
îr
;

1539 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëO˘Cou¡")Ë!
RTP_OK
)

1540  
îr
;

1541 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1542 "RTPMembîInfoGëO˘Cou¡")Ë!
RTP_OK
)

1543  
îr
;

1545 *
cou¡
 = 
the_membî
->
o˘_cou¡
;

1546  
RTP_OK
;

1547 
	}
}

1550 
π≥º‹
 
	$RTPMembîInfoSëSSRC
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
, u_öt32 
mask
){

1551 
membî
 *
the_membî
;

1552 
π≥º‹
 
îr
;

1553 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëSSRC")Ë!
RTP_OK
)

1554  
îr
;

1555 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 0, &
the_membî
,

1556 "RTPMembîInfoSëSSRC")Ë!
RTP_OK
)

1557  
îr
;

1559 
C⁄ãxtLi°
[
cid
]->
°©ic_s§c
 = 
s§c
;

1560 
C⁄ãxtLi°
[
cid
]->
s§c_mask
 = 
mask
;

1562  
RTP_OK
;

1563 
	}
}

1565 
π≥º‹
 
	$RTPMembîInfoGëSSRC
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1566 
u_öt32
 *
s§c
){

1567 
membî
 *
the_membî
;

1568 
π≥º‹
 
îr
;

1569 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëSSRC")Ë!
RTP_OK
)

1570  
îr
;

1571 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1572 "RTPMembîInfoGëSSRC")Ë!
RTP_OK
)

1573  
îr
;

1575 *
s§c
 = 
the_membî
->ssrc;

1576  
RTP_OK
;

1577 
	}
}

1580 
π≥º‹
 
	$RTPMembîInfoSëU£rInfo
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1581 * 
öfo
){

1582 
membî
 *
the_membî
;

1583 
π≥º‹
 
îr
;

1584 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoSëU£rInfo")Ë!
RTP_OK
)

1585  
îr
;

1586 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1587 "RTPMembîInfoSëU£rInfo")Ë!
RTP_OK
)

1588  
îr
;

1590 
the_membî
->
u£r_d©a
 = 
öfo
;

1591  
RTP_OK
;

1592 
	}
}

1595 
π≥º‹
 
	$RTPMembîInfoGëU£rInfo
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1596 ** 
öfo
){

1597 
membî
 *
the_membî
;

1598 
π≥º‹
 
îr
;

1599 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPMembîInfoGëU£rInfo")Ë!
RTP_OK
)

1600  
îr
;

1601 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1602 "RTPMembîInfoGëU£rInfo")Ë!
RTP_OK
)

1603  
îr
;

1605 *
öfo
 = 
the_membî
->
u£r_d©a
;

1606  
RTP_OK
;

1607 
	}
}

1610 
π≥º‹
 
	$RTPSídîInfoGëFú°Re˚ivîRï‹t
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1611 
ª˚ivî_ªp‹t_ôî©‹
 *
the_ôî©‹
, 
ª˚ivî_ªp‹t
 *
ªp‹t
){

1613 
membî
 *
the_membî
;

1614 
T˛_HashE¡ry
 *
the_íåy
;

1615 
π≥º‹
 
îr
;

1617 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSídîInfoGëFú°Re˚ivîRï‹t")Ë!
RTP_OK
)

1618  
îr
;

1619 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1620 "RTPSídîInfoGëFú°Re˚ivîRï‹t")Ë!
RTP_OK
)

1621  
îr
;

1623 i‡(
the_membî
->
£nd°©us
 =
RTP_SENDER_NOT
) {

1624  
	`îr‹debug
(
RTP_NO_SUCH_SENDER
, "RTPSenderInfoGetFirstReceiverReport",

1625 "c⁄ãxà%d,Öîs⁄ %ld i†nŸá sídî", ()
cid
, 
p
);

1628 
the_íåy
 = 
	`T˛_Fú°HashE¡ry
(&
the_membî
->
RR_Hash
,

1629 (
T˛_HashSórch
 *Ë
the_ôî©‹
);

1630 if(
the_íåy
 !
NULL
) {

1631 
	`mem˝y
(
ªp‹t
, 
	`T˛_GëHashVÆue
(
the_íåy
), (
ª˚ivî_ªp‹t
));

1632  
RTP_OK
;

1634  
	`îr‹debug
(
RTP_END_OF_LIST
, "RTPSenderInfoGetFirstReceiverReport",

1637 
	}
}

1641 
π≥º‹
 
	$RTPSídîInfoGëNextRe˚ivîRï‹t
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1642 
ª˚ivî_ªp‹t_ôî©‹
 *
the_ôî©‹
, 
ª˚ivî_ªp‹t
 *
ªp‹t
){

1644 
membî
 *
the_membî
;

1645 
T˛_HashE¡ry
 *
the_íåy
;

1646 
π≥º‹
 
îr
;

1648 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSídîInfoGëNextRe˚ivîRï‹t")Ë!
RTP_OK
)

1650  
îr
;

1651 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1652 "RTPSídîInfoGëNextRe˚ivîRï‹t")Ë!
RTP_OK
)

1653  
îr
;

1655 i‡(
the_membî
->
£nd°©us
 =
RTP_SENDER_NOT
) {

1656  
	`îr‹debug
(
RTP_NO_SUCH_SENDER
, "RTPSenderInfoGetNextReceiverReport",

1657 "c⁄ãxà%d,Öîs⁄ %ld i†nŸá sídî", ()
cid
, 
p
);

1660 
the_íåy
 = 
	`T˛_NextHashE¡ry
((
T˛_HashSórch
 *Ë
the_ôî©‹
);

1662 if(
the_íåy
 !
NULL
) {

1663 
	`mem˝y
(
ªp‹t
, 
	`T˛_GëHashVÆue
(
the_íåy
), (
ª˚ivî_ªp‹t
));

1664  
RTP_OK
;

1666  
	`îr‹debug
(
RTP_END_OF_LIST
, "RTPSenderInfoGetNextReceiverReport",

1669 
	}
}

1673 
π≥º‹
 
	$RTPSídîInfoGëLoˇlRe˚±i⁄
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1674 
ª˚ivî_ªp‹t
 *
ªp‹t
)

1676 
membî
 *
the_membî
;

1677 
π≥º‹
 
îr
;

1678 
π˝_ªp‹t_block
 
the_block
;

1680 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSídîInfoGëFøcLo°")Ë!
RTP_OK
)

1681  
îr
;

1682 i‡((
îr
 = 
	`GëMembîF‹C⁄ãxt
(
cid
, 
p
, &
the_membî
,

1683 "RTPSídîInfoGëFøcLo°")Ë!
RTP_OK
)

1684  
îr
;

1686 i‡(
the_membî
->
loˇl_öfo
 =
NULL
) {

1687  
	`îr‹debug
(
RTP_NO_SUCH_SENDER
, "RTPSenderInfoGetFracLost",

1688 "c⁄ãxà%d,Öîs⁄ %ld i†nŸá sídî", ()
cid
, 
p
);

1691 
	`CompuãBlockInfo
(
C⁄ãxtLi°
[
cid
], 
the_membî
, &
the_block
, 
NULL
);

1693 
ªp‹t
->
ªp‹ãr
 = 
C⁄ãxtLi°
[
cid
]->
my_membîöfo
->
unique_id
;

1694 
ªp‹t
->
‰a˘i⁄_lo°
 = 
the_block
.
‰ac_lo°
;

1695 
ªp‹t
->
cum_lo°
 = 
the_block
.cum_lost;

1696 
ªp‹t
->
highe°_£qno
 = 
the_block
.highest_seqno;

1697 
ªp‹t
->
jôãr
 = 
the_block
.jitter;

1698 
ªp‹t
->
œ°_§
 = 
the_block
.
l§
;

1699 
ªp‹t
->
dñay_œ°_§
 = 
the_block
.
dl§
;

1701  
RTP_OK
;

1702 
	}
}

1706 
π≥º‹
 
	$RTPPackëRe˚ived
(
c⁄ãxt
 
cid
, *
πp_pkt_°ªam
, 
Àn
,

1707 
sockaddr
 
‰om_addr
, 
‰omaddæí
,

1708 
isRTCP
, 
possibÀ_lo›back
){

1709 
u_öt32
 
pkt_s§c
;

1710 
πp_∑ckë
 
πµ
;

1711 
π˝_∑ckë
 
π˝p
;

1712 
π˝_sdes_ôem
 
sdi
;

1713 
π˝_bye_block
 
bb
;

1714 
∑πs
;

1715 
i
;

1716 * 
£gmít
[
_RTP_MAX_PKTS_IN_COMPOUND
];

1717 
π≥º‹
 
îr
;

1718 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPPackëRe˚ived")Ë!
RTP_OK
)

1719  
îr
;

1720 i‡(
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
){

1721  
	`îr‹debug
(
RTP_CANT_CALL_FUNCTION
, "RTPPacketReceived",

1723 ()
cid
);

1726 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
TRUE
;

1729 
	`mem˝y
(&
C⁄ãxtLi°
[
cid
]->
mo°_ª˚¡_addr
, &
‰om_addr
,

1730 
‰omaddæí
);

1733 i‡(!
isRTCP
){

1734 #i‚de‡
WORDS_BIGENDIAN


1735 
	`FlùRTPByãOrdîög
(
πp_pkt_°ªam
, 
Àn
);

1738 
πµ
 = 
	`RTPGëRTPPackë
(
πp_pkt_°ªam
, 
Àn
);

1739 i‡(!
	`IsVÆidRTPPackë
(
C⁄ãxtLi°
[
cid
], &
πµ
)){

1740 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

1741  
	`îr‹debug
(
RTP_BAD_PACKET_FORMAT
, "RTPPacketReceived",

1742 "c⁄ãxà%d, invÆid RTPÖackë f‹m©", ()
cid
);

1744 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

1754 i‡(
possibÀ_lo›back
 &&

1755 (
πµ
.
RTP_hódî
->
s§c
 =
C⁄ãxtLi°
[
cid
]->
my_membîöfo
->ssrc ||

1756 
πµ
.
RTP_hódî
->
s§c
 =
C⁄ãxtLi°
[
cid
]->
my_¥evious_s§c
)){

1757  
	`îr‹debug
(
RTP_PACKET_LOOPBACK
, "RTPPacketReceived",

1758 "c⁄ãxà%d, gŸ my ow¿RTPÖackë", ()
cid
);

1762  
	`Upd©eMembîInfoByRTP
(
C⁄ãxtLi°
[
cid
], &
πµ
, &
‰om_addr
,

1763 
‰omaddæí
);

1767 
∑πs
 = 
	`S∂ôAndHo°OrdîLígthCompoundRTCP
(
πp_pkt_°ªam
, 
£gmít
, 
Àn
);

1769 #i‚de‡
WORDS_BIGENDIAN


1770 
i
 = 0; i < 
∑πs
; i++) {

1771 
	`FlùRTCPByãOrdîög
(
£gmít
[
i
]);

1775 i‡(!
	`IsVÆidRTCPPackë
(
C⁄ãxtLi°
[
cid
], 
£gmít
, 
∑πs
, 
Àn
)){

1776 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

1777  
	`îr‹debug
(
RTP_BAD_PACKET_FORMAT
, "RTPPacketReceived",

1778 "c⁄ãxà%d, invÆid RTCPÖackë f‹m©", ()
cid
);

1781 
i
=0; i<
∑πs
; i++){

1782 
π˝p
 = 
	`RTPGëRTCPPackë
(
£gmít
[
i
]);

1784 i‡(
i
==0){

1789 
π˝p
.
comm⁄
->
±
){

1790 
RTCP_PACKET_SR
:

1791 
pkt_s§c
 = 
π˝p
.
v¨ü¡
.
§
.
§_fixed
->
s§c
;

1793 
RTCP_PACKET_RR
:

1794 
pkt_s§c
 = 
π˝p
.
v¨ü¡
.
º
.
º_fixed
->
s§c
;

1796 
RTCP_PACKET_SDES
:

1799 
sdi
 = 
	`InôSDESIãmIãr
(&
π˝p
);

1800 
pkt_s§c
 = 
sdi
.
s§c
;

1802 
RTCP_PACKET_BYE
:

1803 
bb
 = 
	`RTPGëByeBlock
(&
π˝p
, 0);

1804 
pkt_s§c
 = 
bb
.
s§cc§c
;

1807  
	`îr‹debug
(
RTP_BAD_PACKET_FORMAT
, "RTPPacketReceived",

1808 "c⁄ãxà%d, invÆid RTCPÖackë f‹m©", ()
cid
);

1810 i‡(
possibÀ_lo›back
 &&

1811 (
pkt_s§c
 =
C⁄ãxtLi°
[
cid
]->
my_membîöfo
->
s§c
 ||

1812 
pkt_s§c
 =
C⁄ãxtLi°
[
cid
]->
my_¥evious_s§c
)){

1813 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

1814  
	`îr‹debug
(
RTP_PACKET_LOOPBACK
, "RTPPacketReceived",

1815 "c⁄ãxà%d, gŸ my ow¿RTCPÖackë", ()
cid
);

1818 
	`Upd©eMembîInfoByRTCP
(
C⁄ãxtLi°
[
cid
], &
π˝p
, &
‰om_addr
,

1819 
‰omaddæí
, 
i
);

1821 
C⁄ãxtLi°
[
cid
]->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

1822  
RTP_OK
;

1823 
	}
}

1827 
π≥º‹
 
	$RTPCuºítMembî
(
c⁄ãxt
 
cid
, 
membî_ôî©‹
 *
ôî
,

1828 
≥rs⁄
 *
the_membî
){

1829 
π≥º‹
 
îr
;

1830 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPCuºítMembî")Ë!
RTP_OK
)

1831  
îr
;

1832 i‡(
ôî
->
cur_lök
 =
NULL
){

1833  
	`îr‹debug
(
RTP_END_OF_LIST
, "RTPCurrentMember",

1835 ()
cid
);

1836  
RTP_END_OF_LIST
;

1838 *
the_membî
 = 
ôî
->
cur_lök
->
my_membî
->
unique_id
;

1839  
RTP_OK
;

1840 
	}
}

1843 
π≥º‹
 
	$RTPNextMembî
(
c⁄ãxt
 
cid
, 
membî_ôî©‹
 *
ôî
,

1844 
≥rs⁄
 *
the_membî
){

1845 
π≥º‹
 
îr
;

1846 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPNextMembî")Ë!
RTP_OK
)

1847  
îr
;

1848 i‡(
ôî
->
cur_lök
 =
NULL
){

1849  
	`îr‹debug
(
RTP_END_OF_LIST
, "RTPNextMember",

1851 ()
cid
);

1853 i‡(
ôî
->
go_f‹w¨d
){

1854 
ôî
->
cur_lök
 = iãr->cur_lök->
√xt_lök
;

1856 
ôî
->
cur_lök
 = iãr->cur_lök->
¥ev_lök
;

1857  
	`RTPCuºítMembî
(
cid
, 
ôî
, 
the_membî
);

1858 
	}
}

1861 
π≥º‹
 
RTPSëUpd©eMembîCÆlBack
(
c⁄ãxt
 
cid
, (*
f
)(c⁄ãxt, 
≥rs⁄
, 
πpÊag
, *)){

1862 
π≥º‹
 
îr
;

1863 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSëUpd©eMembîCÆlBack")Ë!
RTP_OK
)

1864  
îr
;

1865 
C⁄ãxtLi°
[
cid
]->
Upd©eMembîCÆlBack
 = 
f
;

1867  
RTP_OK
;

1868 
	}
}

1872 
π≥º‹
 
RTPSëCh™gedMembîInfoCÆlBack
(
c⁄ãxt
 
cid
,

1873 (*
f
)(
c⁄ãxt
, 
≥rs⁄
, 
membîöfo
, *, 
πpÊag
)){

1874 
π≥º‹
 
îr
;

1875 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSëCh™gedMembîInfoCÆlBack")Ë!
RTP_OK
)

1876  
îr
;

1877 
C⁄ãxtLi°
[
cid
]->
Ch™gedMembîInfoCÆlBack
 = 
f
;

1878  
RTP_OK
;

1879 
	}
}

1881 
π≥º‹
 
RTPSëCh™gedMembîSockaddrCÆlBack
(
c⁄ãxt
 
cid
,

1882 (*
f
)(
c⁄ãxt
, 
≥rs⁄
, 
sockaddr
*, )){

1883 
π≥º‹
 
îr
;

1884 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSëCh™gedMembîAddªssCÆlBack")Ë!
RTP_OK
)

1885  
îr
;

1886 
C⁄ãxtLi°
[
cid
]->
Ch™gedMembîSockaddrCÆlBack
 = 
f
;

1887  
RTP_OK
;

1888 
	}
}

1891 
π≥º‹
 
RTPSëCﬁlidedMembîCÆlBack
(
c⁄ãxt
 
cid
,

1892 (*
f
)(
c⁄ãxt
, 
≥rs⁄
,Öerson,

1893 
πpÊag
)){

1894 
π≥º‹
 
îr
;

1895 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSëCﬁlidedMembîCÆlBack")Ë!
RTP_OK
)

1896  
îr
;

1897 
C⁄ãxtLi°
[
cid
]->
CﬁlidedMembîCÆlBack
 = 
f
;

1898  
RTP_OK
;

1899 
	}
}

1901 
π≥º‹
 
RTPSëRevîtögIDCÆlBack
(
c⁄ãxt
 
cid
,

1902 (*
f
)(
c⁄ãxt
, 
≥rs⁄
,Öerson,

1903 *, 
πpÊag
)){

1904 
π≥º‹
 
îr
;

1905 i‡((
îr
 = 
	`VÆidRTPC⁄ãxt
(
cid
, "RTPSëRevîtögMembîCÆlBack")Ë!
RTP_OK
)

1906  
îr
;

1908 
C⁄ãxtLi°
[
cid
]->
RevîtögIDCÆlBack
 = 
f
;

1909  
RTP_OK
;

1910 
	}
}

1913 *
	$RTPSåEº‹
(
π≥º‹
 
îr
){

1914 
msg
[64];

1915 
îr
){

1916 
RTP_OK
:

1918 
RTP_CANT_ALLOC_MEM
:

1920 
RTP_TOO_MANY_CONTEXTS
:

1922 
RTP_UNKNOWN_CONTEXT
:

1924 
RTP_NOSOCKET
:

1926 
RTP_CANT_GET_SOCKET
:

1928 
RTP_CANT_BIND_SOCKET
:

1930 
RTP_CANT_SET_SOCKOPT
:

1932 
RTP_SOCKET_WRITE_FAILURE
:

1934 
RTP_SOCKET_READ_FAILURE
:

1936 
RTP_SOCKET_MISMATCH
:

1938 
RTP_FIXED_WHEN_OPEN
:

1940 
RTP_BAD_ADDR
:

1942 
RTP_BAD_PORT
:

1944 
RTP_CANT_CLOSE_SESSION
:

1946 
RTP_BAD_MI
:

1948 
RTP_BAD_PROFILE
:

1950 
RTP_SOCKET_EMPTY
:

1952 
RTP_PACKET_LOOPBACK
:

1954 
RTP_INSUFFICIENT_BUFFER
:

1956 
RTP_CSRC_LIST_NOT_SET
:

1958 
RTP_CSRC_APPEARS_TWICE
:

1960 
RTP_BAD_PACKET_FORMAT
:

1962 
RTP_NO_SUCH_PERSON
:

1964 
RTP_PERSON_DATA_PROTECTED
:

1966 
RTP_NO_SUCH_SENDER
:

1968 
RTP_NO_SUCH_SDES
:

1970 
RTP_CANT_USE_ENCRYPTION
:

1972 
RTP_DECRYPTION_FAILURE
:

1974 
RTP_END_OF_LIST
:

1976 
RTP_CANT_CALL_FUNCTION
:

1978 
RTP_SSRC_IN_USE
:

1980 
RTP_CANT_GETSOCKNAME
:

1982 
RTP_BAD_VALUE
:

1984 
RTP_NO_SUCH_CONTRIBUTOR
:

1986 
RTP_CSRC_LIST_FULL
:

1988 
RTP_DONT_SEND_NOW
:

1991 
	`•rötf
(
msg
, "Unknow¿RTP Eº‹ %d", 
îr
);

1992  
msg
;

1994 
	}
}

1997 *
	$RTPDebugSå
(){

1998 
îr‹_msg
[512];

2000 #ifde‡
_RTP_DEBUG


2001 
	`•rötf
(
îr‹_msg
, "%s:\n%s\n", 
	`RTPSåEº‹
(
_RTP_cur_îr
), 
_RTP_îr_msg
);

2003 
	`•rötf
(
îr‹_msg
, "%s\n", 
	`RTPSåEº‹
(
_RTP_cur_îr
));

2006 
_RTP_cur_îr
){

2007 
RTP_CANT_ALLOC_MEM
:

2009 
RTP_CANT_GET_SOCKET
:

2010 
RTP_CANT_BIND_SOCKET
:

2011 
RTP_CANT_SET_SOCKOPT
:

2012 
RTP_SOCKET_WRITE_FAILURE
:

2013 
RTP_SOCKET_READ_FAILURE
:

2014 
RTP_BAD_ADDR
:

2015 
RTP_BAD_PORT
:

2016 
RTP_CANT_CLOSE_SESSION
:

2017 
RTP_SOCKET_EMPTY
:

2018 
RTP_CANT_GETSOCKNAME
:

2019 
	`•rötf
(
îr‹_msg
 + 
	`°æí
(error_msg),

2020 "\n%s\n", 
	`°ªº‹
(
î∫o
));

2026  
îr‹_msg
;

2027 
	}
}

	@rtp_api.h

7 #i‚de‡
_RTP_API_H


8 
	#_RTP_API_H


	)

10 
	#BITFIELD
(
fõld
, 
mask
, 
shi·
) \

11 (((
fõld
Ë& (
mask
)Ë>> (
shi·
))

	)

12 
	#SET_BITFIELD
(
fõld
, 
vÆ
, 
mask
, 
shi·
) \

14 (
fõld
Ë&~(
mask
); \

15 (
fõld
Ë|(((
vÆ
Ë<< (
shi·
)Ë& (
mask
)); \

16 } 0)

	)

20 
	#RTCP_PACKET_SR
 200

	)

21 
	#RTCP_PACKET_RR
 201

	)

22 
	#RTCP_PACKET_SDES
 202

	)

23 
	#RTCP_PACKET_BYE
 203

	)

24 
	#RTCP_PACKET_APP
 204

	)

26 
	tc⁄ãxt
;

27 
	t≥rs⁄
;

30 
	töt32
;

31 
	töt16
;

32 sig√d 
	töt8
;

34 
	tu_öt32
;

35 
	tu_öt16
;

36 
	tu_öt8
;

42 
	mRTP_MEMBER_PENDING
,

43 
	mRTP_MEMBER_CONFIRMED
,

44 
	mRTP_MEMBER_EXPIRED
,

45 
	mRTP_MEMBER_PENDING_CONTRIBUTOR
,

46 
	mRTP_MEMBER_CONFIRMED_CONTRIBUTOR
,

47 
	mRTP_MEMBER_EXPIRED_CONTRIBUTOR


48 } 
	tmembî°©us
;

58 
	mRTP_SENDER_NOT
,

59 
	mRTP_SENDER_PURPORTED
,

60 
	mRTP_SENDER_CONFIRMED
,

61 } 
	t£ndî°©us
;

64 
u_öt32
 
	m£cs
;

65 
u_öt32
 
	m‰ac
;

66 } 
	t¡p64
;

70 
u_öt8
 
	mÊags
;

72 
u_öt8
 
	mm±
;

73 
u_öt16
 
	m£q
;

74 
u_öt32
 
	mts
;

75 
u_öt32
 
	ms§c
;

76 
u_öt32
 
	mc§c
[1];

77 } 
	tπp_hdr_t
;

80 
	#RTP_VERSION
(
hdr
Ë
	`BITFIELD
((hdr).
Êags
, 0xC0, 6)

	)

81 
	#SET_RTP_VERSION
(
hdr
, 
vÆ
Ë
	`SET_BITFIELD
((hdr).
Êags
, (vÆ), 0xC0, 6)

	)

84 
	#RTP_P
(
hdr
Ë
	`BITFIELD
((hdr).
Êags
, 0x20, 5)

	)

85 
	#SET_RTP_P
(
hdr
, 
vÆ
Ë
	`SET_BITFIELD
((hdr).
Êags
, (vÆ), 0x20, 5)

	)

88 
	#RTP_X
(
hdr
Ë
	`BITFIELD
((hdr).
Êags
, 0x10, 4)

	)

89 
	#SET_RTP_X
(
hdr
, 
vÆ
Ë
	`SET_BITFIELD
((hdr).
Êags
, (vÆ), 0x10, 4)

	)

92 
	#RTP_CC
(
hdr
Ë
	`BITFIELD
((hdr).
Êags
, 0x0F, 0)

	)

93 
	#SET_RTP_CC
(
hdr
, 
vÆ
Ë
	`SET_BITFIELD
((hdr).
Êags
, (vÆ), 0x0F, 0)

	)

96 
	#RTP_M
(
hdr
Ë
	`BITFIELD
((hdr).
m±
, 0x80, 7)

	)

97 
	#SET_RTP_M
(
hdr
, 
vÆ
Ë
	`SET_BITFIELD
((hdr).
m±
, (vÆ), 0x80, 7)

	)

100 
	#RTP_PT
(
hdr
Ë
	`BITFIELD
((hdr).
m±
, 0x7F, 0)

	)

101 
	#SET_RTP_PT
(
hdr
, 
vÆ
Ë
	`SET_BITFIELD
((hdr).
m±
, (vÆ), 0x7F, 0)

	)

105 
u_öt16
 
	mëy≥
;

106 
u_öt16
 
	mñí
;

107 
	mïaylﬂd
[1];

108 } 
	tπp_hdr_ext
;

113 
πp_hdr_t
 *
	mRTP_hódî
;

114 
πp_hdr_ext
 *
	mRTP_exãnsi⁄
;

115 *
	m∑ylﬂd
;

116 
	m∑ylﬂd_Àn
;

117 } 
	tπp_∑ckë
;

122 
u_öt32
 
	ms§c
;

123 
	m‰ac_lo°
:8;

124 
	mcum_lo°
:24;

125 
u_öt32
 
	mhighe°_£qno
;

126 
u_öt32
 
	mjôãr
;

127 
u_öt32
 
	ml§
;

128 
u_öt32
 
	mdl§
;

129 } 
	tπ˝_ªp‹t_block
;

131 
	#RTCP_REPORT_BLOCK_SIZE
 (6 * 4)

	)

136 
u_öt32
 
	ms§c
;

137 
	mchunkno
;

138 
u_öt8
 
	mty≥
;

139 
u_öt8
 
	mÀn
;

140 *
	mdes¸ùti⁄
;

141 
	moff£t
;

144 } 
	tπ˝_sdes_ôem
;

149 
u_öt32
 
	ms§cc§c
;

150 } 
	tπ˝_bye_block
;

152 
	#RTCP_BYE_BLOCK_SIZE
 4

	)

156 
u_öt8
 
	mÊags
;

158 
u_öt8
 
	m±
;

159 
u_öt16
 
	mÀn
;

160 } 
	tπ˝_comm⁄
;

162 
	#RTCP_COMMON_SIZE
 4

	)

164 
	#RTCP_VERSION
(
com
Ë
	`BITFIELD
((com).
Êags
, 0xC0, 6)

	)

165 
	#SET_RTCP_VERSION
(
com
, 
vÆ
Ë
	`SET_BITFIELD
((com).
Êags
, (vÆ), 0xC0, 6)

	)

167 
	#RTCP_P
(
com
Ë
	`BITFIELD
((com).
Êags
, 0x20, 5)

	)

168 
	#SET_RTCP_P
(
com
, 
vÆ
Ë
	`SET_BITFIELD
((com).
Êags
, (vÆ), 0x20, 5)

	)

170 
	#RTCP_RC
(
com
Ë
	`BITFIELD
((com).
Êags
, 0x1F, 0)

	)

171 
	#SET_RTCP_RC
(
com
, 
vÆ
Ë
	`SET_BITFIELD
((com).
Êags
, (vÆ), 0x1F, 0)

	)

174 
u_öt32
 
	ms§c
;

175 
u_öt32
 
	m¡p_£cs
;

176 
u_öt32
 
	m¡p_‰ac
;

177 
u_öt32
 
	mπp_°amp
;

178 
u_öt32
 
	mpkt_cou¡
;

179 
u_öt32
 
	mo˘_cou¡
;

180 } 
	tπ˝_§
;

182 
	#RTCP_SR_SIZE
 (6 * 4)

	)

186 
u_öt32
 
	ms§c
;

187 } 
	tπ˝_º
;

189 
	#RTCP_RR_SIZE
 4

	)

193 
u_öt32
 
	ms§cc§c
;

194 
u_öt32
 
	m«me
;

195 } 
	tπ˝_≠p
;

197 
	#RTCP_APP_SIZE
 (2 * 4)

	)

203 
π˝_comm⁄
 *
	mcomm⁄
;

207 
π˝_§
 *
	m§_fixed
;

208 
π˝_ªp‹t_block
 *
	mrblock
[32];

209 * 
	mexãnsi⁄
;

210 } 
	m§
;

213 
π˝_º
 *
	mº_fixed
;

214 
π˝_ªp‹t_block
 *
	mrblock
[32];

215 * 
	mexãnsi⁄
;

216 } 
	mº
;

219 *
	mªmaödî
;

220 } 
	msdes
;

223 
π˝_bye_block
 *
	mbyeblock
[32];

224 
u_öt8
 
	mªas⁄_Àngth
;

225 * 
	mªas⁄
;

226 } 
	mbye
;

229 
π˝_≠p
 *
	m≠p_fixed
;

230 *
	m≠pd©a
;

231 } 
	m≠p
;

234 *
	md©a
;

235 } 
	munknown
;

237 } 
	mv¨ü¡
;

238 } 
	tπ˝_∑ckë
;

240 
	glök
;

243 
lök
 *
	mcur_lök
;

244 
	mgo_f‹w¨d
;

245 } 
	tmembî_ôî©‹
;

255 
≥rs⁄
 
	mªp‹ãr
;

256 
u_öt8
 
	m‰a˘i⁄_lo°
;

257 
u_öt32
 
	mcum_lo°
;

258 
u_öt32
 
	mhighe°_£qno
;

259 
u_öt32
 
	mjôãr
;

260 
u_öt32
 
	mœ°_§
;

262 
u_öt32
 
	mdñay_œ°_§
;

265 } 
	tª˚ivî_ªp‹t
;

270 
	shash£¨ch
 {

271 *
	mèbÀ
;

272 
	m√xtbuckë
;

273 *
	m√xã¡ry
;

274 } 
	tª˚ivî_ªp‹t_ôî©‹
;

278 
u_öt8
 
	tmembîöfo
;

283 
	mRTP_MI_CNAME
 = 1,

284 
	mRTP_MI_NAME
 = 2,

285 
	mRTP_MI_EMAIL
 = 3,

286 
	mRTP_MI_PHONE
 = 4,

287 
	mRTP_MI_LOC
 = 5,

288 
	mRTP_MI_TOOL
 = 6,

289 
	mRTP_MI_NOTE
 = 7,

290 
	mRTP_MI_PRIV
 = 8,

291 
	mRTP_MI_H323_CADDR
 = 9,

301 
	mRTP_RECONSIDERATION_UNCONDITIONAL
,

302 
	mRTP_RECONSIDERATION_CONDITIONAL
,

303 
	mRTP_RECONSIDERATION_OFF
,

304 } 
	tªc⁄sidî©i⁄_t
;

311 
	mRTP_ENCRYPTION_FULL
,

312 
	mRTP_ENCRYPTION_PARTIAL
,

313 
	mRTP_ENCRYPTION_NONE
,

314 } 
	tí¸y±i⁄_t
;

347 
	#EM_MASK
(
BITS
,
SHIFT
Ë(((1U << (BITS)Ë- 1Ë<< (SHIFT))

	)

349 
	#EM_CODE_SHIFT
 0U

	)

350 
	#EM_CODE_BITS
 16U

	)

351 
	#EM_CODE_MASK
 
	`EM_MASK
(
EM_CODE_BITS
,
EM_CODE_SHIFT
)

	)

353 
	#EM_FACILITY_SUB_CODE_SHIFT
 16U

	)

354 
	#EM_FACILITY_SUB_CODE_BITS
 8U

	)

355 
	#EM_FACILITY_SUB_CODE_MASK
 
	`EM_MASK
(
EM_FACILITY_SUB_CODE_BITS
,\

356 
EM_FACILITY_SUB_CODE_SHIFT
)

	)

357 
	#EM_FACILITY_CODE_SHIFT
 24U

	)

358 
	#EM_FACILITY_CODE_BITS
 6U

	)

359 
	#EM_FACILITY_CODE_MASK
 
	`EM_MASK
(
EM_FACILITY_CODE_BITS
,\

360 
EM_FACILITY_CODE_SHIFT
)

	)

361 
	#EM_SEVERITY_SHIFT
 30U

	)

362 
	#EM_SEVERITY_BITS
 2U

	)

363 
	#EM_SEVERITY_MASK
 
	`EM_MASK
(
EM_SEVERITY_BITS
,\

364 
EM_SEVERITY_SHIFT
)

	)

368 
	#EM_SEVERITY_SUCCESS
 0U

	)

369 
	#EM_SEVERITY_INFORMATIONAL
 1U

	)

370 
	#EM_SEVERITY_WARNING
 2U

	)

371 
	#EM_SEVERITY_ERROR
 3U

	)

375 
	#EM_PENDING
 1U

	)

376 
	#EM_INVALID_PARAM
 2U

	)

377 
	#EM_NOT_IMPLEMENTED
 3U

	)

378 
	#EM_MEM_ALLOC_FAILED
 4U

	)

379 
	#EM_UNKNOWN_ERROR
 5U

	)

380 
	#EM_NOT_SUPPORTED
 6U

	)

381 
	#EM_NOT_PRESENT
 7U

	)

382 
	#EM_BUFFER_TOO_SMALL
 8U

	)

383 
	#EM_SOFTWARE_EXPIRED
 9U

	)

384 
	#EM_INVALID_FSM_STIMULUS
 10U

	)

385 
	#EM_INVALID_RESULT_ARG
 11U

	)

386 
	#EM_LIBRARY_NOT_INTIALIZED
 12U

	)

387 
	#EM_INSUFFICIENT_INFO
 13U

	)

388 
	#EM_INVALID_SEQ_NUMBER
 14U

	)

389 
	#EM_FSM_NO_OPERATION
 15U

	)

390 
	#EM_CODE_MAX
 256U

	)

396 
	#FACILITY_RTP
 3U

	)

398 
	#EM_STATUS
(
SEV
,
FAC
,
SUB
,
CODE
)\

399 (((
SEV
Ë<< 
EM_SEVERITY_SHIFT
Ë& 
EM_SEVERITY_MASK
) |\

400 (((
FAC
Ë<< 
EM_FACILITY_CODE_SHIFT
Ë& 
EM_FACILITY_CODE_MASK
) |\

401 (((
SUB
Ë<< 
EM_FACILITY_SUB_CODE_SHIFT
Ë& 
EM_FACILITY_SUB_CODE_MASK
) |\

402 (((
CODE
Ë<< 
EM_CODE_SHIFT
Ë& 
EM_CODE_MASK
)

	)

404 
	#RTP_SUCC
(
CODE
Ë
	`EM_STATUS
(
EM_SEVERITY_SUCCESS
, 
FACILITY_RTP
, 0, CODE)

	)

405 
	#RTP_WARN
(
CODE
Ë
	`EM_STATUS
(
EM_SEVERITY_SUCCESS
, 
FACILITY_RTP
, 0, CODE)

	)

406 
	#RTP_INFO
(
CODE
Ë
	`EM_STATUS
(
EM_SEVERITY_SUCCESS
, 
FACILITY_RTP
, 0, CODE)

	)

407 
	#RTP_ERR
(
CODE
Ë
	`EM_STATUS
(
EM_SEVERITY_SUCCESS
, 
FACILITY_RTP
, 0, CODE)

	)

411 
	#EM_RTP_TOO_MANY_CONTEXTS
 (
EM_CODE_MAX
 + 1)

	)

412 
	#EM_RTP_UNKNOWN_CONTEXT
 (
EM_CODE_MAX
 + 2)

	)

413 
	#EM_RTP_NOSOCKET
 (
EM_CODE_MAX
 + 3)

	)

414 
	#EM_RTP_CANT_GET_SOCKET
 (
EM_CODE_MAX
 + 4)

	)

415 
	#EM_RTP_CANT_BIND_SOCKET
 (
EM_CODE_MAX
 + 5)

	)

416 
	#EM_RTP_CANT_SET_SOCKOPT
 (
EM_CODE_MAX
 + 6)

	)

417 
	#EM_RTP_SOCKET_WRITE_FAILURE
 (
EM_CODE_MAX
 + 7)

	)

418 
	#EM_RTP_SOCKET_READ_FAILURE
 (
EM_CODE_MAX
 + 8)

	)

419 
	#EM_RTP_SOCKET_MISMATCH
 (
EM_CODE_MAX
 + 9)

	)

420 
	#EM_RTP_FIXED_WHEN_OPEN
 (
EM_CODE_MAX
 + 10)

	)

421 
	#EM_RTP_BAD_ADDR
 (
EM_CODE_MAX
 + 11)

	)

422 
	#EM_RTP_BAD_PORT
 (
EM_CODE_MAX
 + 12)

	)

423 
	#EM_RTP_CANT_SEND
 (
EM_CODE_MAX
 + 13)

	)

424 
	#EM_RTP_CANT_CLOSE_SESSION
 (
EM_CODE_MAX
 + 14)

	)

425 
	#EM_RTP_BAD_MI
 (
EM_CODE_MAX
 + 15)

	)

426 
	#EM_RTP_BAD_PROFILE
 (
EM_CODE_MAX
 + 16)

	)

427 
	#EM_RTP_SOCKET_EMPTY
 (
EM_CODE_MAX
 + 17)

	)

428 
	#EM_RTP_PACKET_LOOPBACK
 (
EM_CODE_MAX
 + 18)

	)

429 
	#EM_RTP_CSRC_LIST_NOT_SET
 (
EM_CODE_MAX
 + 19)

	)

430 
	#EM_RTP_CSRC_APPEARS_TWICE
 (
EM_CODE_MAX
 + 20)

	)

431 
	#EM_RTP_BAD_PACKET_FORMAT
 (
EM_CODE_MAX
 + 21)

	)

432 
	#EM_RTP_NO_SUCH_PERSON
 (
EM_CODE_MAX
 + 22)

	)

433 
	#EM_RTP_PERSON_DATA_PROTECTED
 (
EM_CODE_MAX
 + 23)

	)

434 
	#EM_RTP_NO_SUCH_SENDER
 (
EM_CODE_MAX
 + 24)

	)

435 
	#EM_RTP_NO_SUCH_SDES
 (
EM_CODE_MAX
 + 25)

	)

436 
	#EM_RTP_CANT_USE_ENCRYPTION
 (
EM_CODE_MAX
 + 26)

	)

437 
	#EM_RTP_DECRYPTION_FAILURE
 (
EM_CODE_MAX
 + 27)

	)

438 
	#EM_RTP_END_OF_LIST
 (
EM_CODE_MAX
 + 28)

	)

439 
	#EM_RTP_CANT_CALL_FUNCTION
 (
EM_CODE_MAX
 + 29)

	)

440 
	#EM_RTP_SSRC_IN_USE
 (
EM_CODE_MAX
 + 30)

	)

441 
	#EM_RTP_CANT_GETSOCKNAME
 (
EM_CODE_MAX
 + 31)

	)

442 
	#EM_RTP_NO_SUCH_CONTRIBUTOR
 (
EM_CODE_MAX
 + 32)

	)

443 
	#EM_RTP_CSRC_LIST_FULL
 (
EM_CODE_MAX
 + 33)

	)

444 
	#EM_RTP_DONT_SEND_NOW
 (
EM_CODE_MAX
 + 34)

	)

445 
	#EM_RTP_CANT_SEND_BYE
 (
EM_CODE_MAX
 + 35)

	)

450 
	mRTP_OK
 = 0,

451 
	mRTP_CANT_ALLOC_MEM
 = 
RTP_ERR
(
EM_MEM_ALLOC_FAILED
),

452 
	mRTP_TOO_MANY_CONTEXTS
 = 
RTP_ERR
(
EM_RTP_TOO_MANY_CONTEXTS
),

453 
	mRTP_UNKNOWN_CONTEXT
 = 
RTP_ERR
(
EM_RTP_UNKNOWN_CONTEXT
),

454 
	mRTP_NOSOCKET
 = 
RTP_ERR
(
EM_RTP_NOSOCKET
),

455 
	mRTP_CANT_GET_SOCKET
 = 
RTP_ERR
(
EM_RTP_CANT_GET_SOCKET
),

456 
	mRTP_CANT_BIND_SOCKET
 = 
RTP_ERR
(
EM_RTP_CANT_BIND_SOCKET
),

457 
	mRTP_CANT_SET_SOCKOPT
 = 
RTP_ERR
(
EM_RTP_CANT_SET_SOCKOPT
),

458 
	mRTP_SOCKET_WRITE_FAILURE
 = 
RTP_ERR
(
EM_RTP_SOCKET_WRITE_FAILURE
),

459 
	mRTP_SOCKET_READ_FAILURE
 = 
RTP_ERR
(
EM_RTP_SOCKET_READ_FAILURE
),

460 
	mRTP_SOCKET_MISMATCH
 = 
RTP_ERR
(
EM_RTP_SOCKET_MISMATCH
),

461 
	mRTP_FIXED_WHEN_OPEN
 = 
RTP_ERR
(
EM_RTP_FIXED_WHEN_OPEN
),

462 
	mRTP_BAD_ADDR
 = 
RTP_ERR
(
EM_RTP_BAD_ADDR
),

463 
	mRTP_BAD_PORT
 = 
RTP_ERR
(
EM_RTP_BAD_PORT
),

464 
	mRTP_CANT_SEND
 = 
RTP_ERR
(
EM_RTP_CANT_SEND
),

466 
	mRTP_CANT_CLOSE_SESSION
 = 
RTP_ERR
(
EM_RTP_CANT_CLOSE_SESSION
),

467 
	mRTP_BAD_MI
 = 
RTP_ERR
(
EM_RTP_BAD_MI
),

468 
	mRTP_BAD_PROFILE
 = 
RTP_ERR
(
EM_RTP_BAD_PROFILE
),

469 
	mRTP_SOCKET_EMPTY
 = 
RTP_WARN
(
EM_RTP_SOCKET_EMPTY
),

470 
	mRTP_PACKET_LOOPBACK
 = 
RTP_WARN
(
EM_RTP_PACKET_LOOPBACK
),

476 
	mRTP_INSUFFICIENT_BUFFER
 = 
RTP_ERR
(
EM_BUFFER_TOO_SMALL
),

477 
	mRTP_CSRC_LIST_NOT_SET
 = 
RTP_ERR
(
EM_RTP_CSRC_LIST_NOT_SET
),

478 
	mRTP_CSRC_APPEARS_TWICE

RTP_WARN
(
EM_RTP_CSRC_APPEARS_TWICE
),

479 
	mRTP_BAD_PACKET_FORMAT
 = 
RTP_WARN
(
EM_RTP_BAD_PACKET_FORMAT
),

480 
	mRTP_NO_SUCH_PERSON
 = 
RTP_ERR
(
EM_RTP_NO_SUCH_PERSON
),

481 
	mRTP_PERSON_DATA_PROTECTED
 =
RTP_ERR
(
EM_RTP_PERSON_DATA_PROTECTED
) ,

483 
	mRTP_NO_SUCH_SENDER
 = 
RTP_ERR
(
EM_RTP_NO_SUCH_SENDER
),

484 
	mRTP_NO_SUCH_SDES
 = 
RTP_ERR
(
EM_RTP_NO_SUCH_SDES
),

485 
	mRTP_CANT_USE_ENCRYPTION
 = 
RTP_ERR
(
EM_RTP_CANT_USE_ENCRYPTION
),

488 
	mRTP_DECRYPTION_FAILURE
 = 
RTP_ERR
(
EM_RTP_DECRYPTION_FAILURE
),

489 
	mRTP_END_OF_LIST
 = 
RTP_INFO
(
EM_RTP_END_OF_LIST
),

491 
	mRTP_CANT_CALL_FUNCTION
 = 
RTP_WARN
(
EM_RTP_CANT_CALL_FUNCTION
),

494 
	mRTP_SSRC_IN_USE
 = 
RTP_WARN
(
EM_RTP_SSRC_IN_USE
),

497 
	mRTP_CANT_GETSOCKNAME
 = 
RTP_ERR
(
EM_RTP_CANT_GETSOCKNAME
),

498 
	mRTP_BAD_VALUE
 = 
RTP_ERR
(
EM_INVALID_PARAM
),

499 
	mRTP_NO_SUCH_CONTRIBUTOR
 = 
RTP_ERR
(
EM_RTP_NO_SUCH_CONTRIBUTOR
),

501 
	mRTP_CSRC_LIST_FULL
 = 
RTP_ERR
(
EM_RTP_CSRC_LIST_FULL
),

502 
	mRTP_DONT_SEND_NOW
 = 
RTP_INFO
(
EM_RTP_DONT_SEND_NOW
),

504 
	mRTP_ERROR_CANT_SEND_BYE
 = 
RTP_INFO
(
EM_RTP_CANT_SEND_BYE
)

506 } 
	tπ≥º‹
;

510 
	mRTP_FLAG_NEW_MEMBER
,

511 
	mRTP_FLAG_NEW_SENDER
,

512 
	mRTP_FLAG_EXPIRED_MEMBER
,

513 
	mRTP_FLAG_EXPIRED_SENDER
,

515 
	mRTP_FLAG_MEMBER_LEAVES
,

516 
	mRTP_FLAG_OBSERVE_COLLISION
,

517 
	mRTP_FLAG_A_CSRC_COLLIDES
,

519 
	mRTP_FLAG_UNIQUE_ID_REMAP
,

530 
	mRTP_FLAG_MEMBER_INFO_CHANGES
,

532 
	mRTP_FLAG_MEMBER_ALIVE
,

534 
	mRTP_FLAG_MEMBER_CONFIRMED
,

536 
	mRTP_FLAG_DELETED_PENDING
,

538 
	mRTP_FLAG_DELETED_MEMBER
,

539 
	mRTP_FLAG_ADDRESS_CHANGES
,

540 
	mRTP_FLAG_COLLIDE_WITH_ME
,

542 
	mRTP_FLAG_PURPORTED_SENDER
,

545 
	mRTP_FLAG_DELETED_SENDER
,

547 
	mRTP_FLAG_NONE


548 } 
	tπpÊag
;

552 
π≥º‹
 
RTPSessi⁄SëRTPSèmpR©e
(
c⁄ãxt
 
cid
, 
öt32
 
∑ylﬂd_ty≥
,

553 
öt32
 
u£c
);

554 
π≥º‹
 
RTPSessi⁄GëRTPSèmpR©e
(
c⁄ãxt
 
cid
, 
öt32
 
∑ylﬂd_ty≥
,

555 
öt32
 *
u£c
);

557 
π≥º‹
 
RTPSessi⁄SëKey
(
c⁄ãxt
 
cid
, * 
vÆue
);

558 
π≥º‹
 
RTPSessi⁄GëKey
(
c⁄ãxt
 
cid
, ** 
vÆue
);

560 
π≥º‹
 
RTPSessi⁄SëRec⁄sidî©i⁄
(
c⁄ãxt
 
cid
, 
ªc⁄sidî©i⁄_t
 
vÆue
);

561 
π≥º‹
 
RTPSessi⁄GëRec⁄sidî©i⁄
(
c⁄ãxt
 
cid
, 
ªc⁄sidî©i⁄_t
 *
vÆue
);

563 
π≥º‹
 
RTPSessi⁄SëExãnsi⁄
(
c⁄ãxt
 
cid
, 
πp_hdr_ext
 *
the_ext
);

564 
π≥º‹
 
RTPSessi⁄GëExãnsi⁄
(
c⁄ãxt
 
cid
, 
πp_hdr_ext
 **
the_ext
);

566 
π≥º‹
 
RTPSessi⁄SëB™dwidth
(
c⁄ãxt
 
cid
, 
£ssi⁄_bwidth
,

567 
π˝_‰a˘i⁄
);

568 
π≥º‹
 
RTPSessi⁄GëB™dwidth
(
c⁄ãxt
 
cid
, *
£ssi⁄_bwidth
,

569 *
π˝_‰a˘i⁄
);

571 
π≥º‹
 
RTPSessi⁄SëU£rInfo
(
c⁄ãxt
 
cid
, * 
öfo
);

572 
π≥º‹
 
RTPSessi⁄GëU£rInfo
(
c⁄ãxt
 
cid
, ** 
öfo
);

574 
π≥º‹
 
RTPSessi⁄AddToCSRCLi°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
);

575 
π≥º‹
 
RTPSessi⁄RemoveFromCSRCLi°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
);

576 
π≥º‹
 
RTPSessi⁄AddToC⁄åibut‹Li°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
);

579 
π≥º‹
 
RTPSessi⁄GëCSRCLi°
(
c⁄ãxt
 
cid
, 
u_öt32
 *
vÆue
, 
öt32
 *
size
);

581 
π≥º‹
 
RTPSessi⁄GëUniqueIDF‹CSRC
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
, 
≥rs⁄
 *
p
);

583 
π≥º‹
 
RTPSessi⁄GëMembîLi°
(
c⁄ãxt
 
cid
, 
membî_ôî©‹
 *
ôî
);

584 
π≥º‹
 
RTPSessi⁄GëMembîLi°Lí
(
c⁄ãxt
 
cid
, *
the_Àn
);

586 
π≥º‹
 
RTPSëUpd©eMembîCÆlBack
(
c⁄ãxt
 
cid
,

587 (*
f
)(
c⁄ãxt
, 
≥rs⁄
, 
πpÊag
, *));

589 
π≥º‹
 
	`RTPSëCh™gedMembîInfoCÆlBack
(
c⁄ãxt
 
cid
,

590 (*
f
)(
c⁄ãxt
, 
≥rs⁄
, 
membîöfo
, *, 
πpÊag
));

592 
π≥º‹
 
	`RTPSëCﬁlidedMembîCÆlBack
(
c⁄ãxt
 
cid
,

593 (*
f
)(
c⁄ãxt
, 
≥rs⁄
,Öîs⁄, 
πpÊag
));

595 
π≥º‹
 
	`RTPSëRevîtögIDCÆlBack
(
c⁄ãxt
 
cid
,

596 (*
f
)(
c⁄ãxt
, 
≥rs⁄
,Öîs⁄, *, 
πpÊag
));

598 
π≥º‹
 
	`RTPCuºítMembî
(
c⁄ãxt
 
cid
, 
membî_ôî©‹
 *
ôî
,

599 
≥rs⁄
 *
the_membî
);

600 
π≥º‹
 
	`RTPNextMembî
(
c⁄ãxt
 
cid
, 
membî_ôî©‹
 *
ôî
,

601 
≥rs⁄
 *
the_membî
);

606 
πp_∑ckë
 
	`RTPGëRTPPackë
(*
πµackë
, 
pkéí
);

607 
u_öt32
 
	`RTPPackëGëCSRC
(
πp_∑ckë
 *
πµkt
, 
c§c_no
);

609 
	`RTPS∂ôCompoundRTCP
(*
π˝∑ckë
, *
ödpkts
[], 
Àn
);

610 
π˝_∑ckë
 
	`RTPGëRTCPPackë
(*
π˝∑ckë
);

611 
	`GëFú°SDESIãmF‹SSRC
(
π˝_sdes_ôem
 *
the_ôem
, * 
°¨çoöt
);

612 
π˝_sdes_ôem
 
	`InôSDESIãmIãr
(
π˝_∑ckë
 *
π˝sdes
);

613 
π˝_sdes_ôem
 
	`GëNextIãm
‘t˝_sdes_ôem *
¥ev_ôem
);

616 
π˝_ªp‹t_block
 
	`RTPGëRï‹tBlock
(
π˝_∑ckë
 *
π˝º§
, 
blockno
);

618 
π˝_bye_block
 
	`RTPGëByeBlock
(
π˝_∑ckë
 *
π˝bye
, 
blockno
);

620 
π≥º‹
 
	`RTPMembîInfoGëSètus
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membî°©us
 *
s
, 
£ndî°©us
 *
£ndî
 );

622 
π≥º‹
 
	`RTPMembîInfoSëSDES
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membîöfo
 
SDES_fõld
,

623 *
the_öfo
);

624 
π≥º‹
 
	`RTPMembîInfoGëSDES
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membîöfo
 
SDES_fõld
,

625 *
the_öfo
);

629 
π≥º‹
 
	`RTPMembîInfoSëNTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

630 
¡p64
 
NTP_time
);

632 
π≥º‹
 
	`RTPMembîInfoGëNTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

633 
¡p64
 *
NTP_time
);

636 
π≥º‹
 
	`RTPMembîInfoSëRTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

637 
öt32
 
πp_°amp
);

639 
π≥º‹
 
	`RTPMembîInfoGëRTP
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

640 
öt32
 *
RTP_time
);

643 
π≥º‹
 
	`RTPMembîInfoSëPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

644 
öt32
 
cou¡
);

646 
π≥º‹
 
	`RTPMembîInfoGëPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

647 
öt32
 *
cou¡
);

650 
π≥º‹
 
	`RTPMembîInfoSëRTCPPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
öt32
 
cou¡
);

652 
π≥º‹
 
	`RTPMembîInfoGëRTCPPktCou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
öt32
 *
cou¡
);

655 
π≥º‹
 
	`RTPMembîInfoSëO˘Cou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

656 
öt32
 
cou¡
);

658 
π≥º‹
 
	`RTPMembîInfoGëO˘Cou¡
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

659 
öt32
 *
cou¡
);

661 
π≥º‹
 
	`RTPMembîInfoSëSSRC
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
, u_öt32 
mask
);

663 
π≥º‹
 
	`RTPMembîInfoGëSSRC
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

664 
u_öt32
 *
s§c
);

666 
π≥º‹
 
	`RTPMembîInfoSëU£rInfo
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

667 * 
öfo
);

669 
π≥º‹
 
	`RTPMembîInfoGëU£rInfo
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

670 ** 
öfo
);

674 
π≥º‹
 
	`RTPSídîInfoGëFú°Re˚ivîRï‹t
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

675 
ª˚ivî_ªp‹t_ôî©‹
 *
the_ôî©‹
, 
ª˚ivî_ªp‹t
 *
ªp‹t
);

677 
π≥º‹
 
	`RTPSídîInfoGëNextRe˚ivîRï‹t
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

678 
ª˚ivî_ªp‹t_ôî©‹
 *
the_ôî©‹
, 
ª˚ivî_ªp‹t
 *
ªp‹t
);

681 
π≥º‹
 
	`RTPSídîInfoGëLoˇlRe˚±i⁄
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

682 
ª˚ivî_ªp‹t
 *
ªp‹t
);

685 
π≥º‹
 
	`RTPFödMembî
(
c⁄ãxt
 
cid
, 
membîöfo
 
mi
, *
sdes_fõld
,

686 
≥rs⁄
 *
p
);

689 
π≥º‹
 
	`RTPMo°Re˚¡RTPTime
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

690 
timevÆ
 *
the_time
);

691 
π≥º‹
 
	`RTPMo°Re˚¡RTCPTime
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

692 
timevÆ
 *
the_time
);

693 
π≥º‹
 
	`RTPMo°Re˚¡RTPPîs⁄
(
c⁄ãxt
 
cid
, 
≥rs⁄
 *
p
);

694 
π≥º‹
 
	`RTPMo°Re˚¡RTCPPîs⁄
(
c⁄ãxt
 
cid
, 
≥rs⁄
 *
p
);

698 *
	`RTPSåEº‹
(
π≥º‹
 
îr
);

700 *
	`RTPDebugSå
();

	@rtp_api_internal.c

7 
	#_RTP_API_INTERNAL_C


	)

9 
	~"sysdï.h
"

11 
	~"πp_≠i_öã∫Æ.h
"

12 
	~"πp_mli°.h
"

13 
	~"πp_í¸y±.h
"

14 
	~"πp_cﬁlisi⁄.h
"

16 
_RTP_CONTEXT
 **
	gC⁄ãxtLi°
 = 
NULL
;

18 
	g_RTP_c⁄ãxt_above_u£d
 = 0;

20 
	g_RTP_c⁄ãxts_ö_u£
 = 0;

22 
π≥º‹
 
	g_RTP_cur_îr
;

23 
	g_RTP_îr_msg
[256];

26 
	g_RTP_PAYLOAD_CLOCK_CONVERSIONS
[
_RTP_MAX_PAYLOAD_TYPES
] =

45 
	$SëDeÁu…PaylﬂdR©es
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

46 
i
;

47 
i
=0; i<
_RTP_MAX_PAYLOAD_TYPES
;i++){

48 
the_c⁄ãxt
->
¥ofûeRTPTimeR©es
[
i
] =

49 (
öt32
Ë
_RTP_PAYLOAD_CLOCK_CONVERSIONS
[
i
];

52 
	}
}

58 
π≥º‹
 
	$_VÆidRTPC⁄ãxt
(
c⁄ãxt
 
cid
, *
ˇŒög_func
)

60 i‡(
cid
 >
_RTP_c⁄ãxt_above_u£d
){

61  
	`îr‹debug
(
RTP_UNKNOWN_CONTEXT
, 
ˇŒög_func
,

62 "unknow¿c⁄ãxà%d", ()
cid
);

64 i‡(
C⁄ãxtLi°
[
cid
] =
NULL
){

65  
	`îr‹debug
(
RTP_UNKNOWN_CONTEXT
, 
ˇŒög_func
,

66 "c⁄ãxà%d cuºíéyÇŸ i¿u£", ()
cid
);

68  
RTP_OK
;

69 
	}
}

75 
π≥º‹
 
	$_GëMembîF‹C⁄ãxt
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membî
 **
the_membî_p
,

76 *
ˇŒög_func
)

78 i‡(
p
==0){

79 *
the_membî_p
 = 
C⁄ãxtLi°
[
cid
]->
my_membîöfo
;

81 *
the_membî_p
 = 
	`GëMembîFromUniqueIDHash
(
C⁄ãxtLi°
[
cid
], 
p
);

82 i‡(*
the_membî_p
==
NULL
){

83  
	`îr‹debug
(
RTP_NO_SUCH_PERSON
, 
ˇŒög_func
,

84 "c⁄ãxà%dÖîs⁄ %ld d€†nŸÉxi°", ()
cid
, 
p
);

86  
RTP_OK
;

87 
	}
}

94 
timevÆ
 
	$AddTimes
(
timevÆ
 *
time1
, timevÆ *
time2
){

95 
timevÆ
 
addedtimes
;

96 
addedtimes
.
tv_£c
 = 
time1
->tv_£¯+ 
time2
->tv_sec;

97 
addedtimes
.
tv_u£c
 = 
time1
->tv_u£¯+ 
time2
->tv_usec;

98 i‡(
addedtimes
.
tv_u£c
 > 999999){

99 
addedtimes
.
tv_£c
++;

100 
addedtimes
.
tv_u£c
 -= 1000000;

102  
addedtimes
;

103 
	}
}

109 
	$TimeExpúed
(
timevÆ
 *
öô_time
, timevÆ *
cur_time
,

110 
timevÆ
 *
öãrvÆ
){

111 
timevÆ
 
ex±ime
;

112 
ex±ime
 = 
	`AddTimes
(
öô_time
, 
öãrvÆ
);

113 i‡(
ex±ime
.
tv_£c
 < 
cur_time
->tv_sec){

114  
TRUE
;

116 i‡(
ex±ime
.
tv_£c
 > 
cur_time
->tv_sec){

117  
FALSE
;

119 i‡(
ex±ime
.
tv_u£c
 <
cur_time
->tv_usec){

120  
TRUE
;

122  
FALSE
;

123 
	}
}

128 
timevÆ
 
	$C⁄vîtDoubÀToTime
(
öãrvÆ
){

129 
timevÆ
 
thëime
;

130 
thëime
.
tv_£c
 = (Ë
öãrvÆ
;

131 
thëime
.
tv_u£c
 = (Ë(1000000 * (
öãrvÆ
 - () interval));

132  
thëime
;

133 
	}
}

136 
¡p64
 
	$C⁄vîtTimevÆToNTP
(
timevÆ
 
tv
)

138 
¡p64
 
n
;

147 
u_öt32
 
t
 = (
tv
.
tv_u£c
 * 1825) >> 5;

148 
n
.
‰ac
 = ((
tv
.
tv_u£c
 << 12Ë+ (tv.tv_u£¯<< 8Ë- 
t
);

150 
n
.
£cs
 = (Ë
tv
.
tv_£c
 + 
_GETTIMEOFDAY_TO_NTP_OFFSET
;

152  
n
;

153 
	}
}

158 
	$RTPTimeDiff
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

159 
timevÆ
 *
œãr_time
,

160 
timevÆ
 *
óæõr_time
,

161 
öt8
 
∑ylﬂd_ty≥
){

162 
diff
 = (Ë(
œãr_time
->
tv_£c
 - 
óæõr_time
->tv_sec) *

163 1000000 + (Ë(
œãr_time
->
tv_u£c
 - 
óæõr_time
->tv_usec);

164 i‡(
the_c⁄ãxt
->
¥ofûeRTPTimeR©es
[()
∑ylﬂd_ty≥
] == 0){

167  (
diff
 / (Ë
the_c⁄ãxt
->
¥ofûeRTPTimeR©es
[()
∑ylﬂd_ty≥
]);

168 
	}
}

178 
	$I¡î«lCompuãRTCPSídDñay
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

179 
£ndî
){

180 
com≥tôi⁄
;

181 
the_dñay
;

182 
π˝_mö_time
 = 
_RTCP_MIN_TIME
;

183 
π˝_bw
;

184 i‡(
the_c⁄ãxt
->
öôül
){

185 
π˝_mö_time
 /= 2.0;

186 
the_c⁄ãxt
->
avg_π˝_size
 = 128;

192 
com≥tôi⁄
 = 
the_c⁄ãxt
->
RTP_MembîLi°
.
c⁄fúmed_membîs
;

193 
π˝_bw
 = 
the_c⁄ãxt
->
£ssi⁄_b™dwidth
 *Åhe_c⁄ãxt->
π˝_‰a˘i⁄
 *

195 i‡(
the_c⁄ãxt
->
RTP_SídîLi°
.
c⁄fúmed_membîs
 > 0 &&

196 
the_c⁄ãxt
->
RTP_SídîLi°
.
c⁄fúmed_membîs
 < 
com≥tôi⁄
 *

197 
the_c⁄ãxt
->
£ndî_bw_‰a˘i⁄
){

198 i‡(
£ndî
){

199 
π˝_bw
 *
the_c⁄ãxt
->
£ndî_bw_‰a˘i⁄
;

200 
com≥tôi⁄
 = 
the_c⁄ãxt
->
RTP_SídîLi°
.
c⁄fúmed_membîs
;

203 
π˝_bw
 *1.0 - 
the_c⁄ãxt
->
£ndî_bw_‰a˘i⁄
;

204 
com≥tôi⁄
 -
the_c⁄ãxt
->
RTP_SídîLi°
.
c⁄fúmed_membîs
;

215 
the_dñay
 = 
the_c⁄ãxt
->
avg_π˝_size
 * 
com≥tôi⁄
 / 
π˝_bw
;

216 i‡(
the_dñay
 < 
π˝_mö_time
){

217 
the_dñay
 = 
π˝_mö_time
;

220  
the_dñay
;

221 
	}
}

226 
	$CompuãRTCPSídDñay
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

227 
£ndî
 = (
the_c⁄ãxt
->
my_membîöfo
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
);

229  
	`I¡î«lCompuãRTCPSídDñay
(
the_c⁄ãxt
, 
£ndî
);

230 
	}
}

235 
	$CompuãSídîRTCPSídDñay
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

236  
	`I¡î«lCompuãRTCPSídDñay
(
the_c⁄ãxt
, 
TRUE
);

237 
	}
}

242 
	$CompuãRe˚ivîRTCPSídDñay
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

243  
	`I¡î«lCompuãRTCPSídDñay
(
the_c⁄ãxt
, 
FALSE
);

244 
	}
}

249 
	$DoRTCPRec⁄sidî©i⁄
(
_RTP_CONTEXT
 *
the_c⁄ãxt
)

253 
öt32
 
cur_group_size
 = 
the_c⁄ãxt
->
RTP_MembîLi°
.
c⁄fúmed_membîs
;

254 
timevÆ
 
π˝_dñay
;

255 
timevÆ
 
cur_time
, 
£nd_time
;

256 
£nd_ô
;

258 
	`gëtimeofday
(&
cur_time
, 
NULL
);

260 
the_c⁄ãxt
->
ªc⁄sidî©i⁄
){

261 
RTP_RECONSIDERATION_OFF
:

262 
£nd_ô
 = 
TRUE
;

264 
RTP_RECONSIDERATION_CONDITIONAL
:

266 i‡(
cur_group_size
 <
the_c⁄ãxt
->
¥ev_group_size
){

267 
£nd_ô
 = 
TRUE
;

271 
RTP_RECONSIDERATION_UNCONDITIONAL
:

273 
the_c⁄ãxt
->
øndom_Á˘‹
 = .5 + 
	`dønd48
();

274 
π˝_dñay
 = 
	`C⁄vîtDoubÀToTime
(
	`CompuãRTCPSídDñay
(
the_c⁄ãxt
) *

275 
the_c⁄ãxt
->
øndom_Á˘‹
);

276 i‡(!
	`TimeExpúed
(&
the_c⁄ãxt
->
œ°_π˝_£nd
, &
cur_time
, &
π˝_dñay
)){

279 
£nd_time
 = 
	`AddTimes
(&
the_c⁄ãxt
->
œ°_π˝_£nd
, &
π˝_dñay
);

280 
	`RTPSëTimî
(
the_c⁄ãxt
->
c⁄ãxt_num
, 
RTP_TIMER_SEND_RTCP
, 0, 
NULL
,

281 &
£nd_time
);

282 
£nd_ô
 = 
FALSE
;

285 
£nd_ô
 = 
TRUE
;

288 
the_c⁄ãxt
->
¥ev_group_size
 = 
cur_group_size
;

289 (
£nd_ô
);

290 
	}
}

300 
CompuãBlockInfo
(
ARG_UNUSED
(
_RTP_CONTEXT
 *,
the_c⁄ãxt
),

301 
membî
 *
the_membî
, 
π˝_ªp‹t_block
 *
cur_block
,

302 
u_öt32
 *
ex≥˘ed_±r
)

304 
timevÆ
 
	gcur_time
;

305 
	gdñtime
, 
	gudñtime
;

306 
¡p64
 
	gl§_¡p
;

307 
u_öt32
 
	gex≥˘ed
, 
	gex≥˘ed_öãrvÆ
, 
	glo°_öãrvÆ
, 
	gcum_lo°
;

309 
	gcur_block
->
	gs§c
 = 
the_membî
->
s§c
;

313 
	gex≥˘ed
 = 
the_membî
->
loˇl_öfo
->
highe°_£qno
 -

314 
the_membî
->
loˇl_öfo
->
fú°_£qno
 + 1;

316 i‡(
	gex≥˘ed_±r
 !
NULL
) {

318 *
ex≥˘ed_±r
 = 
ex≥˘ed
;

320 
	gcum_lo°
 = (
ex≥˘ed
 -

321 (
the_membî
->
loˇl_öfo
->
num_pkts_ªcd
 +

322 
the_membî
->
loˇl_öfo
->
num_pkts_ªcd_sö˚_œ°
));

325 
	gcur_block
->
	gcum_lo°
 = (
cum_lo°
 <= 0xffffff ? cum_lost : 0xffffff);

327 
	gex≥˘ed_öãrvÆ
 = 
ex≥˘ed
 - 
the_membî
->
loˇl_öfo
->
ex≥˘ed_¥i‹
;

329 
	glo°_öãrvÆ
 = 
ex≥˘ed_öãrvÆ
 -

330 
the_membî
->
loˇl_öfo
->
num_pkts_ªcd_sö˚_œ°
;

331 i‡(
	gex≥˘ed_öãrvÆ
 =0 || 
lo°_öãrvÆ
 <= 0){

332 
cur_block
->
‰ac_lo°
 = 0;

335 
	gcur_block
->
	g‰ac_lo°
 = (
lo°_öãrvÆ
 << 8Ë/ 
ex≥˘ed_öãrvÆ
;

338 
	gcur_block
->
	ghighe°_£qno
 = 
the_membî
->
loˇl_öfo
->
highe°_£qno
;

342 
	gcur_block
->
	gjôãr
 = (
u_öt32
Ë
the_membî
->
loˇl_öfo
->
jôãr
;

345 i‡(
	gthe_membî
->
	gœ°_§_ª˚ùt_time
.
	gtv_£c
 == 0) {

346 
cur_block
->
l§
 = 0;

347 
	gcur_block
->
	gdl§
 = 0;

349 
	gl§_¡p
 = 
C⁄vîtTimevÆToNTP
(
the_membî
->
œ°_§_ª˚ùt_time
);

351 
	gcur_block
->
	gl§
 = (
u_öt32
Ë(
l§_¡p
.
£cs
 << 16 |Ü§_¡p.
‰ac
 >> 16);

353 
gëtimeofday
(&
cur_time
, 
NULL
);

354 
	gdñtime
 = 
cur_time
.
tv_£c
 - 
the_membî
->
œ°_§_ª˚ùt_time
.tv_sec;

355 
	gudñtime
 = 
cur_time
.
tv_u£c
 -

356 
the_membî
->
œ°_§_ª˚ùt_time
.
tv_u£c
;

357 
	gcur_block
->
	gdl§
 = (
u_öt32
)

358 (65536.0 * ((Ë
dñtime
 + (Ë
udñtime
 / 1000000.0));

366 
	$BuûdBlockInfo
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
u_öt32
 
s§c
,

367 
π˝_ªp‹t_block
 *
cur_block
){

368 
membî
 *
the_membî
 = 
	`GëMembîFromSSRCHash
(
the_c⁄ãxt
, 
s§c
);

369 
u_öt32
 
ex≥˘ed
;

371 i‡(
the_membî
 =
NULL
){

372 
the_membî
 = 
	`E°ablishNewMembî
(
the_c⁄ãxt
, 
s§c
, 
NULL
, NULL,

373 
FALSE
, 
RTP_MEMBER_PENDING
);

374 #ifde‡
_RTP_DEBUG


375 
	`¥ötf
("EstablishNewMember in BuildBlockInfo for member id %ld (SSRC 0x%lx)\n",

376 
the_membî
->
unique_id
, 
s§c
);

379 i‡(
the_membî
->
loˇl_öfo
 =
NULL
){

380 #ifde‡
_RTP_DEBUG


381 
	`¥ötf
("NullÜocal_info for member id %ld (SSRC 0x%lx)\n",

382 
the_membî
->
unique_id
, 
s§c
);

388 
cur_block
->
s§c
 = ssrc;

389 
cur_block
->
‰ac_lo°
 = 0;

390 
cur_block
->
cum_lo°
 = 0;

391 
cur_block
->
highe°_£qno
 = 0;

392 
cur_block
->
jôãr
 = 0;

393 
cur_block
->
l§
 = 0;

394 
cur_block
->
dl§
 = 0;

398 
	`CompuãBlockInfo
(
the_c⁄ãxt
, 
the_membî
, 
cur_block
, &
ex≥˘ed
);

400 #ifde‡
_RTP_DEBUG


401 
	`¥ötf
("Computed block info for member id %ld (SSRC 0x%lx)\n",

402 
the_membî
->
unique_id
, 
s§c
);

408 
the_membî
->
loˇl_öfo
->
ex≥˘ed_¥i‹
 = 
ex≥˘ed
;

409 
the_membî
->
loˇl_öfo
->
num_pkts_ªcd
 +=

410 
the_membî
->
loˇl_öfo
->
num_pkts_ªcd_sö˚_œ°
;

411 
the_membî
->
loˇl_öfo
->
num_pkts_ªcd_sö˚_œ°
 = 0;

415 
	`Upd©e_RR
(
the_c⁄ãxt
->
my_membîöfo
, 
the_membî
, 
cur_block
);

418 
	}
}

425 
	$AddPad
(* 
cur
, 
cur_tŸ_Àn
, 
∑ddög_block
){

426 
∑d
 = 
∑ddög_block
 - (
cur_tŸ_Àn
 %Öadding_block);

427 i‡(
∑d
 =
∑ddög_block
){

430 
	`mem£t
(
cur
, 0, 
∑d
 - 1);

431 
cur
[
∑d
-1] = ()Öad;

432  
∑d
;

433 
	}
}

440 *
	$Buûd_SR_Packë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

441 *
buf„r
, 
lök
 **
fú°_£ndî_lök
){

442 
timevÆ
 
cur_time
;

443 
¡p64
 
cur_time_¡p
;

444 
π˝_∑ckë
 
the_∑ckë
;

445 
lök
 *
cur_lök
 = *
fú°_£ndî_lök
;

446 
num_£ndîs
 = 0;

447 
pkéí
;

448 *
p
 = 
buf„r
;

450 
the_∑ckë
.
comm⁄
 = (
π˝_comm⁄
 *Ë
p
;

451 
p
 +
RTCP_COMMON_SIZE
;

452 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
 = (
π˝_§
 *Ë
p
;

453 
p
 +
RTCP_SR_SIZE
;

455 
	`SET_RTCP_VERSION
(*
the_∑ckë
.
comm⁄
, 
_RTP_VERSION
);

456 
	`SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 0);

457 
the_∑ckë
.
comm⁄
->
±
 = 
RTCP_PACKET_SR
;

458 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
s§c
 = 
the_c⁄ãxt
->
my_s§c
;

459 
	`gëtimeofday
(&
cur_time
, 
NULL
);

460 
cur_time_¡p
 = 
	`C⁄vîtTimevÆToNTP
(
cur_time
);

461 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
¡p_£cs
 = 
cur_time_¡p
.
£cs
;

462 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
¡p_‰ac
 = 
cur_time_¡p
.
‰ac
;

465 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
πp_°amp
 =

466 
the_c⁄ãxt
->
öô_RTP_time°amp
 +Åhe_c⁄ãxt->
time_ñ≠£d
;

467 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
pkt_cou¡
 =

468 
the_c⁄ãxt
->
£ndög_pkt_cou¡
;

469 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
o˘_cou¡
 =

470 
the_c⁄ãxt
->
£ndög_o˘ë_cou¡
;

472 
num_£ndîs
 < 31 && 
cur_lök
 !
NULL
){

476 if((
cur_lök
->
my_membî
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
) &&

477 (
cur_lök
->
my_membî
->
unique_id
 != 0)) {

478 
the_∑ckë
.
v¨ü¡
.
§
.
rblock
[
num_£ndîs
] = (
π˝_ªp‹t_block
 *Ë
p
;

479 
p
 +
RTCP_REPORT_BLOCK_SIZE
;

480 
	`BuûdBlockInfo
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
->
s§c
,

481 
the_∑ckë
.
v¨ü¡
.
§
.
rblock
[
num_£ndîs
]);

482 
num_£ndîs
++;

484 
cur_lök
 = cur_lök->
√xt_lök
;

487 
	`SET_RTCP_RC
(*
the_∑ckë
.
comm⁄
, 
num_£ndîs
);

490 *
fú°_£ndî_lök
 = 
cur_lök
;

491 
pkéí
 = 6 + (
π˝_ªp‹t_block
Ë* 
num_£ndîs
 / 4;

492 
the_∑ckë
.
comm⁄
->
Àn
 = 
	`ht⁄s
((
u_öt16
Ë
pkéí
);

494 #i‚de‡
WORDS_BIGENDIAN


495 
	`FlùRTCPByãOrdîög
(
buf„r
);

498  
buf„r
 + 4 * (
pkéí
+1);

499 
	}
}

508 *
	$Buûd_RR_Packë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

509 *
buf„r
, 
lök
 **
fú°_£ndî_lök
,

510 
buûd_em±y
){

511 
π˝_∑ckë
 
the_∑ckë
;

512 
lök
 *
cur_lök
 = *
fú°_£ndî_lök
;

513 
num_£ndîs
 = 0;

514 
pkéí
;

515 *
p
 = 
buf„r
;

517 
the_∑ckë
.
comm⁄
 = (
π˝_comm⁄
 *Ë
p
;

518 
p
 +
RTCP_COMMON_SIZE
;

519 
the_∑ckë
.
v¨ü¡
.
º
.
º_fixed
 = (
π˝_º
 *Ë
p
;

520 
p
 +
RTCP_RR_SIZE
;

522 
	`SET_RTCP_VERSION
(*
the_∑ckë
.
comm⁄
, 
_RTP_VERSION
);

523 
	`SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 0);

524 
the_∑ckë
.
comm⁄
->
±
 = 
RTCP_PACKET_RR
;

525 
the_∑ckë
.
v¨ü¡
.
º
.
º_fixed
->
s§c
 = 
the_c⁄ãxt
->
my_s§c
;

527 
num_£ndîs
 < 31 && 
cur_lök
 !
NULL
 && !
buûd_em±y
) {

531 if((
cur_lök
->
my_membî
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
) &&

532 (
cur_lök
->
my_membî
->
unique_id
 != 0)) {

533 
the_∑ckë
.
v¨ü¡
.
º
.
rblock
[
num_£ndîs
] = (
π˝_ªp‹t_block
 *Ë
p
;

534 
p
 +
RTCP_REPORT_BLOCK_SIZE
;

535 
	`BuûdBlockInfo
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
->
s§c
,

536 
the_∑ckë
.
v¨ü¡
.
º
.
rblock
[
num_£ndîs
]);

537 
num_£ndîs
++;

539 
cur_lök
 = cur_lök->
√xt_lök
;

544 
	`SET_RTCP_RC
(*
the_∑ckë
.
comm⁄
, 
num_£ndîs
);

545 
pkéí
 = 1 + 
RTCP_REPORT_BLOCK_SIZE
 * 
num_£ndîs
 / 4;

547 
the_∑ckë
.
comm⁄
->
Àn
 = 
	`ht⁄s
((
u_öt16
Ë
pkéí
);

548 *
fú°_£ndî_lök
 = 
cur_lök
;

550 #i‚de‡
WORDS_BIGENDIAN


551 
	`FlùRTCPByãOrdîög
(
buf„r
);

554  
buf„r
 + 4 * (
pkéí
 + 1);

555 
	}
}

558 *
	$Buûd_RRSR_Packës
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
buf„r
) {

559 
lök
 *
£ndîlök
;

560 *
cur_pos
 = 
buf„r
;

562 
£ndîlök
 = 
the_c⁄ãxt
->
RTP_SídîLi°
.
a˘uÆ_li°
.
fú°_lök
;

564 i‡(
the_c⁄ãxt
->
my_membîöfo
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
){

566 
cur_pos
 = 
	`Buûd_SR_Packë
(
the_c⁄ãxt
, cur_pos, &
£ndîlök
);

569 
	`gëtimeofday
(&
the_c⁄ãxt
->
my_membîöfo
->
œ°_§_ª˚ùt_time
, 
NULL
);

571 
cur_pos
 = 
	`Buûd_RR_Packë
(
the_c⁄ãxt
, cur_pos, &
£ndîlök
,

572 
FALSE
);

573 } 
£ndîlök
 !
NULL
);

576  
cur_pos
;

577 
	}
}

582 
	$Pœ˚SDESInfoF‹Membî
(
membî
 *
the_membî
, *
buf„r
,

583 
öô_buf„r_off£t
){

584 
u_öt32
 *
s§c_±r
;

585 
tŸ_byã_Àn
 = 
öô_buf„r_off£t
;

586 
i
;

587 
s§c_±r
 = (
u_öt32
*)(
buf„r
 + 
tŸ_byã_Àn
);

588 *
s§c_±r
 = 
	`¡ohl
(
the_membî
->
s§c
);

589 
tŸ_byã_Àn
 += 4;

590 
i
 = 0; i < 
_RTP_NUM_SDES_TYPES
; i++){

591 i‡(
the_membî
->
sdes_öfo
[
i
] !
NULL
){

592 *(
buf„r
 + 
tŸ_byã_Àn
Ë
i
+1;

593 *(
buf„r
 + 
tŸ_byã_Àn
 + 1) =

594 
	`°æí
(
the_membî
->
sdes_öfo
[
i
]);

595 
	`°r˝y
(
buf„r
 + 
tŸ_byã_Àn
 + 2,

596 
the_membî
->
sdes_öfo
[
i
]);

597 
tŸ_byã_Àn
 +2 + 
	`°æí
(
the_membî
->
sdes_öfo
[
i
]);

601 i‡(
tŸ_byã_Àn
 =
öô_buf„r_off£t
+4){

604  
öô_buf„r_off£t
;

609 *(
buf„r
 + 
tŸ_byã_Àn
) = '\0';

610 
tŸ_byã_Àn
++;

612 
tŸ_byã_Àn
 % 4 != 0);

613  
tŸ_byã_Àn
;

614 
	}
}

624 *
	$Buûd_SDES_Packë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
buf„r
,

625 *
buf„r_t›
, 
∑ddög_block
){

628 
π˝_∑ckë
 
the_∑ckë
;

629 
∑ddög
,
rcou¡
;

630 
membî
 *
the_membî
;

631 
tŸ_byã_Àn
;

632 
√w_byã_Àn
;

633 
c⁄åibut‹_t
 *
c⁄t
, 
ãmp
;

634 
≥rs⁄
 
p
;

639 
ãmp
.
s§c
 = 
the_c⁄ãxt
->
my_s§c
;

640 
ãmp
.
√xt
 = 
the_c⁄ãxt
->
c⁄åibli°
;

641 
rcou¡
 = 0;

642 
c⁄t
 = &
ãmp
;

645 
c⁄t
 !
NULL
) {

646 
the_∑ckë
.
comm⁄
 = (
π˝_comm⁄
 *Ë
buf„r
;

647 
	`SET_RTCP_VERSION
(*
the_∑ckë
.
comm⁄
, 
_RTP_VERSION
);

648 
	`SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 0);

649 
the_∑ckë
.
comm⁄
->
±
 = 
RTCP_PACKET_SDES
;

650 
tŸ_byã_Àn
 = 4;

652 (
c⁄t
 !
NULL
Ë&& (
rcou¡
 < 31)) {

653 if(
c⁄t
->
s§c
 =
the_c⁄ãxt
->
my_s§c
) {

654 
the_membî
 = 
	`GëMembîFromUniqueIDHash
(
the_c⁄ãxt
, 0);

656 
	`RTPSessi⁄GëUniqueIDF‹CSRC
(
the_c⁄ãxt
->
c⁄ãxt_num
, 
c⁄t
->
s§c
, &
p
);

657 
the_membî
 = 
	`GëMembîFromUniqueIDHash
(
the_c⁄ãxt
, 
p
);

659 i‡(
the_membî
 =
NULL
){

660 
the_membî
 = 
	`E°ablishNewMembî
(
the_c⁄ãxt
, 
c⁄t
->
s§c
,

661 
NULL
, NULL, 
FALSE
, 
RTP_MEMBER_PENDING
);

663 
√w_byã_Àn
 = 
	`Pœ˚SDESInfoF‹Membî
(
the_membî
, 
buf„r
,

664 
tŸ_byã_Àn
);

665 
rcou¡
++;

666 i‡(
√w_byã_Àn
 =
tŸ_byã_Àn
){

669 
rcou¡
--;

670 } 
tŸ_byã_Àn
 = 
√w_byã_Àn
;

671 
c⁄t
 = c⁄t->
√xt
;

673 
	`SET_RTCP_RC
(*
the_∑ckë
.
comm⁄
, 
rcou¡
);

674 if((
∑ddög_block
 > 0Ë&& (
c⁄t
 =
NULL
)) {

675 
∑ddög
 = 
	`AddPad
(
buf„r
+
tŸ_byã_Àn
,

676 
buf„r
+
tŸ_byã_Àn
 - 
buf„r_t›
,

677 
∑ddög_block
);

678 i‡(
∑ddög
 > 0){

679 
tŸ_byã_Àn
 +
∑ddög
;

680 
	`SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 1);

685 
the_∑ckë
.
comm⁄
->
Àn
 = 
	`ht⁄s
((
u_öt16
)(
tŸ_byã_Àn
 / 4 - 1));

687 #i‚de‡
WORDS_BIGENDIAN


688 
	`FlùRTCPByãOrdîög
(
buf„r
);

691 
rcou¡
 = 0;

692 
buf„r
 +
tŸ_byã_Àn
;

695  
buf„r
;

696 
	}
}

712 *
BuûdIndividuÆByePackë
(
ARG_UNUSED
(
_RTP_CONTEXT
 *,
the_c⁄ãxt
),

713 *
buf„r
, *
buf„r_t›
,

714 
∑ddög_block
, *
ªas⁄
, 
u_öt32
 
s§c
)

716 
π˝_∑ckë
 
	gthe_∑ckë
;

717 
	g∑ddög
,
	gÀngth
,
	gnuŒö£πs
;

718 *
	gcur_pos
, *
	gÀn_fõld
;

720 
	gcur_pos
 = 
buf„r
;

721 
	gthe_∑ckë
.
	gcomm⁄
 = (
π˝_comm⁄
 *Ë
cur_pos
;

722 
	gcur_pos
 +
RTCP_COMMON_SIZE
;

724 
SET_RTCP_VERSION
(*
the_∑ckë
.
comm⁄
, 
_RTP_VERSION
);

725 
SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 0);

726 
	gthe_∑ckë
.
	gcomm⁄
->
	g±
 = 
RTCP_PACKET_BYE
;

727 
SET_RTCP_RC
(*
the_∑ckë
.
comm⁄
, 1);

729 
	gthe_∑ckë
.
	gv¨ü¡
.
	gbye
.
	gbyeblock
[0] = (
π˝_bye_block
 *Ë
cur_pos
;

730 
	gcur_pos
 +
RTCP_BYE_BLOCK_SIZE
;

732 
	gthe_∑ckë
.
	gv¨ü¡
.
	gbye
.
	gbyeblock
[0]->
	gs§cc§c
 = 
s§c
;

734 
	gÀn_fõld
 = 
cur_pos
;

735 
	gcur_pos
++;

737 if(
	gªas⁄
 !
NULL
) {

738 
Àngth
 = 
°æí
(
ªas⁄
);

739 if(
	gÀngth
 > 255)

740 
	gÀngth
 = 255;

741 
°∫˝y
(
cur_pos
, 
ªas⁄
, 
Àngth
);

742 
	gcur_pos
 +
Àngth
;

743 *
	gÀn_fõld
 = 
Àngth
;

744 
	gÀngth
 += 1;

746 *
	gÀn_fõld
 = 0;

747 
	gÀngth
 = 1;

754 
	gnuŒö£πs
 = 4 - (
Àngth
 % 4);

755 if(
	gnuŒö£πs
 =4Ë
nuŒö£πs
 = 0;

756 
mem£t
(
cur_pos
, 0, 
nuŒö£πs
);

758 
	gcur_pos
 +
nuŒö£πs
;

760 
	g∑ddög
 = 0;

761 i‡(
	g∑ddög_block
 > 0) {

762 
	g∑ddög
 = 
AddPad
(
cur_pos
, cur_po†- 
buf„r_t›
, 
∑ddög_block
);

763 i‡(
	g∑ddög
 > 0){

764 
SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 1);

767 
	gthe_∑ckë
.
	gcomm⁄
->
	gÀn
 = 
ht⁄s
((
u_öt16
)((
cur_pos
 + 
∑ddög
 -

768 
buf„r
 - 4) / 4));

770 #i‚de‡
WORDS_BIGENDIAN


771 
FlùRTCPByãOrdîög
(
buf„r
);

774 
	gbuf„r
 = 
cur_pos
 + 
∑ddög
;

775  
	gbuf„r
;

786 *
	$BuûdCompoundByePackë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
buf„r
,

787 *
buf„r_t›
, 
∑ddög_block
,

788 *
ªas⁄
){

789 
π˝_∑ckë
 
the_∑ckë
;

790 
∑ddög
,
Àngth
,
nuŒö£πs
,
rcou¡
;

791 *
cur_pos
, *
Àn_fõld
;

792 
membî
 *
the_membî
;

793 
c⁄åibut‹_t
 *
c⁄t
, 
ãmp
;

794 
≥rs⁄
 
p
;

799 
ãmp
.
s§c
 = 
the_c⁄ãxt
->
my_s§c
;

800 
ãmp
.
√xt
 = 
the_c⁄ãxt
->
c⁄åibli°
;

802 
rcou¡
 = 0;

803 
c⁄t
 = &
ãmp
;

808 
c⁄t
 !
NULL
) {

809 
cur_pos
 = 
buf„r
;

811 
the_∑ckë
.
comm⁄
 = (
π˝_comm⁄
 *Ë
cur_pos
;

812 
cur_pos
 +
RTCP_COMMON_SIZE
;

813 
	`SET_RTCP_VERSION
(*
the_∑ckë
.
comm⁄
, 
_RTP_VERSION
);

814 
	`SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 0);

815 
the_∑ckë
.
comm⁄
->
±
 = 
RTCP_PACKET_BYE
;

817 (
c⁄t
 !
NULL
Ë&& (
rcou¡
 < 31)) {

819 if(
c⁄t
->
s§c
 =
the_c⁄ãxt
->
my_s§c
) {

820 
the_membî
 = 
	`GëMembîFromUniqueIDHash
(
the_c⁄ãxt
, 0);

822 
	`RTPSessi⁄GëUniqueIDF‹CSRC
(
the_c⁄ãxt
->
c⁄ãxt_num
, 
c⁄t
->
s§c
, &
p
);

823 
the_membî
 = 
	`GëMembîFromUniqueIDHash
(
the_c⁄ãxt
, 
p
);

825 i‡(
the_membî
 =
NULL
){

826 
	`E°ablishNewMembî
(
the_c⁄ãxt
, 
c⁄t
->
s§c
,

827 
NULL
, NULL, 
FALSE
, 
RTP_MEMBER_PENDING
);

829 
the_∑ckë
.
v¨ü¡
.
bye
.
byeblock
[
rcou¡
] = (
π˝_bye_block
 *Ë
cur_pos
;

830 
cur_pos
 +
RTCP_BYE_BLOCK_SIZE
;

832 
the_∑ckë
.
v¨ü¡
.
bye
.
byeblock
[
rcou¡
]->
s§cc§c
 = 
c⁄t
->
s§c
;

833 
rcou¡
++;

834 
c⁄t
 = c⁄t->
√xt
;

836 
	`SET_RTCP_RC
(*
the_∑ckë
.
comm⁄
, 
rcou¡
);

837 
Àn_fõld
 = 
cur_pos
;

838 
cur_pos
++;

840 if(
ªas⁄
 !
NULL
) {

841 
Àngth
 = 
	`°æí
(
ªas⁄
);

842 if(
Àngth
 > 255)

843 
Àngth
 = 255;

844 
	`°∫˝y
(
cur_pos
, 
ªas⁄
, 
Àngth
);

845 
cur_pos
 +
Àngth
;

846 *
Àn_fõld
 = 
Àngth
;

847 
Àngth
 += 1;

849 *
Àn_fõld
 = 0;

850 
Àngth
 = 1;

857 
nuŒö£πs
 = 4 - (
Àngth
 % 4);

858 if(
nuŒö£πs
 == 4)Çullinserts = 0;

859 
	`mem£t
(
cur_pos
, 0, 
nuŒö£πs
);

861 
cur_pos
 +
nuŒö£πs
;

863 
∑ddög
 = 0;

864 if((
∑ddög_block
 > 0Ë&& (
c⁄t
 =
NULL
)) {

865 
∑ddög
 = 
	`AddPad
(
cur_pos
, cur_po†- 
buf„r_t›
, 
∑ddög_block
);

866 i‡(
∑ddög
 > 0){

867 
	`SET_RTCP_P
(*
the_∑ckë
.
comm⁄
, 1);

870 
the_∑ckë
.
comm⁄
->
Àn
 = 
	`ht⁄s
((
u_öt16
)((
cur_pos
 + 
∑ddög
 -

871 
buf„r
 - 4) / 4));

873 #i‚de‡
WORDS_BIGENDIAN


874 
	`FlùRTCPByãOrdîög
(
buf„r
);

877 
rcou¡
 = 0;

878 
buf„r
 = 
cur_pos
 + 
∑ddög
;

881  
buf„r
;

882 
	}
}

888 
π≥º‹
 
	$Rem≠Pîs⁄
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
≥rs⁄
 *
p
){

889 
i
;

890 
i
=0; i < 
the_c⁄ãxt
->
num_ªm≠s
; i++){

891 i‡(
the_c⁄ãxt
->
ID_ªm≠
[
i
] =*
p
){

892 *
p
 = 
the_c⁄ãxt
->
ID_‹ig_vÆ
[
i
];

893 
	`Rem≠Pîs⁄
(
the_c⁄ãxt
, 
p
);

894  
RTP_OK
;

897  
RTP_OK
;

898 
	}
}

905 
	$S∂ôAndHo°OrdîLígthCompoundRTCP
(*
π˝∑ckë
, *
ödpkts
[],

906 
Àn
){

909 
numpkts
 = 0;

910 * 
cuæoc
 = 
π˝∑ckë
;

911 
u_öt16
 
cur_π˝_pkéí
;

912 
Àn
 > 0){

913 
ödpkts
[
numpkts
] = 
cuæoc
;

914 
numpkts
++;

917 
cur_π˝_pkéí
 = 
	`ht⁄s
(*((
u_öt16
*Ë((*)
cuæoc
 + 2)));

918 *((
u_öt16
*Ë((*)
cuæoc
 + 2)Ë
cur_π˝_pkéí
;

919 
Àn
 -4 * 
cur_π˝_pkéí
 + 4;

920 
cuæoc
 +4 * 
cur_π˝_pkéí
 + 4;

922 #ifde‡
_RTP_DEBUG


923 i‡(
Àn
 < 0) {

924 
	`¥ötf
("SplitAndHostOrderLengthCompoundRTCP:Üen (== %d) < 0\n",

925 
Àn
);

928  
numpkts
;

929 
	}
}

932 #i‚de‡
WORDS_BIGENDIAN


936 
	$FlùRTPByãOrdîög
(*
the_∑ckë
, 
pkéí
)

938 
πp_hdr_t
 *
the_hdr
 = (πp_hdr_t*Ë
the_∑ckë
;

939 
πp_∑ckë
 
the_pkt
;

941 
the_hdr
->
£q
 = 
	`¡ohs
(the_hdr->seq);

942 
the_hdr
->
ts
 = 
	`¡ohl
(the_hdr->ts);

943 
the_hdr
->
s§c
 = 
	`¡ohl
(the_hdr->ssrc);

944 
the_pkt
 = 
	`RTPGëRTPPackë
(
the_∑ckë
, 
pkéí
);

946 i‡(
the_pkt
.
RTP_exãnsi⁄
 !
NULL
){

947 
the_pkt
.
RTP_exãnsi⁄
->
ëy≥
 =

948 
	`¡ohs
(
the_pkt
.
RTP_exãnsi⁄
->
ëy≥
);

949 
the_pkt
.
RTP_exãnsi⁄
->
ñí
 =

950 
	`¡ohs
(
the_pkt
.
RTP_exãnsi⁄
->
ñí
);

953 
	}
}

956 
	$FixRï‹tBlockOrdîög
(
π˝_ªp‹t_block
 *
rb
)

958 
rb
->
s§c
 = 
	`¡ohl
(rb->ssrc);

959 
	`Flù24
(((*Ë
rb
) + 5);

960 
rb
->
highe°_£qno
 = 
	`¡ohl
(rb->highest_seqno);

961 
rb
->
jôãr
 = 
	`¡ohl
(rb->jitter);

962 
rb
->
l§
 = 
	`¡ohl
(rb->lsr);

963 
rb
->
dl§
 = 
	`¡ohl
(rb->dlsr);

964 
	}
}

972 
	$FlùRTCPByãOrdîög
(*
buf„r
)

974 
i
, 
rc
;

975 
π˝_∑ckë
 
the_∑ckë
;

977 
the_∑ckë
 = 
	`RTPGëRTCPPackë
(
buf„r
);

978 
rc
 = 
	`RTCP_RC
(*
the_∑ckë
.
comm⁄
);

984 
the_∑ckë
.
comm⁄
->
±
) {

985 
RTCP_PACKET_SR
:

986 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
s§c
 =

987 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
s§c
);

989 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
¡p_£cs
 =

990 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
¡p_£cs
);

991 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
¡p_‰ac
 =

992 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
¡p_‰ac
);

993 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
πp_°amp
 =

994 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
πp_°amp
);

995 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
pkt_cou¡
 =

996 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
pkt_cou¡
);

997 
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
o˘_cou¡
 =

998 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
§
.
§_fixed
->
o˘_cou¡
);

1000 
i
 = 0; i < 
rc
; i++) {

1001 
	`FixRï‹tBlockOrdîög
(
the_∑ckë
.
v¨ü¡
.
§
.
rblock
[
i
]);

1005 
RTCP_PACKET_RR
:

1006 
the_∑ckë
.
v¨ü¡
.
º
.
º_fixed
->
s§c
 =

1007 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
º
.
º_fixed
->
s§c
);

1009 
i
 = 0; i < 
rc
; i++) {

1010 
	`FixRï‹tBlockOrdîög
(
the_∑ckë
.
v¨ü¡
.
º
.
rblock
[
i
]);

1014 
RTCP_PACKET_BYE
:

1015 
i
 = 0; i < 
rc
; i++) {

1016 
the_∑ckë
.
v¨ü¡
.
bye
.
byeblock
[
i
]->
s§cc§c
 =

1017 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
bye
.
byeblock
[
i
]->
s§cc§c
);

1021 
RTCP_PACKET_APP
:

1022 
the_∑ckë
.
v¨ü¡
.
≠p
.
≠p_fixed
->
s§cc§c
 =

1023 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
≠p
.
≠p_fixed
->
s§cc§c
);

1024 
the_∑ckë
.
v¨ü¡
.
≠p
.
≠p_fixed
->
«me
 =

1025 
	`¡ohl
(
the_∑ckë
.
v¨ü¡
.
≠p
.
≠p_fixed
->
«me
);

1028 
RTCP_PACKET_SDES
:

1034 
	}
}

1044 
	$Flù24
(*
the_24bô_thög
){

1045 
ãmp
 = *
the_24bô_thög
;

1046 
the_24bô_thög
[0] =Åhe_24bit_thing[2];

1047 
the_24bô_thög
[2] = 
ãmp
;

1049 
	}
}

1055 #ifde‡
_RTP_DEFINE_EDEBUG


1057 #ifde‡
_RTP_DEBUG


1058 
π≥º‹
 
	$îr‹debug
(
π≥º‹
 
îr
, *
func
, *
msg
, ...)

1060 
va_li°
 
¨gs
;

1061 
Àn
;

1063 
_RTP_cur_îr
 = 
îr
;

1064 #ifde‡
HAVE_SNPRINTF


1065 
Àn
 = 
	`¢¥ötf
(
_RTP_îr_msg
, (_RTP_îr_msg), "CÆ»‰om %s(): ", 
func
);

1067 
Àn
 = 
	`•rötf
(
_RTP_îr_msg
, "CÆ»‰om %s(): ", 
func
);

1070 #ifde‡
HAVE_VSNPRINTF


1071 
	`va_°¨t
(
¨gs
, 
msg
);

1072 
	`v¢¥ötf
(
_RTP_îr_msg
 + 
Àn
, (_RTP_îr_msgË-Üí, 
msg
, 
¨gs
);

1073 
	`va_íd
(
¨gs
);

1075 
	`va_°¨t
(
¨gs
, 
msg
);

1076 
	`v•rötf
(
_RTP_îr_msg
 + 
Àn
, 
msg
, 
¨gs
);

1077 
	`va_íd
(
¨gs
);

1079  
îr
;

1080 
	}
}

1084 
π≥º‹
 
îr‹debug
‘çîr‹ 
îr
, 
ARG_UNUSED
(*,
func
),

1085 
ARG_UNUSED
(*, 
msg
), ...)

1087 
	g_RTP_cur_îr
 = 
îr
;

1088  
	gîr
;

	@rtp_api_internal.h

8 
	~"πp_mli°_öã∫Æ.h
"

10 #i‚de‡
_RTP_API_INTERNAL_H


11 
	#_RTP_API_INTERNAL_H


	)

13 
	~"πp_≠i.h
"

14 
	~"πp_lowÀvñ.h
"

23 
	#_RTP_MAX_CSRC
 15

	)

28 
	#_RTP_INIT_CONTEXTS_AVAIL
 256

	)

32 
	#_RTP_VERSION
 2

	)

37 
	#_RTP_CONTEXT_INC
 10

	)

41 
	#_RTP_MAX_BYE_SIZE
 1024

	)

47 
	#_RTP_MAX_PKTS_IN_COMPOUND
 200

	)

52 
	#_RTP_MAX_PAYLOAD_TYPES
 128

	)

57 
	#_RTP_DEFAULT_BANDWIDTH
 120

	)

62 
	#_RTP_DEFAULT_RTCP_FRAC
 .05;

	)

67 
	#_RTP_DEFAULT_SENDER_BW_FRAC
 0.25

	)

77 
	#_RTP_MAX_UNIQUE_ID_REMAPS
 2000

	)

83 
	#_RTP_HARD_MEMBER_TIMEOUT
 3

	)

91 
	#_RTP_SOFT_MEMBER_TIMEOUT
 5

	)

96 
	#_RTP_SENDER_TIMEOUT
 1

	)

101 
	#_RTP_PURPORTED_SENDER_TIMEOUT
 5

	)

105 
	#_RTP_SENDER_MAX_TIMEOUT
 3600

	)

106 
	#_RTP_PURPORTED_SENDER_MAX_TIMEOUT
 18000

	)

112 
	#_RTCP_MIN_TIME
 5

	)

119 
	#_RTCP_SIZE_GAIN
 (1.0 / 16.0)

	)

124 
	#_GETTIMEOFDAY_TO_NTP_OFFSET
 2208988800U

	)

132 
	#_RTP_MAXIMUM_SSRC_REDRAWS
 50

	)

135 #i‚de‡
FALSE


136 
	#FALSE
 0

	)

137 
	#TRUE
 1

	)

147 
	sc⁄åibut‹
 {

148 
u_öt32
 
	ms§c
;

149 
c⁄åibut‹
 *
	m√xt
;

150 } 
	tc⁄åibut‹_t
;

169 
	mc⁄ãxt_num
;

183 
ªc⁄sidî©i⁄_t
 
	mªc⁄sidî©i⁄
;

188 
öt32
 
	m¥ev_group_size
;

196 
u_öt32
 
	m°©ic_s§c
;

197 
u_öt32
 
	ms§c_mask
;

201 
u_öt32
 
	mmy_s§c
;

205 
u_öt32
 
	m£ndög_pkt_cou¡
;

209 
u_öt32
 
	m£ndög_o˘ë_cou¡
;

215 
öt32
 
	m¥ofûeRTPTimeR©es
[
_RTP_MAX_PAYLOAD_TYPES
];

219 
öt32
 
	mCSRCÀn
;

222 
u_öt32
 *
	mCSRCLi°
;

225 
c⁄åibut‹_t
 *
	mc⁄åibli°
;

228 
	m£ssi⁄_b™dwidth
;

232 
	mπ˝_‰a˘i⁄
;

236 
	m£ndî_bw_‰a˘i⁄
;

240 * 
	mu£r_d©a
;

245 *
	mnd_d©a
;

254 
u_öt32
 
	mmy_¥evious_s§c
;

259 
öt32
 
	möô_RTP_time°amp
;

263 
öt32
 
	mtime_ñ≠£d
;

268 
öt32
 
	möô_£q_no
;

271 
öt32
 
	m£q_no
;

275 
πp_hdr_ext
 *
	mhdr_exãnsi⁄
;

281 
	mPªvítE¡ryI¡oFœggögFun˘i⁄s
;

298 
timevÆ
 
	mœ°_π˝_£nd
;

301 
	möôül
;

306 
	mœ°_pkt_size
;

309 
	mavg_π˝_size
;

313 
	møndom_Á˘‹
;

320 (*
	mUpd©eMembîCÆlBack
)(
	mc⁄ãxt
,
	m≥rs⁄
,
	mπpÊag
,*);

321 (*
	mCh™gedMembîInfoCÆlBack
)(
	mc⁄ãxt
, 
	m≥rs⁄
, 
	mmembîöfo
,

322 *, 
	mπpÊag
);

323 (*
	mCh™gedMembîSockaddrCÆlBack
)(
	mc⁄ãxt
, 
	m≥rs⁄
,

324 
	msockaddr
*, );

325 (*
	mCﬁlidedMembîCÆlBack
)(
	mc⁄ãxt
, 
	m≥rs⁄
,Öîs⁄, 
	mπpÊag
);

326 (*
	mRevîtögIDCÆlBack
)(
	mc⁄ãxt
, 
	m≥rs⁄
,Öîs⁄, *, 
	mπpÊag
);

342 
membî
 *
	mmy_membîöfo
;

348 
≥rs⁄
 
	munique_id_cou¡î
;

357 
hash_èbÀ
 
	mRTP_SSRC_Hash
;

361 
hash_èbÀ
 
	mRTP_ID_Hash
;

365 
hash_èbÀ
 
	mRTP_CNAME_Hash
;

371 
membîshù_li°
 
	mRTP_MembîLi°
;

378 
membîshù_li°
 
	mRTP_SídîLi°
;

395 
	mnum_ªm≠s
;

399 
≥rs⁄
 
	mID_ªm≠
[
_RTP_MAX_UNIQUE_ID_REMAPS
];

400 
≥rs⁄
 
	mID_‹ig_vÆ
[
_RTP_MAX_UNIQUE_ID_REMAPS
];

403 
membî
 *
	mmo°_ª˚¡_πp_£ndî
;

404 
membî
 *
	mmo°_ª˚¡_π˝_£ndî
;

412 
sockaddr
 
	mmo°_ª˚¡_addr
;

415 
	mbyîós⁄
[
_RTP_MAX_BYE_SIZE
];

417 } 
	t_RTP_CONTEXT
;

420 #i‚de‡
_RTP_API_INTERNAL_C


427 
_RTP_CONTEXT
 **
C⁄ãxtLi°
;

430 
_RTP_c⁄ãxt_above_u£d
;

433 
_RTP_c⁄ãxts_ö_u£
;

439 
SëDeÁu…PaylﬂdR©es
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

441 
π≥º‹
 
_VÆidRTPC⁄ãxt
(
c⁄ãxt
 
cid
, *
ˇŒög_func
);

443 
π≥º‹
 
_GëMembîF‹C⁄ãxt
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
, 
membî
 **
the_membî_p
,

444 *
ˇŒög_func
);

445 #ifde‡
_RTP_DEBUG


446 
	#VÆidRTPC⁄ãxt
(
c
, 
f
Ë
	`_VÆidRTPC⁄ãxt
(c, f)

	)

447 
	#GëMembîF‹C⁄ãxt
(
c
, 
p
, 
m
, 
f
Ë
	`_GëMembîF‹C⁄ãxt
(c,Ö, m, f)

	)

449 
	#VÆidRTPC⁄ãxt
(
c
, 
f
Ë
	`_VÆidRTPC⁄ãxt
(c, 0)

	)

450 
	#GëMembîF‹C⁄ãxt
(
c
, 
p
, 
m
, 
f
Ë
	`_GëMembîF‹C⁄ãxt
(c,Ö, m, 0)

	)

453 
timevÆ
 
AddTimes
(timevÆ *
time1
, timevÆ *
time2
);

455 
timevÆ
 
C⁄vîtDoubÀToTime
(
öãrvÆ
);

457 
RTPTimeDiff
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

458 
timevÆ
 *
œãr_time
,

459 
timevÆ
 *
óæõr_time
,

460 
öt8
 
∑ylﬂd_ty≥
);

462 
CompuãRTCPSídDñay
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

464 
CompuãSídîRTCPSídDñay
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

466 
CompuãRe˚ivîRTCPSídDñay
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

468 
DoRTCPRec⁄sidî©i⁄
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

470 
CompuãBlockInfo
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
,

471 
π˝_ªp‹t_block
 *
cur_block
, 
u_öt32
 *
ex≥˘ed_±r
);

473 *
Buûd_SR_Packë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

474 *
buf„r
, 
lök
** 
fú°_membî
);

476 *
Buûd_RR_Packë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

477 *
buf„r
, 
lök
** 
fú°_membî
,

478 
buûd_em±y
);

480 *
Buûd_RRSR_Packës
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
buf„r
);

482 *
Buûd_SDES_Packë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
buf„r
,

483 *
buf„r_t›
, 
∑ddög_block
);

485 *
BuûdIndividuÆByePackë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
buf„r
,

486 *
buf„r_t›
, 
∑ddög_block
,

487 *
ªas⁄
, 
u_öt32
 
s§c
);

490 *
BuûdCompoundByePackë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
buf„r
,

491 *
buf„r_t›
, 
∑ddög_block
,

492 *
ªas⁄
);

494 
π≥º‹
 
Rem≠Pîs⁄
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
≥rs⁄
 *
p
);

496 
S∂ôAndHo°OrdîLígthCompoundRTCP
(*
π˝∑ckë
, *
ödpkts
[],

497 
Àn
);

499 #i‚de‡
WORDS_BIGENDIAN


501 
FlùRTPByãOrdîög
(*
the_∑ckë
, 
pkéí
);

503 
FlùRTCPByãOrdîög
(*
the_∑ckë
);

505 
Flù24
(*
the_24bô_thög
);

	@rtp_collision.c

8 
	~"sysdï.h
"

10 
	~"πp_≠i_öã∫Æ.h
"

11 
	~"πp_cﬁlisi⁄.h
"

12 
	~"πp_í¸y±.h
"

16 
	$CompuãNewSSRC
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

17 
u_öt32
 
√w_s§c
;

18 
membî
 *
Ÿhî_membî
;

19 
lo›cou¡
;

23 
lo›cou¡
 = 0;

25 #ifde‡
_RTP_SEMI_RANDOM


28 
√w_s§c
 = 
	`øndom32
(
the_c⁄ãxt
->
my_s§c
)

29 + (Ë
the_c⁄ãxt
->
œ°_π˝_£nd
.
tv_u£c
;

31 
√w_s§c
 = 
	`øndom32
(
the_c⁄ãxt
->
my_s§c
);

37 
√w_s§c
 = (
the_c⁄ãxt
->
°©ic_s§c
 &Åhe_c⁄ãxt->
s§c_mask
) |

38 (
√w_s§c
 & ~(
the_c⁄ãxt
->
s§c_mask
));

39 
Ÿhî_membî
 = 
	`GëMembîFromSSRCHash
(
the_c⁄ãxt
, 
√w_s§c
);

40 
lo›cou¡
++;

41 } (
Ÿhî_membî
 !
NULL
Ë&& (
lo›cou¡
 < 
_RTP_MAXIMUM_SSRC_REDRAWS
));

43 if(
lo›cou¡
 =
_RTP_MAXIMUM_SSRC_REDRAWS
) {

47 
	`RemoveMembîFromSSRCHash
(
the_c⁄ãxt
,Åhe_c⁄ãxt->
my_membîöfo
);

48 
the_c⁄ãxt
->
my_membîöfo
->
s§c
 = 
√w_s§c
;

49 
the_c⁄ãxt
->
my_s§c
 = 
√w_s§c
;

50 
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
,Åhe_c⁄ãxt->
my_membîöfo
);

53 i‡(
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_¥ev
 =
NULL
){

56 i‡(
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_√xt
 !
NULL
){

58 #ifde‡
_RTP_DEBUG


59 
	`¥ötf
("Hashingá collider\n");

62 
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
,

63 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_√xt
);

67 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_¥ev
->
cﬁlides_wôh_√xt
 =

68 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_√xt
;

70 i‡(
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_√xt
 !
NULL
){

71 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_√xt
->
cﬁlides_wôh_¥ev
 =

72 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_¥ev
;

76 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlidög
 = 
FALSE
;

77 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_√xt
 = 
NULL
;

78 
the_c⁄ãxt
->
my_membîöfo
->
cﬁlides_wôh_¥ev
 = 
NULL
;

79 
	}
}

92 
membî
 *
	$H™dÀSSRCCﬁlisi⁄
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
,

93 
sockaddr
 *
‰omaddr
,

94 
addr_is_π˝
,

95 *
√w_˙ame
, 
is_c⁄åib
){

96 
membî
 *
Ÿhî_membî
;

97 
the_Êag
;

98 
c⁄åibut‹_t
 *
c⁄t
;

100 #ifde‡
_RTP_DEBUG


101 
	`¥ötf
("Com∂aöàwôh membî %lx ", 
the_membî
->
unique_id
);

102 
	`¥ötf
("SSRC = %ld\n", 
the_membî
->
s§c
);

107 
the_membî
->
cﬁlides_wôh_√xt
 !
NULL
){

108 
the_membî
 =Åhe_membî->
cﬁlides_wôh_√xt
;

115 
the_membî
->
cﬁlidög
 = 
TRUE
;

118 
Ÿhî_membî
 = 
	`E°ablishNewMembî
(
the_c⁄ãxt
, 
the_membî
->
s§c
,

119 
NULL
, 
‰omaddr
, 
addr_is_π˝
,

120 
RTP_MEMBER_PENDING
);

128 if(
is_c⁄åib
 == 0) {

129 
	`Ch™geMembîSètus
(
the_c⁄ãxt
, 
Ÿhî_membî
, 
RTP_MEMBER_CONFIRMED
);

131 
	`Ch™geMembîSètus
(
the_c⁄ãxt
, 
Ÿhî_membî
, 
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
);

138 
	`RemoveMembîFromSSRCHash
(
the_c⁄ãxt
, 
Ÿhî_membî
);

139 
Ÿhî_membî
->
cﬁlidög
 = 
TRUE
;

140 
Ÿhî_membî
->
cﬁlides_wôh_¥ev
 = 
the_membî
;

141 
the_membî
->
cﬁlides_wôh_√xt
 = 
Ÿhî_membî
;

143 #ifde‡
_RTP_DEBUG


144 
	`¥ötf
("Membî %∞cﬁlide†√xài†%p\n", 
the_membî
, 
Ÿhî_membî
);

147 i‡(
√w_˙ame
 !
NULL
){

148 
Ÿhî_membî
->
sdes_öfo
[0] = (*Ë
	`mÆloc
(
	`°æí
(
√w_˙ame
) + 1);

149 
	`°r˝y
(
Ÿhî_membî
->
sdes_öfo
[0], 
√w_˙ame
);

150 
	`E¡îCNAMEHashTabÀ
(
the_c⁄ãxt
, 
Ÿhî_membî
);

154 
c⁄t
 = 
the_c⁄ãxt
->
c⁄åibli°
;

155 
the_Êag
 = 0;

156 
c⁄t
 !
NULL
) {

157 i‡(
the_membî
->
s§c
 =
c⁄t
->ssrc) {

158 
the_Êag
 = 
RTP_FLAG_A_CSRC_COLLIDES
;

161 
c⁄t
 = c⁄t->
√xt
;

164 i‡((
the_Êag
 =
RTP_FLAG_A_CSRC_COLLIDES
) &&

165 (
the_c⁄ãxt
->
CﬁlidedMembîCÆlBack
 !
NULL
)){

166 
the_c⁄ãxt
->
	`CﬁlidedMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

167 
the_membî
->
unique_id
,

168 
Ÿhî_membî
->
unique_id
,

169 
the_Êag
);

174 i‡(
the_membî
->
s§c
 =
the_c⁄ãxt
->
my_s§c
){

175 #ifde‡
_RTP_DEBUG


176 
	`¥ötf
("Member %ld ssrc %ld colliding with my ssrc willÅriggerá BYE\n",

177 
Ÿhî_membî
->
unique_id
, 
the_membî
->
s§c
);

180 
the_Êag
 = 
RTP_FLAG_COLLIDE_WITH_ME
;

181 i‡(
the_c⁄ãxt
->
CﬁlidedMembîCÆlBack
 !
NULL
){

182 
the_c⁄ãxt
->
	`CﬁlidedMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

183 
the_membî
->
unique_id
,

184 
Ÿhî_membî
->
unique_id
,

185 
the_Êag
);

194 i‡(
the_membî
->
s§c
 =
the_c⁄ãxt
->
my_s§c
){

195 
timevÆ
 
now
;

196 
	`gëtimeofday
(&
now
, 
NULL
);

197 
	`RTPSëTimî
(
the_c⁄ãxt
->
c⁄ãxt_num
, 
RTP_TIMER_SEND_BYE_COLLISION
,

198 
the_membî
->
s§c
, "LeavingÅoÑesolveá collision",

199 &
now
);

203 
the_c⁄ãxt
->
my_¥evious_s§c
 =Åhe_c⁄ãxt->
my_membîöfo
->
s§c
;

206 
	`CompuãNewSSRC
(
the_c⁄ãxt
);

207 #ifde‡
_RTP_DEBUG


208 
	`¥ötf
("Out of HandleSSRCCollis...\n");

214 (
Ÿhî_membî
);

215 
	}
}

218 
	$MîgeLoˇlInfo
(
πp_¢dr_loˇl
 *
¥ev_loˇl
,Ñç_¢dr_loˇ»*
√w_loˇl
)

220 
timevÆ
 
nŸime
;

221 
nŸime
.
tv_£c
 = 0;

222 
nŸime
.
tv_u£c
 = 0;

224 i‡(
√w_loˇl
->
¥ev_¢dtime
 > 
¥ev_loˇl
->prev_sndtime) {

225 
¥ev_loˇl
->
¥ev_¢dtime
 = 
√w_loˇl
->prev_sndtime;

227 i‡(
	`TimeExpúed
(&
¥ev_loˇl
->
¥ev_rcvtime
,

228 &
√w_loˇl
->
¥ev_rcvtime
, &
nŸime
)) {

229 
¥ev_loˇl
->
¥ev_rcvtime
 = 
√w_loˇl
->prev_rcvtime;

232 
¥ev_loˇl
->
num_pkts_ªcd
 +
√w_loˇl
->num_pkts_recd;

234 i‡(
¥ev_loˇl
->
highe°_£qno
 < 
√w_loˇl
->highest_seqno) {

235 
¥ev_loˇl
->
highe°_£qno
 = 
√w_loˇl
->highest_seqno;

237 
	}
}

244 
membî
 *
	$MîgeMembîs
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
¥ev_membî
,

245 
membî
 *
√w_membî
){

246 
timevÆ
 
nŸime
;

247 
i
;

248 
membî
 *
sw≠mem
;

249 
c⁄åibut‹_t
 *
c⁄t
;

250 
the_Êag
 = 0;

251 *
±_to_u£r_d©a
;

252 
lök
 *
ãmp_lök
;

253 
nŸime
.
tv_£c
 = 0;

254 
nŸime
.
tv_u£c
 = 0;

257 i‡(
√w_membî
->
unique_id
 < 
¥ev_membî
->unique_id){

258 
sw≠mem
 = 
√w_membî
;

259 
√w_membî
 = 
¥ev_membî
;

260 
¥ev_membî
 = 
sw≠mem
;

263 #ifde‡
_RTP_DEBUG


264 
	`¥ötf
("**********\n*********\n*******Merging members %ldánd %ld into %ld",

265 
¥ev_membî
->
unique_id
, 
√w_membî
->unique_id,

266 
¥ev_membî
->
unique_id
);

269 i‡(
	`TimeExpúed
(&
¥ev_membî
->
œ°_upd©e_time
,

270 &
√w_membî
->
œ°_upd©e_time
, &
nŸime
)){

271 
¥ev_membî
->
œ°_upd©e_time
 = 
√w_membî
->last_update_time;

273 i‡(
	`TimeExpúed
(&
¥ev_membî
->
œ°_πp_£nd_time
,

274 &
√w_membî
->
œ°_πp_£nd_time
, &
nŸime
)){

275 
¥ev_membî
->
œ°_πp_£nd_time
 = 
√w_membî
->last_rtp_send_time;

277 i‡(
	`TimeExpúed
(&
¥ev_membî
->
œ°_πp_£nd_time
,

278 &
√w_membî
->
œ°_πp_£nd_time
, &
nŸime
)){

279 
¥ev_membî
->
œ°_πp_£nd_time
 = 
√w_membî
->last_rtp_send_time;

281 i‡(
	`TimeExpúed
(&
¥ev_membî
->
œ°_π˝_£nd_time
,

282 &
√w_membî
->
œ°_π˝_£nd_time
, &
nŸime
)){

283 
¥ev_membî
->
œ°_π˝_£nd_time
 = 
√w_membî
->last_rtcp_send_time;

285 i‡(
	`TimeExpúed
(&
¥ev_membî
->
œ°_§_ª˚ùt_time
,

286 &
√w_membî
->
œ°_§_ª˚ùt_time
, &
nŸime
)){

287 
¥ev_membî
->
œ°_§_ª˚ùt_time
 = 
√w_membî
->last_sr_receipt_time;

294 
the_c⁄ãxt
->
ID_ªm≠
[the_c⁄ãxt->
num_ªm≠s
] = 
√w_membî
->
unique_id
;

295 
the_c⁄ãxt
->
ID_‹ig_vÆ
[the_c⁄ãxt->
num_ªm≠s
] = 
¥ev_membî
->
unique_id
;

296 
the_c⁄ãxt
->
num_ªm≠s
++;

297 
the_Êag
 &
RTP_FLAG_UNIQUE_ID_REMAP
;

298 
±_to_u£r_d©a
 = 
NULL
;

299 i‡(
¥ev_membî
->
u£r_d©a
 !
NULL
 && 
√w_membî
->user_data != NULL){

300 
±_to_u£r_d©a
 = 
√w_membî
->
u£r_d©a
;

302 i‡(
the_c⁄ãxt
->
RevîtögIDCÆlBack
 !
NULL
){

303 
the_c⁄ãxt
->
	`RevîtögIDCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

304 
¥ev_membî
->
unique_id
,

305 
√w_membî
->
unique_id
,

306 
±_to_u£r_d©a
,

307 
the_Êag
);

310 i‡(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

311 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

312 
√w_membî
->
unique_id
,

313 
the_Êag
,

314 
NULL
);

319 i‡(
the_c⁄ãxt
->
num_ªm≠s
 =
_RTP_MAX_UNIQUE_ID_REMAPS
){

324 
i
=0; i < 
_RTP_MAX_UNIQUE_ID_REMAPS
 / 2; i++){

325 
the_c⁄ãxt
->
ID_ªm≠
[
i
] =

326 
the_c⁄ãxt
->
ID_ªm≠
[
i
 + 
_RTP_MAX_UNIQUE_ID_REMAPS
 / 2];

327 
the_c⁄ãxt
->
ID_‹ig_vÆ
[
i
] =

328 
the_c⁄ãxt
->
ID_‹ig_vÆ
[
i
 + 
_RTP_MAX_UNIQUE_ID_REMAPS
 / 2];

330 
the_c⁄ãxt
->
num_ªm≠s
 = 
_RTP_MAX_UNIQUE_ID_REMAPS
 / 2;

334 i‡(
¥ev_membî
->
u£r_d©a
 =
NULL
){

335 
¥ev_membî
->
u£r_d©a
 = 
√w_membî
->user_data;

336 
√w_membî
->
u£r_d©a
 = 
NULL
;

339 
¥ev_membî
->
s§c
 = 
√w_membî
->ssrc;

344 
¥ev_membî
->
cﬁlidög
 = 
√w_membî
->colliding;

352 
i
 = 0; i< 
_RTP_NUM_SDES_TYPES
; i++){

353 i‡(
√w_membî
->
sdes_öfo
[
i
] !
NULL
){

354 
™noun˚
 = 0;

355 i‡(
¥ev_membî
->
sdes_öfo
[
i
] !
NULL
){

356 i‡(
	`°rcmp
(
¥ev_membî
->
sdes_öfo
[
i
], 
√w_membî
->sdes_info[i]) != 0)

357 
™noun˚
 = 1;

358 
	`‰ì
(
¥ev_membî
->
sdes_öfo
[
i
]);

360 
™noun˚
 = 1;

362 
¥ev_membî
->
sdes_öfo
[
i
] =

363 (*Ë
	`mÆloc
(
	`°æí
(
√w_membî
->
sdes_öfo
[
i
]) + 1);

364 
	`°r˝y
(
¥ev_membî
->
sdes_öfo
[
i
], 
√w_membî
->sdes_info[i]);

366 i‡(
the_c⁄ãxt
->
Ch™gedMembîInfoCÆlBack
 !
NULL
 && 
™noun˚
) {

367 
the_c⁄ãxt
->

368 
	`Ch™gedMembîInfoCÆlBack
(
the_c⁄ãxt
->
c⁄ãxt_num
,

369 
¥ev_membî
->
unique_id
,

370 
i
, 
¥ev_membî
->
sdes_öfo
[i],

371 
RTP_FLAG_MEMBER_INFO_CHANGES
);

375 i‡(
√w_membî
->
πp_time°amp
 > 
¥ev_membî
->rtp_timestamp){

376 
¥ev_membî
->
πp_time°amp
 = 
√w_membî
->rtp_timestamp;

382 i‡(
	`TimeExpúed
((
timevÆ
 *Ë&
¥ev_membî
->
¡p_time°amp
,

383 (
timevÆ
 *Ë&
√w_membî
->
¡p_time°amp
,

384 &
nŸime
)) {

385 
¥ev_membî
->
¡p_time°amp
 = 
√w_membî
->ntp_timestamp;

391 i‡(
√w_membî
->
loˇl_öfo
 !
NULL
) {

392 i‡(
¥ev_membî
->
loˇl_öfo
 =
NULL
) {

393 
¥ev_membî
->
loˇl_öfo
 = 
√w_membî
->local_info;

394 
√w_membî
->
loˇl_öfo
 = 
NULL
;

396 
	`MîgeLoˇlInfo
(
¥ev_membî
->
loˇl_öfo
, 
√w_membî
->local_info);

404 i‡(
¥ev_membî
->
£nd°©us
 !
RTP_SENDER_NOT
 &&

405 
√w_membî
->
£nd°©us
 !
RTP_SENDER_NOT
) {

406 
	`Mîge_RR_Hashes
(
¥ev_membî
, 
√w_membî
);

422 
¥ev_membî
->
⁄_c§c_li°
 = 
FALSE
;

423 
c⁄t
 = 
the_c⁄ãxt
->
c⁄åibli°
;

424 
c⁄t
 !
NULL
) {

425 i‡(
¥ev_membî
->
s§c
 =
c⁄t
->ssrc){

426 
¥ev_membî
->
⁄_c§c_li°
 = 
TRUE
;

429 
c⁄t
 = c⁄t->
√xt
;

435 
ãmp_lök
 = 
¥ev_membî
->
s§c_hash
;

436 
¥ev_membî
->
s§c_hash
 = 
√w_membî
->ssrc_hash;

437 i‡(
¥ev_membî
->
s§c_hash
 =
NULL
){

440 
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
, 
¥ev_membî
);

442 
¥ev_membî
->
s§c_hash
->
my_membî
 =Örev_member;

443 
√w_membî
->
s§c_hash
 = 
ãmp_lök
;

444 i‡(
√w_membî
->
s§c_hash
 =
NULL
){

447 
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
, 
√w_membî
);

449 
√w_membî
->
s§c_hash
->
my_membî
 =Çew_member;

453 i‡(
√w_membî
->
cﬁlides_wôh_¥ev
 !
NULL
){

454 
√w_membî
->
cﬁlides_wôh_¥ev
->
cﬁlides_wôh_√xt
 =

455 
√w_membî
->
cﬁlides_wôh_√xt
;

458 i‡(
√w_membî
->
cﬁlides_wôh_√xt
 !
NULL
){

459 
√w_membî
->
cﬁlides_wôh_√xt
->
cﬁlides_wôh_¥ev
 =

460 
√w_membî
->
cﬁlides_wôh_¥ev
;

463 i‡(
	`GëMembîFromSSRCHash
(
the_c⁄ãxt
, 
√w_membî
->
s§c
) ==

464 
√w_membî
){

472 
	`RemoveMembîFromSSRCHash
(
the_c⁄ãxt
, 
√w_membî
);

473 i‡(
√w_membî
->
cﬁlides_wôh_√xt
 !
NULL
){

474 
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
, 
√w_membî
->
cﬁlides_wôh_√xt
);

485 
	`De°royMembî
(
the_c⁄ãxt
, 
√w_membî
);

488 
	`E¡îCNAMEHashTabÀ
(
the_c⁄ãxt
, 
¥ev_membî
);

490  
¥ev_membî
;

491 
	}
}

	@rtp_collision.h

7 #i‚de‡
_RTP_COLLISION


8 
	#_RTP_COLLISION


	)

9 
	~"πp_≠i_öã∫Æ.h
"

10 
	~"πp_mli°_öã∫Æ.h
"

11 
	~"πp_mli°.h
"

13 
CompuãNewSSRC
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

15 
membî
 *
H™dÀSSRCCﬁlisi⁄
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, membî *
the_membî
,

16 
sockaddr
 *
‰omaddr
,

17 
addr_is_π˝
,

18 *
√w_˙ame
, 
is_c⁄åib
);

20 
membî
 *
MîgeMembîs
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, membî *
¥ev_membî
,

21 
membî
 *
√w_membî
);

	@rtp_encrypt.c

7 
	~"sysdï.h
"

9 
	~"πp_≠i_öã∫Æ.h
"

10 
	~"πp_í¸y±.h
"

12 #ifde‡
UNDEF


13 #unde‡
UNDEF


16 #ifde‡
UNDEF


17 
π≥º‹
 
	$DoEn¸y±i⁄
(
c⁄ãxt
 
cid
, 
iovec
 *
pkç¨t
, 
pkéí
,

18 
IsRTP
){

22 
í¸y±buf
[
_RTP_MAX_PKT_SIZE
];

23 
öt32
 
øndom_hódî
 = 
	`øndom32
(
cid
);

24 
tŸ_Àn
, 
rundñëe
;

25 
i
, 
îrchk
;

26 
u£_sockë
;

27 
addªss_hﬁdî_t
 *
s
, *
¥evs
;

28 
π≥º‹
 
îr
;

31 #ifde‡
_RTP_DEBUG


32 
	`¥ötf
("Encrypting ");

33 i‡(
IsRTP
){

34 
	`¥ötf
("RTP\n");

36 
	`¥ötf
("RTCP\n");

40 
îr
 = 
RTP_OK
;

41 i‡(
C⁄ãxtLi°
[
cid
]->
í¸y±_í¸y±func
 =
NULL
){

42  
	`îr‹debug
(
RTP_CANT_USE_ENCRYPTION
, "DoEncryption",

44 ()
cid
);

45  
RTP_CANT_USE_ENCRYPTION
;

48 
	`mem˝y
(
í¸y±buf
, (*Ë&
øndom_hódî
, (random_header));

49 
tŸ_Àn
 = (
øndom_hódî
);

50 
i
=0; i < 
pkéí
; i++){

51 
	`mem˝y
(&
í¸y±buf
[
tŸ_Àn
], (*Ë
pkç¨t
[
i
].
iov_ba£
,

52 
pkç¨t
[
i
].
iov_Àn
);

53 
tŸ_Àn
 +
pkç¨t
[
i
].
iov_Àn
;

59 
C⁄ãxtLi°
[
cid
]->
	`í¸y±_í¸y±func
(cid, 
í¸y±buf
,

60 (Ë
tŸ_Àn
,

61 
C⁄ãxtLi°
[
cid
]->
key
);

64 
s
 = 
C⁄ãxtLi°
[
cid
]->
£nd_addr_li°
;

65 
rundñëe
 = 
FALSE
;

66 
s
 !
NULL
) {

68 if(
IsRTP
)

69 
u£_sockë
 = 
s
->
πpsockë
;

71 
u£_sockë
 = 
s
->
π˝sockë
;

73 if(
s
->
dñëeÊag
 =
FALSE
) {

74 
îrchk
 = 
	`£nd
(
u£_sockë
, 
í¸y±buf
, 
tŸ_Àn
, 0);

77 i‡(
îrchk
 < 0){

78 
îr
 = 
	`îr‹debug
(
RTP_SOCKET_WRITE_FAILURE
, "DoEncryption",

80 ()
cid
);

82 i‡(
C⁄ãxtLi°
[
cid
]->
SídEº‹CÆlBack
 !
NULL
) {

83 
C⁄ãxtLi°
[
cid
]->
	`SídEº‹CÆlBack
(cid,

84 
	`öë_¡ﬂ
(
s
->
addªss
),

85 
	`¡ohs
(
s
->
p‹t
),

86 
s
->
âl
);

90 
rundñëe
 = 
TRUE
;

93 
s
 = s->
√xt
;

96 
¥evs
 = 
NULL
;

97 if(
rundñëe
 =
TRUE
) {

98 
s
 = 
C⁄ãxtLi°
[
cid
]->
£nd_addr_li°
;

100 
s
 !
NULL
) {

101 if(
s
->
dñëeÊag
 =
TRUE
) {

103 if(
¥evs
 =
NULL
)

104 
C⁄ãxtLi°
[
cid
]->
£nd_addr_li°
 = 
s
->
√xt
;

106 
¥evs
->
√xt
 = 
s
->next;

108 
	`˛o£
(
s
->
πpsockë
);

109 
	`˛o£
(
s
->
π˝sockë
);

110 
	`my_‰ì
(
s
);

112 
¥evs
 = 
s
;

113 
s
 = s->
√xt
;

118  
îr
;

119 
	}
}

122 #ifde‡
UNDEF


125 
π≥º‹
 
	$DoDe¸y±i⁄
(
c⁄ãxt
 
cid
, *
de¸y±_buff
,

126 
de¸y±_bufÊí
){

127 
i
;

129 #ifde‡
_RTP_DEBUG


130 
	`¥ötf
("Decrypting\n");

133 i‡(
C⁄ãxtLi°
[
cid
]->
í¸y±_de¸y±func
 =
NULL
){

134  
	`îr‹debug
(
RTP_CANT_USE_ENCRYPTION
, "DoDecryption",

136 ()
cid
);

139 
C⁄ãxtLi°
[
cid
]->
	`í¸y±_de¸y±func
(cid, 
de¸y±_buff
,

140 (Ë
de¸y±_bufÊí
,

141 
C⁄ãxtLi°
[
cid
]->
key
);

143 
i
=0; i < 
de¸y±_bufÊí
 - 4; i++){

144 
de¸y±_buff
[
i
] = decrypt_buff[i+4];

146  
RTP_OK
;

147 
	}
}

150 
IsVÆidRTPPackë
(
ARG_UNUSED
(
_RTP_CONTEXT
*, 
the_c⁄ãxt
),

151 
πp_∑ckë
 *
the_pkt
){

152 i‡(
RTP_VERSION
(*
the_pkt
->
RTP_hódî
Ë!
_RTP_VERSION
){

153  
FALSE
;

166  
	gTRUE
;

169 
IsVÆidRTCPPackë
(
ARG_UNUSED
(
_RTP_CONTEXT
*, 
the_c⁄ãxt
), **
pkços
,

170 
num_∑πs
, 
tŸÀn
){

171 
	gi
;

172 
	gcur_Àn
 = 0;

173 
π˝_∑ckë
 
	gthe_pkt
;

174 
	gi
=0; i< 
	gnum_∑πs
; i++){

175 
	gthe_pkt
 = 
RTPGëRTCPPackë
(
pkços
[
i
]);

176 i‡(
RTCP_VERSION
(*
the_pkt
.
comm⁄
Ë!
_RTP_VERSION
){

177 #ifde‡
_RTP_DEBUG


178 
¥ötf
("RTCP wrong version: %d inÖkt %d\n",

179 
RTCP_VERSION
(*
the_pkt
.
comm⁄
), 
i
);

181  
	gFALSE
;

185 i‡(
	gi
 == 0){

191 i‡(
RTCP_P
(*
the_pkt
.
comm⁄
) != 0){

192 #ifde‡
_RTP_DEBUG


193 
¥ötf
("RR or SRÖacketÖadded\n");

195  
	gFALSE
;

199 
	gcur_Àn
 +
the_pkt
.
comm⁄
->
Àn
 * 4 + 4;

201 i‡(
	gcur_Àn
 !
tŸÀn
){

202 #ifde‡
_RTP_DEBUG


203 
¥ötf
("Packet has wrongÜength\n");

205  
	gFALSE
;

207  
	gTRUE
;

	@rtp_encrypt.h

7 
	~"πp_≠i.h
"

8 
	~"πp_≠i_öã∫Æ.h
"

10 #ifde‡
WE_DO_NETWORK


13 
π≥º‹
 
DoEn¸y±i⁄
(
c⁄ãxt
 
cid
, 
iovec
 *
pkç¨t
, 
pkéí
,

14 
IsRTP
);

24 
π≥º‹
 
DoDe¸y±i⁄
(
c⁄ãxt
 
cid
, *
de¸y±_buff
,

25 
de¸y±_bufÊí
);

27 
IsVÆidRTPPackë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
πp_∑ckë
 *
the_pkt
);

29 
IsVÆidRTCPPackë
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, **
pkços
,

30 
num_∑πs
, 
tŸÀn
);

	@rtp_highlevel.c

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

9 
	~<°dio.h
>

12 #ifde‡
__unix


13 
	~<uni°d.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<sys/sockë.h
>

16 
	~<sys/∑øm.h
>

17 
	~<√töë/ö.h
>

18 
	~<¨∑/öë.h
>

19 
	~<sys/uio.h
>

20 
	~<√tdb.h
>

21 
	~<sys/ut¢ame.h
>

22 
	~<sys/time.h
>

25 #ifde‡
WIN32


26 
	~<time.h
>

27 
	~<wösock2.h
>

31 
	~"πp_≠i.h
"

32 
	~"πp_lowÀvñ.h
"

33 
	~"πp_highÀvñ.h
"

34 
	~"πp_highÀvñ_öã∫Æ.h
"

35 
	~"sysdï.h
"

37 
	~"globÆ.h
"

38 
	~"md5.h
"

40 
IsMu…iˇ°
(
ö_addr
 
addr
);

41 
hl_ch™ged_sockaddr_ˇŒback
(
c⁄ãxt
 
cid
,

42 
≥rs⁄
 
p
,

43 
sockaddr
 *
ß
,

44 
is_π˝
);

50 
π≥º‹
 
	$RTPCª©e
(
c⁄ãxt
 *
the_c⁄ãxt
)

52 
π≥º‹
 
îr
;

54 
hl_c⁄ãxt
 *
uc
;

56 
uc
 = (
hl_c⁄ãxt
 *Ë
	`mÆloc
((hl_context));

57 i‡(
uc
 =
NULL
)

58  
	`îr‹debug
(
RTP_CANT_ALLOC_MEM
, "RTPCreate",

61 
îr
 = 
	`RTPLowLevñCª©e
(
the_c⁄ãxt
);

62 i‡(
îr
 !
RTP_OK
)

63 
baûout
;

65 
îr
 = 
	`RTPSessi⁄SëHighLevñInfo
(*
the_c⁄ãxt
, (*)
uc
);

66 i‡(
îr
 !
RTP_OK
)

67 
baûout
;

69 
uc
->
c⁄√˘i⁄_›íed
 = 
FALSE
;

71 
uc
->
£nd_addr_li°
 = 
NULL
;

72 
uc
->
ªcv_addr_li°
 = 
NULL
;

74 
uc
->
πp_sour˚addr
.
sö_Ámûy
 = 
AF_UNSPEC
;

75 
uc
->
π˝_sour˚addr
.
sö_Ámûy
 = 
AF_UNSPEC
;

77 
uc
->
u£_í¸y±i⁄
 = 
_RTP_DEFAULT_ENCRYPTION
;

78 
uc
->
key
 = 
NULL
;

80 
uc
->
í¸y±_öôfunc
 = 
NULL
;

81 
uc
->
í¸y±_í¸y±func
 = 
NULL
;

82 
uc
->
í¸y±_de¸y±func
 = 
NULL
;

84 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

85 
uc
->
SídEº‹CÆlBack
 = 
NULL
;

86 
uc
->
Ch™gedMembîAddªssCÆlBack
 = 
NULL
;

88 
îr
 = 
	`RTPSëCh™gedMembîSockaddrCÆlBack
(*
the_c⁄ãxt
,

89 &
hl_ch™ged_sockaddr_ˇŒback
);

90 i‡(
îr
 !
RTP_OK
)

91 
baûout
;

93  
RTP_OK
;

95 
baûout
:

96 
	`‰ì
(
uc
);

97  
îr
;

98 
	}
}

101 
π≥º‹
 
	$RTPDe°roy
(
c⁄ãxt
 
cid
)

103 
π≥º‹
 
îr
;

104 
addªss_hﬁdî_t
 *
s
, *
t
;

106 
hl_c⁄ãxt
 *
uc
;

108 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

109 i‡(
îr
 !
RTP_OK
)

111  
îr
;

115 i‡(
uc
->
c⁄√˘i⁄_›íed
){

116 
îr
 = 
	`RTPClo£C⁄√˘i⁄
(
cid
, 
NULL
);

117 i‡(
îr
 !
RTP_OK
){

118  
îr
;

123 i‡(
uc
->
ªcv_addr_li°
 !
NULL
) {

124 
	`‰ì
(
uc
->
ªcv_addr_li°
);

128 
s
 = 
uc
->
£nd_addr_li°
;

129 
s
 !
NULL
) {

130 
t
 = 
s
->
√xt
;

131 
	`‰ì
(
s
);

132 
s
 = 
t
;

135 
	`‰ì
(
uc
);

136 
îr
 = 
	`RTPLowLevñDe°roy
(
cid
);

137  
îr
;

138 
	}
}

153 
π≥º‹
 
	$RTPSessi⁄AddSídAddr
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 
p‹t
, 
u_öt8
 
âl
){

154 
addªss_hﬁdî_t
 *
hﬁdî
;

155 
sockaddr_ö
 
ßddr
;

156 
Àn
, 
nRë
;

157 
ö_addr
 
å™¶©i⁄
;

158 
hl_c⁄ãxt
 *
uc
;

159 
π≥º‹
 
îr
;

161 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

162 i‡(
îr
 !
RTP_OK
)

164  
îr
;

166 i‡(
p‹t
 == 0) {

167  
	`îr‹debug
(
RTP_BAD_PORT
, "RTPSessionAddSendAddr",

172 if((
p‹t
 & 1) == 1)

173 
p‹t
--;

175 if((
hﬁdî
 = (
addªss_hﬁdî_t
 *Ë
	`mÆloc
((address_holder_t))) == 0) {

176  
	`îr‹debug
(
RTP_CANT_ALLOC_MEM
, "RTPSessionAddSendAddr",

182 
å™¶©i⁄
 = 
	`ho°2ù
(
addr
);

183 if(
å™¶©i⁄
.
s_addr
 =(
u_öt32
) -1) {

184 
	`‰ì
(
hﬁdî
);

185  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPSessionAddSendAddr",

191 
hﬁdî
->
addªss
 = 
å™¶©i⁄
;

192 
hﬁdî
->
p‹t
 = 
	`ht⁄s
(port);

193 
hﬁdî
->
dñëeÊag
 = 
FALSE
;

194 
hﬁdî
->
âl
 = 0;

195 if(
	`IsMu…iˇ°
(
å™¶©i⁄
)Ë
hﬁdî
->
âl
 =Åtl;

200 
hﬁdî
->
πpsockë
 = 
	`_sys_¸óã_sockë
(
SOCK_DGRAM
);

202 i‡(
hﬁdî
->
πpsockë
 =
_SYS_INVALID_SOCKET
){

203 
	`‰ì
(
hﬁdî
);

204  
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPSessionAddSendAddr",

205 "couldn'àgë RTP sockë f‹ c⁄ãxà%d", ()
cid
);

208 
hﬁdî
->
π˝sockë
 = 
	`_sys_¸óã_sockë
(
SOCK_DGRAM
);

209 i‡(
hﬁdî
->
π˝sockë
 =
_SYS_INVALID_SOCKET
){

210 
	`_sys_˛o£_sockë
(
hﬁdî
->
πpsockë
);

211 
	`‰ì
(
hﬁdî
);

212  
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPSessionAddSendAddr",

213 "couldn'àgë RTCP sockë f‹ c⁄ãxà%d", ()
cid
);

218 
	`mem£t
(&
ßddr
, 0, (saddr));

219 
ßddr
.
sö_Ámûy
 = 
AF_INET
;

220 
ßddr
.
sö_addr
 = 
hﬁdî
->
addªss
;

221 
ßddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

223 if(
	`_sys_c⁄√˘_sockë
(
hﬁdî
->
πpsockë
, &
ßddr
Ë=
_SYS_SOCKET_ERROR
) {

224 
îr
 = 
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPSessionAddSendAddr",

225 "couldn'àc⁄√˘ RTP sockë f‹ c⁄ãxà%d", ()
cid
);

226 
baûout
;

230 
ßddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
+1);

232 if(
	`_sys_c⁄√˘_sockë
(
hﬁdî
->
π˝sockë
, &
ßddr
Ë=
_SYS_SOCKET_ERROR
) {

233 
îr
 = 
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPSessionAddSendAddr",

234 "couldn'àc⁄√˘ RTCP sockë f‹ c⁄ãxà%d", ()
cid
);

235 
baûout
;

238 if(
	`IsMu…iˇ°
(
hﬁdî
->
addªss
)) {

240 
nRë
 = 
	`_sys_£t_âl
(
hﬁdî
->
πpsockë
, 
âl
);

241 if(
nRë
 =
_SYS_SOCKET_ERROR
) {

242 
îr
 = 
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPSessionAddSendAddr",

243 "couldn'à£àRTP TTL f‹ c⁄ãxà%d", ()
cid
);

244 
baûout
;

246 
nRë
 = 
	`_sys_£t_âl
(
hﬁdî
->
π˝sockë
, 
âl
);

248 if(
nRë
 =
_SYS_SOCKET_ERROR
) {

249 
îr
 = 
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPSessionAddSendAddr",

250 "couldn'à£àRTCP TTL f‹ c⁄ãxà%d", ()
cid
);

251 
baûout
;

259 
Àn
 = (
sockaddr_ö
);

261 if(
	`_sys_gë_sockë_«me
(
hﬁdî
->
πpsockë
, &
uc
->
πp_sour˚addr
Ë=
_SYS_SOCKET_ERROR
) {

262 
îr
 = 
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPSessionAddSendAddr",

263 "Couldn'àgë RTP sour˚áddªs†f‹ c⁄ãxà%d", ()
cid
);

264 
baûout
;

266 if(
	`_sys_gë_sockë_«me
(
hﬁdî
->
π˝sockë
, &
uc
->
π˝_sour˚addr
Ë=
_SYS_SOCKET_ERROR
) {

267 
îr
 = 
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPSessionAddSendAddr",

268 "Couldn'àgë RTCP sour˚áddªs†f‹ c⁄ãxà%d", ()
cid
);

269 
baûout
;

275 
hﬁdî
->
√xt
 = 
uc
->
£nd_addr_li°
;

276 
uc
->
£nd_addr_li°
 = 
hﬁdî
;

278  
RTP_OK
;

280 
baûout
:

282 
	`_sys_˛o£_sockë
(
hﬁdî
->
πpsockë
);

283 
	`_sys_˛o£_sockë
(
hﬁdî
->
π˝sockë
);

284 
	`‰ì
(
hﬁdî
);

286  
îr
;

287 
	}
}

295 
π≥º‹
 
	$RTPSessi⁄RemoveSídAddr
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 
p‹t
, 
u_öt8
 
âl
) {

296 
addªss_hﬁdî_t
 *
hﬁdî
;

297 
ö_addr
 
å™¶©i⁄
;

298 
hl_c⁄ãxt
 *
uc
;

299 
π≥º‹
 
îr
;

301 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

302 i‡(
îr
 !
RTP_OK
)

304  
îr
;

306 
hﬁdî
 = 
uc
->
£nd_addr_li°
;

310 if((
p‹t
 & 1) == 1)

311 
p‹t
--;

313 
å™¶©i⁄
 = 
	`ho°2ù
(
addr
);

314 if(
å™¶©i⁄
.
s_addr
 =(
u_öt32
) -1) {

315  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPSessionRemoveSendAddr",

323 if(!
	`IsMu…iˇ°
(
å™¶©i⁄
)Ë
âl
 = 0;

325 
hﬁdî
 !
NULL
) {

326 if(!(
hﬁdî
->
dñëeÊag
) &&

327 (
hﬁdî
->
addªss
.
s_addr
 =
å™¶©i⁄
.s_addr) &&

328 (
hﬁdî
->
p‹t
 =
	`ht⁄s
(port)) &&

329 (
hﬁdî
->
âl
 ==Åtl))

332 
hﬁdî
 = hﬁdî->
√xt
;

338 if(
hﬁdî
 =
NULL
) {

339  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPSessionRemoveSendAddr",

342 
hﬁdî
->
dñëeÊag
 = 
TRUE
;

343  
RTP_OK
;

345 
	}
}

367 
π≥º‹
 
	$RTPSessi⁄SëRe˚iveAddr
(
c⁄ãxt
 
cid
, *
addªss
, 
u_öt16
 
p‹t
){

368 
addªss_hﬁdî_t
 *
hﬁdî
;

369 
ö_addr
 
å™¶©i⁄
;

370 
hl_c⁄ãxt
 *
uc
;

371 
π≥º‹
 
îr
;

373 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

374 i‡(
îr
 !
RTP_OK
)

376  
îr
;

378 i‡(
uc
->
c⁄√˘i⁄_›íed
){

379  
	`îr‹debug
(
RTP_FIXED_WHEN_OPEN
, "RTPSessionSetLocalAddr",

385 if((
p‹t
 & 1) == 1)

386 
p‹t
--;

388 
å™¶©i⁄
 = 
	`ho°2ù
(
addªss
);

389 if(
å™¶©i⁄
.
s_addr
 =(
u_öt32
) -1) {

390  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPSessionSetReceiveAddr",

394 if(
uc
->
ªcv_addr_li°
 =
NULL
) {

397 if((
hﬁdî
 = (
addªss_hﬁdî_t
 *Ë
	`mÆloc
((address_holder_t))) == 0) {

398  
	`îr‹debug
(
RTP_CANT_ALLOC_MEM
, "RTPSessionAddSendAddr",

402 
hﬁdî
->
addªss
 = 
å™¶©i⁄
;

403 i‡(
addªss
 =
NULL
Ë
hﬁdî
->addªss.
s_addr
 = 0;

404 
hﬁdî
->
p‹t
 = 
	`ht⁄s
(port);

405 
hﬁdî
->
âl
 = 0;

407 
uc
->
ªcv_addr_li°
 = 
hﬁdî
;

411 
hﬁdî
 = 
uc
->
ªcv_addr_li°
;

412 
hﬁdî
->
addªss
 = 
å™¶©i⁄
;

413 if(
addªss
 =
NULL
Ë
hﬁdî
->addªss.
s_addr
 = 0;

414 
hﬁdî
->
p‹t
 = 
	`ht⁄s
(port);

415 
hﬁdî
->
âl
 = 0;

419  
RTP_OK
;

420 
	}
}

426 
π≥º‹
 
	$RTPSessi⁄GëRe˚iveAddr
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 *
p‹t
){

427 
hl_c⁄ãxt
 *
uc
;

428 
π≥º‹
 
îr
;

430 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

431 i‡(
îr
 !
RTP_OK
)

433  
îr
;

435 if(
uc
->
ªcv_addr_li°
 =
NULL
) {

436  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPSessionGetReceiveAddr",

440 
	`°r˝y
(
addr
, 
	`öë_¡ﬂ
(
uc
->
ªcv_addr_li°
->
addªss
));

441 *
p‹t
 = 
	`¡ohs
(
uc
->
ªcv_addr_li°
->port);

443  
RTP_OK
;

444 
	}
}

447 
π≥º‹
 
	$RTPO≥nC⁄√˘i⁄
(
c⁄ãxt
 
cid
){

448 
sockaddr_ö
 
ßddr
;

449 
dy«mic_p‹ts
,
böd_cou¡
,
¥obÀm
, 
nRë
;

450 
sockty≥
 
πpskt
, 
π˝skt
;

451 
hl_c⁄ãxt
 *
uc
;

452 
π≥º‹
 
îr
;

454 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

455 i‡(
îr
 !
RTP_OK
)

457  
îr
;

459 i‡(
uc
->
c⁄√˘i⁄_›íed
){

460 
	`RTPClo£C⁄√˘i⁄
(
cid
,
NULL
);

464 if(
uc
->
ªcv_addr_li°
 =
NULL
) {

465  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPOpenConnection",

471 if(
uc
->
ªcv_addr_li°
->
p‹t
 == 0)

472 
dy«mic_p‹ts
 = 1;

474 
dy«mic_p‹ts
 = 0;

480 
böd_cou¡
 = 0;

481 
böd_cou¡
 < 
_BIND_COUNTER
) {

482 
böd_cou¡
++;

486 if(
dy«mic_p‹ts
 == 1)

487 
uc
->
ªcv_addr_li°
->
p‹t
 =

488 
	`ht⁄s
(
_UDP_PORT_BASE
 + 2 * ((
u_öt16
Ë(
	`dønd48
(Ë* 
_UDP_PORT_RANGE
)));

492 
uc
->
ªcv_addr_li°
->
πpsockë
 = 
	`_sys_¸óã_sockë
(
SOCK_DGRAM
);

493 
πpskt
 = 
uc
->
ªcv_addr_li°
->
πpsockë
;

494 i‡(
uc
->
ªcv_addr_li°
->
πpsockë
 =
_SYS_INVALID_SOCKET
){

495  
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPOpenConnection",

496 "couldn'àgë RTP sockë f‹ c⁄ãxà%d", ()
cid
);

498 
uc
->
ªcv_addr_li°
->
π˝sockë
 = 
	`_sys_¸óã_sockë
(
SOCK_DGRAM
);

499 
π˝skt
 = 
uc
->
ªcv_addr_li°
->
π˝sockë
;

500 i‡(
uc
->
ªcv_addr_li°
->
π˝sockë
 =
_SYS_INVALID_SOCKET
){

501 
	`_sys_˛o£_sockë
(
πpskt
);

502  
	`îr‹debug
(
RTP_CANT_GET_SOCKET
, "RTPOpenConnection",

503 "couldn'àgë RTCP sockë f‹ c⁄ãxà%d", ()
cid
);

507 if(
	`_sys_£t_ªu£addr
(
πpskt
Ë=
_SYS_SOCKET_ERROR
) {

508 
	`_sys_˛o£_sockë
 (
πpskt
);

509 
	`_sys_˛o£_sockë
 (
π˝skt
);

510  
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPOpenConnection",

511 "couldn'àªu£ RTPáddªs†f‹ c⁄ãxà%d", ()
cid
);

513 if(
	`_sys_£t_ªu£addr
(
π˝skt
Ë=
_SYS_SOCKET_ERROR
) {

514 
	`_sys_˛o£_sockë
(
πpskt
);

515 
	`_sys_˛o£_sockë
(
π˝skt
);

516  
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPOpenConnection",

517 "couldn'àªu£ RTCPáddªs†f‹ c⁄ãxà%d", ()
cid
);

520 if(
	`_sys_£t_ªu£p‹t
(
πpskt
Ë=
_SYS_SOCKET_ERROR
) {

521 
	`_sys_˛o£_sockë
(
πpskt
);

522 
	`_sys_˛o£_sockë
(
π˝skt
);

523  
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPOpenConnection",

524 "couldn'àªu£ RTPÖ‹àf‹ c⁄ãxà%d", ()
cid
);

526 i‡(
	`_sys_£t_ªu£p‹t
(
π˝skt
Ë=
_SYS_SOCKET_ERROR
) {

527 
	`_sys_˛o£_sockë
(
πpskt
);

528 
	`_sys_˛o£_sockë
(
π˝skt
);

529  
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPOpenConnection",

530 "couldn'àªu£ RTCPÖ‹àf‹ c⁄ãxà%d", ()
cid
);

535 
	`mem£t
(&
ßddr
, 0, (saddr));

536 
ßddr
.
sö_Ámûy
 = 
AF_INET
;

537 
ßddr
.
sö_addr
 = 
uc
->
ªcv_addr_li°
->
addªss
;

538 
ßddr
.
sö_p‹t
 = 
uc
->
ªcv_addr_li°
->
p‹t
;

542 if((
uc
->
ªcv_addr_li°
->
addªss
.
s_addr
 == 0) ||

543 
	`IsMu…iˇ°
(
ßddr
.
sö_addr
))

544 
ßddr
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

547 
¥obÀm
 = 0;

548 if((
¥obÀm
 = 
	`_sys_böd
(
πpskt
, &
ßddr
)Ë=
_SYS_SOCKET_ADDRNOTAVAIL
) {

549 
ßddr
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

550 
¥obÀm
 = 
	`_sys_böd
(
πpskt
, &
ßddr
);

555 if((
¥obÀm
 =
_SYS_SOCKET_ADDRINUSE
) &&

556 (
dy«mic_p‹ts
 == 1)) {

557 
	`_sys_˛o£_sockë
(
πpskt
);

558 
	`_sys_˛o£_sockë
(
π˝skt
);

560 } if(
¥obÀm
 != 0) {

561  
	`îr‹debug
(
RTP_CANT_BIND_SOCKET
, "RTPOpenConnection",

562 "couldn'àböd RTPáddªs†f‹ c⁄ãxà%d", ()
cid
);

567 
ßddr
.
sö_p‹t
 = 
	`ht⁄s
(
	`¡ohs
(
uc
->
ªcv_addr_li°
->
p‹t
) + 1);

571 
¥obÀm
 = 0;

572 if((
¥obÀm
 = 
	`_sys_böd
(
π˝skt
, &
ßddr
)Ë=
_SYS_SOCKET_ADDRNOTAVAIL
) {

577 
ßddr
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

578 
¥obÀm
 = 
	`_sys_böd
(
πpskt
, &
ßddr
);

584 if((
¥obÀm
 =
_SYS_SOCKET_ADDRINUSE
) &&

585 (
dy«mic_p‹ts
 == 1)) {

586 
	`_sys_˛o£_sockë
(
πpskt
);

587 
	`_sys_˛o£_sockë
(
π˝skt
);

589 } if(
¥obÀm
 != 0) {

590  
	`îr‹debug
(
RTP_CANT_BIND_SOCKET
, "RTPOpenConnection",

591 "couldn'àböd RTCPáddªs†f‹ c⁄ãxà%d", ()
cid
);

601 if(
böd_cou¡
 =
_BIND_COUNTER
) {

602  
	`îr‹debug
(
RTP_CANT_BIND_SOCKET
, "RTPOpenConnection",

603 "couldn'àböd dy«mi¯addªs†f‹ c⁄ãxà%d", ()
cid
);

609 i‡(
	`IsMu…iˇ°
(
uc
->
ªcv_addr_li°
->
addªss
)){

612 
	`mem£t
(&
ßddr
, 0, (saddr));

613 
ßddr
.
sö_Ámûy
 = 
AF_INET
;

614 
ßddr
.
sö_addr
 = 
uc
->
ªcv_addr_li°
->
addªss
;

615 
ßddr
.
sö_p‹t
 = 
uc
->
ªcv_addr_li°
->
p‹t
;

616 
nRë
 = 
	`_sys_joö_mˇ°_group
(
πpskt
, &
ßddr
);

617 if(
nRë
 =
_SYS_SOCKET_ERROR
) {

618 
	`_sys_˛o£_sockë
(
πpskt
);

619 
	`_sys_˛o£_sockë
(
π˝skt
);

620  
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPOpenConnection",

621 "couldn'àjoö RTP mu…iˇ° grou∞f‹ c⁄ãxà%d", ()
cid
);

623 
nRë
 = 
	`_sys_joö_mˇ°_group
(
π˝skt
, &
ßddr
);

624 if(
nRë
 =
_SYS_SOCKET_ERROR
) {

625 
	`_sys_˛o£_sockë
(
πpskt
);

626 
	`_sys_˛o£_sockë
(
π˝skt
);

627  
	`îr‹debug
(
RTP_CANT_SET_SOCKOPT
, "RTPOpenConnection",

628 "couldn'àjoö RTCP mu…iˇ° grou∞f‹ c⁄ãxà%d", ()
cid
);

634 
îr
 = 
	`RTPSèπSessi⁄
(
cid
);

635 i‡(
îr
 !
RTP_OK
)

636  
îr
;

638 
uc
->
c⁄√˘i⁄_›íed
 = 
TRUE
;

640  
RTP_OK
;

641 
	}
}

644 
π≥º‹
 
	$RTPClo£C⁄√˘i⁄
(
c⁄ãxt
 
cid
, *
ªas⁄
){

645 
addªss_hﬁdî_t
 *
s
;

646 
hl_c⁄ãxt
 *
uc
;

647 
π≥º‹
 
îr
;

649 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

650 i‡(
îr
 !
RTP_OK
)

652  
îr
;

654 i‡(!
uc
->
c⁄√˘i⁄_›íed
){

655  
RTP_OK
;

658 
îr
 = 
	`RTPSt›Sessi⁄
(
cid
, 
ªas⁄
);

659 i‡(
îr
 !
RTP_OK
)

660  
îr
;

663 i‡(
	`_sys_˛o£_sockë
(
uc
->
ªcv_addr_li°
->
πpsockë
) < 0){

664  
	`îr‹debug
(
RTP_CANT_CLOSE_SESSION
, "RTPCloseConnection",

665 "c⁄ãxà%d couldn'à˛o£ RTP sessi⁄", ()
cid
);

667 i‡(
	`_sys_˛o£_sockë
(
uc
->
ªcv_addr_li°
->
π˝sockë
) < 0){

668  
	`îr‹debug
(
RTP_CANT_CLOSE_SESSION
, "RTPCloseConnection",

669 "c⁄ãxà%d couldn'à˛o£ RTCP sessi⁄", ()
cid
);

672 
s
 = 
uc
->
£nd_addr_li°
;

673 
s
 !
NULL
) {

674 i‡(
	`_sys_˛o£_sockë
(
s
->
πpsockë
) < 0){

675  
	`îr‹debug
(
RTP_CANT_CLOSE_SESSION
, "RTPCloseConnection",

676 "c⁄ãxà%d couldn'à˛o£ RTP sessi⁄", ()
cid
);

678 i‡(
	`_sys_˛o£_sockë
(
s
->
π˝sockë
) < 0){

679  
	`îr‹debug
(
RTP_CANT_CLOSE_SESSION
, "RTPCloseConnection",

680 "c⁄ãxà%d couldn'à˛o£ RTCP sessi⁄", ()
cid
);

682 
s
 = s->
√xt
;

685 
uc
->
c⁄√˘i⁄_›íed
 = 
FALSE
;

686 (
îr
);

687 
	}
}

689 
π≥º‹
 
	$RTPSessi⁄GëRTPSockë
(
c⁄ãxt
 
cid
, 
sockty≥
 *
vÆue
){

690 
π≥º‹
 
îr
;

691 
hl_c⁄ãxt
 *
uc
;

693 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

694 i‡(
îr
 !
RTP_OK
)

696  
îr
;

698 i‡(!
uc
->
c⁄√˘i⁄_›íed
){

699  
	`îr‹debug
(
RTP_NOSOCKET
, "RTPSessionGetRTPSocket",

700 "c⁄ãxà%d, c⁄√˘i⁄ÇŸ yë o≥√d.", ()
cid
);

702 *
vÆue
 = 
uc
->
ªcv_addr_li°
->
πpsockë
;

703  
RTP_OK
;

704 
	}
}

706 
π≥º‹
 
	$RTPSessi⁄GëRTCPSockë
(
c⁄ãxt
 
cid
, 
sockty≥
 *
vÆue
){

707 
π≥º‹
 
îr
;

708 
hl_c⁄ãxt
 *
uc
;

710 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

711 i‡(
îr
 !
RTP_OK
)

713  
îr
;

715 i‡(!
uc
->
c⁄√˘i⁄_›íed
){

716  
	`îr‹debug
(
RTP_NOSOCKET
, "RTPSessionGetRTCPSocket",

717 "c⁄ãxà%d, c⁄√˘i⁄ÇŸ yë o≥√d.", ()
cid
);

719 *
vÆue
 = 
uc
->
ªcv_addr_li°
->
π˝sockë
;

720  
RTP_OK
;

721 
	}
}

725 
π≥º‹
 
	$RTPSíd
(
c⁄ãxt
 
cid
, 
öt32
 
tsöc
, 
öt8
 
m¨kî
,

726 
öt16
 
±i
, 
öt8
 *
∑ylﬂd
, 
Àn
){

727 
iovec
 
∑ylﬂd_vec
[1];

728 
∑ylﬂd_vec
[0].
iov_ba£
 = 
∑ylﬂd
;

729 
∑ylﬂd_vec
[0].
iov_Àn
 = 
Àn
;

731  
	`RTPSídVe˘‹
(
cid
, 
tsöc
, 
m¨kî
, 
±i
, 
∑ylﬂd_vec
, 1);

732 
	}
}

736 
π≥º‹
 
	$RTPSídVe˘‹
(
c⁄ãxt
 
cid
, 
öt32
 
tsöc
, 
öt8
 
m¨kî
,

737 
öt16
 
±i
, 
iovec
 *
∑ylﬂd
, 
vec_cou¡
){

742 
iovec
 *
pkç¨t
;

743 
pkéí
;

744 
buÊí
;

745 
msghdr
 
the_mesßge
;

746 
îrchk
, 
i
, 
d©a_Àn
, 
rundñëe
;

747 
addªss_hﬁdî_t
 *
s
, *
¥evs
;

748 
π≥º‹
 
îr
;

749 
hl_c⁄ãxt
 *
uc
;

751 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

752 i‡(
îr
 !
RTP_OK
)

754  
îr
;

756 i‡(
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
){

757  
	`îr‹debug
(
RTP_CANT_CALL_FUNCTION
, "RTPSendVector",

759 ()
cid
);

762 if(
uc
->
£nd_addr_li°
 =
NULL
) {

763  
	`îr‹debug
(
RTP_BAD_ADDR
, "RTPSendVector",

765 ()
cid
);

768 
pkéí
 = 
vec_cou¡
 + 2;

769 
pkç¨t
 = (
iovec
 *Ë
	`ˇŒoc
((iovec), 
pkéí
);

770 i‡(
pkç¨t
 =
NULL
) {

771  
	`îr‹debug
(
RTP_CANT_ALLOC_MEM
, "RTPSendVector",

773 ()
cid
);

776 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
TRUE
;

778 
d©a_Àn
 = 0;

780 
i
 = 0; i < 
vec_cou¡
; i++) {

781 
pkç¨t
[
i
+1].
iov_ba£
 = 
∑ylﬂd
[i].iov_base;

782 
pkç¨t
[
i
+1].
iov_Àn
 = 
∑ylﬂd
[i].iov_len;

783 
d©a_Àn
 +
∑ylﬂd
[
i
].
iov_Àn
;

788 
buÊí
 = 
_RTP_MAX_PKT_SIZE
;

790 
îr
 = 
	`RTPBuûdRTPHódî
(
cid
, 
tsöc
, 
m¨kî
, 
±i
, 
FALSE
 ,

791 
d©a_Àn
, 
uc
->
∑ckë_buf„r
, &
buÊí
);

792 i‡(
îr
)

793 
˛ónup
;

795 
pkç¨t
[0].
iov_ba£
 = 
uc
->
∑ckë_buf„r
;

796 
pkç¨t
[0].
iov_Àn
 = 
buÊí
;

800 
pkç¨t
[
pkéí
-1].
iov_ba£
 = 
NULL
;

801 
pkç¨t
[
pkéí
-1].
iov_Àn
 = 0;

806 
	`mem£t
((*Ë&
the_mesßge
, 0, (the_message));

807 
the_mesßge
.
msg_«me
 = (
ˇddr_t
Ë
NULL
;

808 
the_mesßge
.
msg_«mñí
 = 0;

809 
the_mesßge
.
msg_iov
 = 
pkç¨t
;

810 
the_mesßge
.
msg_iovÀn
 = 
pkéí
;

812 
s
 = 
uc
->
£nd_addr_li°
;

814 
îr
 = 
RTP_OK
;

815 
rundñëe
 = 
FALSE
;

816 
s
 !
NULL
) {

817 if(
s
->
dñëeÊag
 =
FALSE
) {

818 
îrchk
 = 
	`_sys_£ndmsg
(
s
->
πpsockë
, (
msghdr
*)

819 &
the_mesßge
, 0);

820 i‡(
îrchk
 < 0){

821 
îr
 = 
	`îr‹debug
(
RTP_SOCKET_WRITE_FAILURE
, "RTPSendVector",

823 ()
cid
);

824 i‡(
uc
->
SídEº‹CÆlBack
 !
NULL
) {

825 
uc
->
	`SídEº‹CÆlBack
(
cid
,

826 
	`öë_¡ﬂ
(
s
->
addªss
),

827 
	`¡ohs
(
s
->
p‹t
),

828 
s
->
âl
);

830 i‡(
s
->
dñëeÊag
 =
TRUE
) {

831 
rundñëe
 = 
TRUE
;

835 
rundñëe
 = 
TRUE
;

837 
s
 = s->
√xt
;

843 
¥evs
 = 
NULL
;

844 if(
rundñëe
 =
TRUE
) {

845 
s
 = 
uc
->
£nd_addr_li°
;

847 
s
 !
NULL
) {

848 if(
s
->
dñëeÊag
 =
TRUE
) {

850 if(
¥evs
 =
NULL
)

851 
uc
->
£nd_addr_li°
 = 
s
->
√xt
;

853 
¥evs
->
√xt
 = 
s
->next;

855 
	`_sys_˛o£_sockë
(
s
->
πpsockë
);

856 
	`_sys_˛o£_sockë
(
s
->
π˝sockë
);

857 
	`‰ì
(
s
);

859 
¥evs
 = 
s
;

860 
s
 = s->
√xt
;

864 
˛ónup
:

865 
	`‰ì
(
pkç¨t
);

867 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

868 (
îr
);

869 
	}
}

872 
π≥º‹
 
	$RTPRe˚ive
(
c⁄ãxt
 
cid
, 
sockty≥
 
sockë
,

873 *
πp_pkt_°ªam
, *
Àn
)

875 
ªad_Àn
, 
tŸ_Àn
;

876 
sockaddr
 
‰om_addr
;

877 
‰omaddæí
;

878 
sockaddr_ö
 *
check_addr
, *
‰om_addr_ö
;

879 
isRTCP
, 
possibÀ_lo›back
;

881 
π≥º‹
 
îr
;

882 
hl_c⁄ãxt
 *
uc
;

884 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

885 i‡(
îr
 !
RTP_OK
)

887  
îr
;

889 i‡(
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
){

890  
	`îr‹debug
(
RTP_CANT_CALL_FUNCTION
, "RTPReceive",

892 ()
cid
);

894 i‡(
sockë
 !
uc
->
ªcv_addr_li°
->
πpsockë
 &&

895 
sockë
 !
uc
->
ªcv_addr_li°
->
π˝sockë
){

896  
	`îr‹debug
(
RTP_SOCKET_MISMATCH
, "RTPReceive",

897 "c⁄ãxà%d, sockëÖrovidedÇŸ RTP sockëÇ‹ RTCP sockë", ()
cid
);

899 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
TRUE
;

901 
‰omaddæí
 = (
‰om_addr
);

902 
ªad_Àn
 = 
	`_sys_ªcv‰om
(
sockë
, 
πp_pkt_°ªam
, *
Àn
, 0, &
‰om_addr
, &
‰omaddæí
);

903 i‡(
ªad_Àn
 == -1) {

904  
	`îr‹debug
(
RTP_SOCKET_READ_FAILURE
, "RTPReceive",

905 "CouldÇŸÑód from sockë %d", 
sockë
);

908 i‡(
ªad_Àn
 =*
Àn
){

911 
tŸ_Àn
 = 
ªad_Àn
;

913 
ªad_Àn
 =*
Àn
){

914 
ªad_Àn
 = 
	`_sys_ªcv‰om
(
sockë
, 
πp_pkt_°ªam
, *
Àn
, 0, &
‰om_addr
, &
‰omaddæí
);

915 
tŸ_Àn
 +
ªad_Àn
;

917 *
Àn
 = 
tŸ_Àn
;

919 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

920  
	`îr‹debug
(
RTP_INSUFFICIENT_BUFFER
, "RTPReceive",

921 "c⁄ãxà%d, insufficõ¡ buf„∏¥ovidedÅÿhﬁdÖackë", ()
cid
);

923 *
Àn
 = 
ªad_Àn
;

927 
isRTCP
 = (
sockë
 =
uc
->
ªcv_addr_li°
->
π˝sockë
);

938 i‡(
isRTCP
Ë
check_addr
 = (
sockaddr_ö
 *)&
uc
->
π˝_sour˚addr
;

939 
check_addr
 = (
sockaddr_ö
 *)&
uc
->
πp_sour˚addr
;

941 
‰om_addr_ö
 = (
sockaddr_ö
 *)&
‰om_addr
;

943 
possibÀ_lo›back
 =

944 (
check_addr
->
sö_Ámûy
 !
AF_UNSPEC
 &&

945 (
check_addr
->
sö_addr
.
s_addr
 =
‰om_addr_ö
->sin_addr.s_addr ||

946 
check_addr
->
sö_addr
.
s_addr
 =
INADDR_ANY
) &&

947 
‰om_addr_ö
->
sö_p‹t
 =
check_addr
->sin_port);

949 
îr
 = 
	`RTPPackëRe˚ived
(
cid
, 
πp_pkt_°ªam
, 
ªad_Àn
,

950 
‰om_addr
, 
‰omaddæí
,

951 
isRTCP
, 
possibÀ_lo›back
);

953 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

954  
îr
;

955 
	}
}

957 
π≥º‹
 
	$RTPSessi⁄RemoveFromC⁄åibut‹Li°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
,

958 *
ªas⁄
)

960 
π≥º‹
 
îr
;

961 
hl_c⁄ãxt
 *
uc
;

963 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

964 i‡(
îr
 !
RTP_OK
)

966  
îr
;

968 
îr
 = 
	`RTPSessi⁄LowLevñRemoveFromC⁄åibut‹Li°
(
cid
, 
s§c
, 
ªas⁄
);

970  
îr
;

971 
	}
}

975 
	stimî_öfo
 {

976 
c⁄ãxt
 
	mcid
;

977 
öt32
 
	mtimî_ty≥
;

978 
u_öt32
 
	md©a
;

979 *
	mªas⁄
;

982 
	$RTPSëTimî
(
c⁄ãxt
 
cid
, 
öt32
 
timî_ty≥
, 
u_öt32
 
d©a
,

983 *
°r
, 
timevÆ
 *
ç
)

985 
π≥º‹
 
îr
;

986 
hl_c⁄ãxt
 *
uc
;

987 
timî_öfo
 *
ti
;

988 
timevÆ
 
now
;

989 
timevÆ
 
nŸime
 = {0,0};

991 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

992 i‡(
îr
 !
RTP_OK
)

997 
ti
 = (
timî_öfo
 *Ë
	`mÆloc
((timer_info));

998 i‡(
ti
 =
NULL
)

1002 
ti
->
cid
 = cid;

1003 
ti
->
timî_ty≥
 =Åimer_type;

1004 
ti
->
d©a
 = data;

1005 i‡(
°r
 !
NULL
)

1006 
ti
->
ªas⁄
 = 
	`°rdup
(
°r
);

1008 
ti
->
ªas⁄
 = 
NULL
;

1012 
	`gëtimeofday
(&
now
, 
NULL
);

1013 i‡(!
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 &&

1014 
	`TimeExpúed
(
ç
, &
now
, &
nŸime
)) {

1015 
	`RTPExecuã
(
cid
, (
πp_›aque_t
Ë
ti
);

1018 
	`RTPScheduÀ
(
cid
, (
πp_›aque_t
Ë
ti
, 
ç
);

1020 
	}
}

1023 
π≥º‹
 
	$RTPExecuã
(
c⁄ãxt
 
cid
, 
πp_›aque_t
 
›aque
){

1024 
π≥º‹
 
îr
;

1025 
hl_c⁄ãxt
 *
uc
;

1026 
timî_öfo
 *
ti
;

1027 
îrchk
, 
rundñëe
, 
buÊí
;

1028 
addªss_hﬁdî_t
 *
s
, *
¥evs
;

1030 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1031 i‡(
îr
 !
RTP_OK
)

1033  
îr
;

1035 
ti
 = (
timî_öfo
 *Ë
›aque
;

1037 i‡(
ti
->
cid
 != cid) {

1038  
	`îr‹debug
(
RTP_UNKNOWN_CONTEXT
, "RTPExecute",

1040 ()
cid
, ()
ti
->cid);

1043 i‡(
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
){

1044  
	`îr‹debug
(
RTP_CANT_CALL_FUNCTION
, "RTPExecute",

1046 ()
cid
);

1048 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
TRUE
;

1050 
buÊí
 = 
_RTP_MAX_PKT_SIZE
;

1051 
ti
->
timî_ty≥
) {

1052 
RTP_TIMER_SEND_RTCP
:

1053 
îr
 = 
	`RTPBuûdRTCPPackë
(
cid
, 
RTCP_SUBPARTS_ALL
, 0,

1054 
uc
->
∑ckë_buf„r
, &
buÊí
);

1056 
RTP_TIMER_SEND_BYE_ALL
:

1057 
îr
 = 
	`RTPBuûdByePackë
(
cid
, 
FALSE
, 0, 
ti
->
ªas⁄
, 0,

1058 
uc
->
∑ckë_buf„r
, &
buÊí
);

1060 
RTP_TIMER_SEND_BYE_CONTRIBUTOR
:

1061 
RTP_TIMER_SEND_BYE_COLLISION
:

1062 
îr
 = 
	`RTPBuûdByePackë
(
cid
, 
TRUE
, 
ti
->
d©a
,Åi->
ªas⁄
, 0,

1063 
uc
->
∑ckë_buf„r
, &
buÊí
);

1066 
˛ónup
;

1069 i‡(
îr
 !
RTP_OK
) {

1070 i‡(
îr
 =
RTP_DONT_SEND_NOW
) {

1073 
îr
 = 
RTP_OK
;

1075 
˛ónup
;

1080 
s
 = 
uc
->
£nd_addr_li°
;

1082 
îr
 = 
RTP_OK
;

1083 
rundñëe
 = 
FALSE
;

1084 
s
 !
NULL
) {

1085 if(
s
->
dñëeÊag
 =
FALSE
) {

1086 
îrchk
 = 
	`_sys_£nd
(
s
->
π˝sockë
, 
uc
->
∑ckë_buf„r
, 
buÊí
, 0);

1087 i‡(
îrchk
 < 0){

1088 i‡(
uc
->
SídEº‹CÆlBack
 !
NULL
) {

1089 
uc
->
	`SídEº‹CÆlBack
(
cid
,

1090 
	`öë_¡ﬂ
(
s
->
addªss
),

1091 
	`¡ohs
(
s
->
p‹t
),

1092 
s
->
âl
);

1094 i‡(
s
->
dñëeÊag
 =
TRUE
) {

1095 
rundñëe
 = 
TRUE
;

1100 
rundñëe
 = 
TRUE
;

1102 
s
 = s->
√xt
;

1108 
¥evs
 = 
NULL
;

1109 i‡(
rundñëe
 =
TRUE
) {

1110 
s
 = 
uc
->
£nd_addr_li°
;

1112 
s
 !
NULL
) {

1113 if(
s
->
dñëeÊag
 =
TRUE
) {

1114 if(
¥evs
 =
NULL
)

1115 
uc
->
£nd_addr_li°
 = 
s
->
√xt
;

1117 
¥evs
->
√xt
 = 
s
->next;

1119 
	`_sys_˛o£_sockë
(
s
->
πpsockë
);

1120 
	`_sys_˛o£_sockë
(
s
->
π˝sockë
);

1121 
	`‰ì
(
s
);

1123 
¥evs
 = 
s
;

1124 
s
 = s->
√xt
;

1128 
˛ónup
:

1129 i‡(
ti
->
ªas⁄
 !
NULL
) {

1130 
	`‰ì
(
ti
->
ªas⁄
);

1132 
	`‰ì
(
ti
);

1133 
uc
->
PªvítE¡ryI¡oFœggögFun˘i⁄s
 = 
FALSE
;

1134  
îr
;

1135 
	}
}

1137 
π≥º‹
 
	$RTPSessi⁄SëEn¸y±i⁄
(
c⁄ãxt
 
cid
, 
í¸y±i⁄_t
 
vÆue
){

1138 
π≥º‹
 
îr
;

1139 
hl_c⁄ãxt
 *
uc
;

1141 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1142 i‡(
îr
 !
RTP_OK
)

1144  
îr
;

1146 
uc
->
u£_í¸y±i⁄
 = 
vÆue
;

1147  
RTP_OK
;

1148 
	}
}

1150 
π≥º‹
 
	$RTPSessi⁄GëEn¸y±i⁄
(
c⁄ãxt
 
cid
, 
í¸y±i⁄_t
 *
vÆue
){

1152 
π≥º‹
 
îr
;

1153 
hl_c⁄ãxt
 *
uc
;

1155 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1156 i‡(
îr
 !
RTP_OK
)

1158  
îr
;

1160 *
vÆue
 = 
uc
->
u£_í¸y±i⁄
;

1161  
RTP_OK
;

1162 
	}
}

1165 
π≥º‹
 
RTPSessi⁄SëEn¸y±i⁄Funcs
(
c⁄ãxt
 
cid
,

1166 (*
öô
)(
c⁄ãxt
, *),

1167 (*
í¸y±
)(
c⁄ãxt
, *,

1169 (*
de¸y±
)(
c⁄ãxt
, *,

1171 
π≥º‹
 
îr
;

1172 
hl_c⁄ãxt
 *
uc
;

1174 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1175 i‡(
îr
 !
RTP_OK
)

1177  
îr
;

1179 
uc
->
í¸y±_öôfunc
 = 
öô
;

1180 
uc
->
í¸y±_í¸y±func
 = 
í¸y±
;

1181 
uc
->
í¸y±_de¸y±func
 = 
de¸y±
;

1182  
RTP_OK
;

1183 
	}
}

1185 
π≥º‹
 
	$RTPSessi⁄SëKey
(
c⁄ãxt
 
cid
, * 
vÆue
){

1186 
π≥º‹
 
îr
;

1187 
hl_c⁄ãxt
 *
uc
;

1189 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1190 i‡(
îr
 !
RTP_OK
)

1192  
îr
;

1195 
uc
->
key
 = 
vÆue
;

1196 i‡(
uc
->
í¸y±_öôfunc
 !
NULL
){

1197 
uc
->
	`í¸y±_öôfunc
(
cid
, 
vÆue
);

1199  
RTP_OK
;

1200 
	}
}

1202 
π≥º‹
 
	$RTPSessi⁄GëKey
(
c⁄ãxt
 
cid
, **
vÆue
){

1203 
π≥º‹
 
îr
;

1204 
hl_c⁄ãxt
 *
uc
;

1206 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1207 i‡(
îr
 !
RTP_OK
)

1209  
îr
;

1211 *
vÆue
 = 
uc
->
key
;

1212  
RTP_OK
;

1213 
	}
}

1216 
π≥º‹
 
RTPSëSídEº‹CÆlBack
(
c⁄ãxt
 
cid
,

1217 (*
f
)(
c⁄ãxt
, *, 
u_öt16
, 
u_öt8
)) {

1218 
π≥º‹
 
îr
;

1219 
hl_c⁄ãxt
 *
uc
;

1221 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1222 i‡(
îr
 !
RTP_OK
)

1224  
îr
;

1226 
uc
->
SídEº‹CÆlBack
 = 
f
;

1227  
RTP_OK
;

1228 
	}
}

1230 
	$hl_ch™ged_sockaddr_ˇŒback
(
c⁄ãxt
 
cid
,

1231 
≥rs⁄
 
p
,

1232 
sockaddr
 *
ß
,

1233 
is_π˝
)

1235 
π≥º‹
 
îr
;

1236 
hl_c⁄ãxt
 *
uc
;

1238 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1239 i‡(
îr
 !
RTP_OK
)

1243 i‡(
uc
->
Ch™gedMembîAddªssCÆlBack
 !
NULL
) {

1244 
p‹t°r
[
_RTP_MAX_PORT_STR_SIZE
];

1245 
sockaddr_ö
 *
si
 = (sockaddr_ö *Ë
ß
;

1247 
	`•rötf
(
p‹t°r
, "%hu", 
	`¡ohs
(
si
->
sö_p‹t
));

1248 
uc
->
	`Ch™gedMembîAddªssCÆlBack
(
cid
, 
p
,

1249 
	`öë_¡ﬂ
(
si
->
sö_addr
),

1250 
p‹t°r
,

1251 
is_π˝
);

1253 
	}
}

1255 
π≥º‹
 
RTPSëCh™gedMembîAddªssCÆlBack
(
c⁄ãxt
 
cid
,

1256 (*
f
)(
c⁄ãxt
, 
≥rs⁄
, *, *, ))

1258 
π≥º‹
 
îr
;

1259 
hl_c⁄ãxt
 *
uc
;

1261 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1262 i‡(
îr
 !
RTP_OK
)

1264  
îr
;

1266 
uc
->
Ch™gedMembîAddªssCÆlBack
 = 
f
;

1267  
RTP_OK
;

1268 
	}
}

1270 
π≥º‹
 
	$RTPMo°Re˚¡Addr
(
c⁄ãxt
 
cid
, *
addr
, *
p‹t
) {

1271 
sockaddr_ö
 
si
;

1272 
π≥º‹
 
îr
;

1274 
îr
 = 
	`RTPMo°Re˚¡Sockaddr
(
cid
, (
sockaddr
 *)&
si
);

1275 i‡(
îr
 !
RTP_OK
)

1276  
îr
;

1278 
	`°r˝y
(
addr
, 
	`öë_¡ﬂ
(
si
.
sö_addr
));

1279 
	`•rötf
(
p‹t
, "%hu", 
	`¡ohs
(
si
.
sö_p‹t
));

1281  
RTP_OK
;

1282 
	}
}

1285 
π≥º‹
 
	$RTPMembîInfoGëRTPAddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1286 *
addr
, *
p‹t
) {

1287 
sockaddr_ö
 
si
;

1288 
π≥º‹
 
îr
;

1290 
îr
 = 
	`RTPMembîInfoGëRTPSockaddr
(
cid
, 
p
, (
sockaddr
 *)&
si
);

1291 i‡(
îr
 !
RTP_OK
)

1292  
îr
;

1294 
	`°r˝y
(
addr
, 
	`öë_¡ﬂ
(
si
.
sö_addr
));

1295 
	`•rötf
(
p‹t
, "%hu", 
	`¡ohs
(
si
.
sö_p‹t
));

1297  
RTP_OK
;

1298 
	}
}

1300 
π≥º‹
 
	$RTPMembîInfoGëRTCPAddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

1301 *
addr
, *
p‹t
) {

1302 
sockaddr_ö
 
si
;

1303 
π≥º‹
 
îr
;

1305 
îr
 = 
	`RTPMembîInfoGëRTCPSockaddr
(
cid
, 
p
, (
sockaddr
 *)&
si
);

1306 i‡(
îr
 !
RTP_OK
)

1307  
îr
;

1309 
	`°r˝y
(
addr
, 
	`öë_¡ﬂ
(
si
.
sö_addr
));

1310 
	`•rötf
(
p‹t
, "%hu", 
	`¡ohs
(
si
.
sö_p‹t
));

1312  
RTP_OK
;

1313 
	}
}

1322 
	$InôR™dom
(){

1323 
timevÆ
 
cuπime
;

1324 #ifde‡
_RTP_SEMI_RANDOM


1327 
	`gëtimeofday
(&
cuπime
, 
NULL
);

1328 
	`§™d48
((Ë
cuπime
.
tv_u£c
);

1329 
	}
}

1347 
	#MD_CTX
 
MD5_CTX


	)

1348 
	#MDInô
 
MD5Inô


	)

1349 
	#MDUpd©e
 
MD5Upd©e


	)

1350 
	#MDFöÆ
 
MD5FöÆ


	)

1352 
u_l⁄g
 
	$md_32
(*
°rög
, 
Àngth
)

1354 
MD_CTX
 
c⁄ãxt
;

1356 
c
[16];

1357 
u_l⁄g
 
x
[4];

1358 } 
dige°
;

1359 
u_l⁄g
 
r
;

1360 
i
;

1362 
	`MDInô
 (&
c⁄ãxt
);

1363 
	`MDUpd©e
 (&
c⁄ãxt
, 
°rög
, 
Àngth
);

1364 
	`MDFöÆ
 ((*)&
dige°
, &
c⁄ãxt
);

1365 
r
 = 0;

1366 
i
 = 0; i < 3; i++) {

1367 
r
 ^
dige°
.
x
[
i
];

1369  
r
;

1371 
	}
}

1392 
π≥º‹
 
	$DoEn¸y±i⁄
(
c⁄ãxt
 
cid
, 
iovec
 *
pkç¨t
, 
pkéí
,

1393 
IsRTP
){

1397 
í¸y±buf
[
_RTP_MAX_PKT_SIZE
];

1398 
öt32
 
øndom_hódî
 = 
	`øndom32
(
cid
);

1399 
tŸ_Àn
, 
rundñëe
;

1400 
i
, 
îrchk
;

1401 
u£_sockë
;

1402 
addªss_hﬁdî_t
 *
s
, *
¥evs
;

1403 
unix_c⁄ãxt
 *
uc
;

1404 
π≥º‹
 
îr
;

1406 
îr
 = 
	`RTPSessi⁄GëHighLevñInfo
(
cid
, (**)&
uc
);

1407 i‡(
îr
 !
RTP_OK
)

1409  
îr
;

1411 #ifde‡
_RTP_DEBUG


1412 
	`¥ötf
("Encrypting ");

1413 i‡(
IsRTP
){

1414 
	`¥ötf
("RTP\n");

1416 
	`¥ötf
("RTCP\n");

1420 
îr
 = 
RTP_OK
;

1421 i‡(
uc
->
í¸y±_í¸y±func
 =
NULL
){

1422  
	`îr‹debug
(
RTP_CANT_USE_ENCRYPTION
, "DoEncryption",

1424 ()
cid
);

1425  
RTP_CANT_USE_ENCRYPTION
;

1428 
	`mem˝y
(
í¸y±buf
, (*Ë&
øndom_hódî
, (random_header));

1429 
tŸ_Àn
 = (
øndom_hódî
);

1430 
i
=0; i < 
pkéí
; i++){

1431 
	`mem˝y
(&
í¸y±buf
[
tŸ_Àn
], (*Ë
pkç¨t
[
i
].
iov_ba£
,

1432 
pkç¨t
[
i
].
iov_Àn
);

1433 
tŸ_Àn
 +
pkç¨t
[
i
].
iov_Àn
;

1439 
uc
->
	`í¸y±_í¸y±func
(
cid
, 
í¸y±buf
,

1440 (Ë
tŸ_Àn
,

1441 
uc
->
key
);

1444 
s
 = 
uc
->
£nd_addr_li°
;

1445 
rundñëe
 = 
FALSE
;

1446 
s
 !
NULL
) {

1448 if(
IsRTP
)

1449 
u£_sockë
 = 
s
->
πpsockë
;

1451 
u£_sockë
 = 
s
->
π˝sockë
;

1453 if(
s
->
dñëeÊag
 =
FALSE
) {

1454 
îrchk
 = 
	`£nd
(
u£_sockë
, 
í¸y±buf
, 
tŸ_Àn
, 0);

1457 i‡(
îrchk
 < 0){

1458 
îr
 = 
	`îr‹debug
(
RTP_SOCKET_WRITE_FAILURE
, "DoEncryption",

1460 ()
cid
);

1462 i‡(
uc
->
SídEº‹CÆlBack
 !
NULL
) {

1463 
uc
->
	`SídEº‹CÆlBack
(
cid
,

1464 
	`öë_¡ﬂ
(
s
->
addªss
),

1465 
	`¡ohs
(
s
->
p‹t
),

1466 
s
->
âl
);

1470 
rundñëe
 = 
TRUE
;

1473 
s
 = s->
√xt
;

1476 
¥evs
 = 
NULL
;

1477 if(
rundñëe
 =
TRUE
) {

1478 
s
 = 
uc
->
£nd_addr_li°
;

1480 
s
 !
NULL
) {

1481 if(
s
->
dñëeÊag
 =
TRUE
) {

1483 if(
¥evs
 =
NULL
)

1484 
uc
->
£nd_addr_li°
 = 
s
->
√xt
;

1486 
¥evs
->
√xt
 = 
s
->next;

1488 
	`˛o£
(
s
->
πpsockë
);

1489 
	`˛o£
(
s
->
π˝sockë
);

1490 
	`‰ì
(
s
);

1492 
¥evs
 = 
s
;

1493 
s
 = s->
√xt
;

1498  
îr
;

1499 
	}
}

1511 
	$FromDif„ª¡Sour˚
(
sockaddr
 *
addr1
, sockadd∏*
addr2
,

1512 
com∂í
){

1513 
sockaddr_ö
 *
öëaddr1
, *
öëaddr2
;

1515 i‡(
addr1
->
ß_Ámûy
 !
addr2
->sa_family){

1516  
TRUE
;

1519 i‡(
addr1
->
ß_Ámûy
 =
AF_INET
){

1520 
öëaddr1
 = (
sockaddr_ö
*Ë
addr1
;

1521 
öëaddr2
 = (
sockaddr_ö
*Ë
addr2
;

1523  ((
öëaddr1
->
sö_addr
.
s_addr
 !
öëaddr2
->sin_addr.s_addr) ||

1524 ((
	`¡ohs
(
öëaddr1
->
sö_p‹t
) & (~1)) !=

1525 (
	`¡ohs
(
öëaddr2
->
sö_p‹t
) & (~1))));

1529  (
	`memcmp
(
addr1
, 
addr2
, 
com∂í
) != 0);

1530 
	}
}

	@rtp_highlevel.h

10 #i‚de‡
_RTP_HIGHLEVEL_H


11 
	#_RTP_HIGHLEVEL_H


	)

15 * 
	tπp_›aque_t
;

17 #ifde‡
WIN32


18 
SOCKET
 
	tsockty≥
;

21 #ifde‡
__unix


22 
	#SOCKTYPE_DEFINED


	)

23 
	tsockty≥
;

29 
π≥º‹
 
RTPCª©e
(
c⁄ãxt
 *
the_c⁄ãxt
);

31 
π≥º‹
 
RTPDe°roy
(
c⁄ãxt
 
cid
);

34 
π≥º‹
 
RTPO≥nC⁄√˘i⁄
(
c⁄ãxt
 
cid
);

36 
π≥º‹
 
RTPClo£C⁄√˘i⁄
(
c⁄ãxt
 
cid
, *
ªas⁄
);

39 
π≥º‹
 
RTPSíd
(
c⁄ãxt
 
cid
, 
öt32
 
tsöc
, 
öt8
 
m¨kî
,

40 
öt16
 
±i
, 
öt8
 *
∑ylﬂd
, 
Àn
);

42 
π≥º‹
 
RTPSídVe˘‹
(
c⁄ãxt
 
cid
, 
öt32
 
tsöc
, 
öt8
 
m¨kî
,

43 
öt16
 
±i
, 
iovec
 *
∑ylﬂd
, 
vec_cou¡
);

45 
π≥º‹
 
RTPRe˚ive
(
c⁄ãxt
 
cid
, 
sockty≥
 
sockë
,

46 *
πp_pkt_°ªam
, *
Àn
);

49 
π≥º‹
 
RTPSessi⁄AddSídAddr
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 
p‹t
, 
u_öt8
 
âl
);

50 
π≥º‹
 
RTPSessi⁄RemoveSídAddr
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 
p‹t
, 
u_öt8
 
âl
);

52 
π≥º‹
 
RTPSessi⁄SëRe˚iveAddr
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 
p‹t
);

53 
π≥º‹
 
RTPSessi⁄GëRe˚iveAddr
(
c⁄ãxt
 
cid
, *
addr
, 
u_öt16
 *
p‹t
);

57 
π≥º‹
 
RTPSessi⁄RemoveFromC⁄åibut‹Li°
(
c⁄ãxt
 
cid
, 
u_öt32
 
s§c
,

58 *
ªas⁄
);

60 
π≥º‹
 
RTPSessi⁄GëRTPSockë
(
c⁄ãxt
 
cid
, 
sockty≥
 *
vÆue
);

61 
π≥º‹
 
RTPSessi⁄GëRTCPSockë
(
c⁄ãxt
 
cid
, 
sockty≥
 *
vÆue
);

63 
π≥º‹
 
RTPExecuã
(
c⁄ãxt
 
cid
, 
πp_›aque_t
 
›aque
);

65 
π≥º‹
 
RTPSëCh™gedMembîAddªssCÆlBack
(
c⁄ãxt
 
cid
,

66 (*
f
)(
c⁄ãxt
, 
≥rs⁄
, *, *, ));

67 
π≥º‹
 
	`RTPSëSídEº‹CÆlBack
(
c⁄ãxt
 
cid
,

68 (*
f
)(
c⁄ãxt
, *, 
u_öt16
, 
u_öt8
));

71 
π≥º‹
 
	`RTPMo°Re˚¡Addr
(
c⁄ãxt
 
cid
, *
addr
, *
p‹t
);

74 
π≥º‹
 
	`RTPMembîInfoGëRTPAddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

75 *
addr
, *
p‹t
);

76 
π≥º‹
 
	`RTPMembîInfoGëRTCPAddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

77 *
addr
, *
p‹t
);

82 
	`RTPScheduÀ
(
c⁄ãxt
 
cid
, 
πp_›aque_t
 
›aque
, 
timevÆ
 *
ç
);

87 
π≥º‹
 
	`RTPSessi⁄SëEn¸y±i⁄
(
c⁄ãxt
 
cid
, 
í¸y±i⁄_t
 
vÆue
);

88 
π≥º‹
 
	`RTPSessi⁄GëEn¸y±i⁄
(
c⁄ãxt
 
cid
, 
í¸y±i⁄_t
 *
vÆue
);

89 
π≥º‹
 
	`RTPSessi⁄SëEn¸y±i⁄Funcs
(
c⁄ãxt
 
cid
,

90 (*
öô
)(
c⁄ãxt
, *),

91 (*
í¸y±
)(
c⁄ãxt
, *, , *),

92 (*
de¸y±
)(
c⁄ãxt
, *, , *));

	@rtp_highlevel_internal.h

1 #i‚de‡
_RTP_HIGHLEVEL_INTERNAL_H


2 
	#_RTP_HIGHLEVEL_INTERNAL_H


	)

4 
	~"πp_≠i.h
"

5 #ifde‡
WIN32


6 
	~"πp_wö32.h
"

9 #ifde‡
__unix


10 
	~"πp_unix.h
"

15 
	#_RTP_DEFAULT_TTL
 128

	)

18 
	#_RTP_DEFAULT_ENCRYPTION
 
RTP_ENCRYPTION_NONE


	)

21 
	#_RTP_MAX_PKT_SIZE
 10000

	)

25 
	#_RTP_MAX_PORT_STR_SIZE
 8

	)

28 
	#_RTP_DEFAULT_PORT
 5000

	)

32 
	#_BIND_COUNTER
 20

	)

36 
	#_UDP_PORT_BASE
 49152

	)

40 
	#_UDP_PORT_RANGE
 16382

	)

42 #i‚de‡
FALSE


43 
	#FALSE
 0

	)

44 
	#TRUE
 1

	)

53 
	saddªss_hﬁdî
 {

54 
ö_addr
 
	maddªss
;

55 
u_öt16
 
	mp‹t
;

56 
u_öt8
 
	mâl
;

57 
sockty≥
 
	mπpsockë
;

58 
sockty≥
 
	mπ˝sockë
;

59 
addªss_hﬁdî
 *
	m√xt
;

60 
	mdñëeÊag
;

61 } 
	taddªss_hﬁdî_t
;

73 
	mc⁄√˘i⁄_›íed
;

76 
addªss_hﬁdî_t
 *
	m£nd_addr_li°
;

79 
addªss_hﬁdî_t
 *
	mªcv_addr_li°
;

84 
sockaddr_ö
 
	mπp_sour˚addr
;

85 
sockaddr_ö
 
	mπ˝_sour˚addr
;

93 
í¸y±i⁄_t
 
	mu£_í¸y±i⁄
;

96 * 
	mkey
;

102 
	mPªvítE¡ryI¡oFœggögFun˘i⁄s
;

107 (*
	mí¸y±_öôfunc
)(
	mc⁄ãxt
, *);

108 (*
	mí¸y±_í¸y±func
)(
	mc⁄ãxt
, *, , *);

109 (*
	mí¸y±_de¸y±func
)(
	mc⁄ãxt
, *, , *);

114 (*
	mSídEº‹CÆlBack
)(
	mc⁄ãxt
, *, 
	mu_öt16
, 
	mu_öt8
);

115 (*
	mCh™gedMembîAddªssCÆlBack
)(
	mc⁄ãxt
, 
	m≥rs⁄
, *, *, );

119 
	m∑ckë_buf„r
[
_RTP_MAX_PKT_SIZE
];

121 } 
	thl_c⁄ãxt
;

127 
ö_addr
 
ho°2ù
(*);

	@rtp_lowlevel.h

8 #i‚de‡
_RTP_LOWLEVEL_H


9 
	#_RTP_LOWLEVEL_H


	)

15 
	mRTCP_SUBPARTS_ALL
,

16 
	mRTCP_SUBPARTS_RRSR
,

17 
	mRTCP_SUBPARTS_SDES


18 } 
	tπ˝_sub∑πs_t
;

21 
	#RTP_TIMER_SEND_RTCP
 1

	)

22 
	#RTP_TIMER_SEND_BYE_ALL
 2

	)

23 
	#RTP_TIMER_SEND_BYE_CONTRIBUTOR
 3

	)

24 
	#RTP_TIMER_SEND_BYE_COLLISION
 4

	)

30 
π≥º‹
 
_RTP_cur_îr
;

32 #ifde‡
_RTP_DEBUG


35 
_RTP_îr_msg
[256];

40 
π≥º‹
 
RTPLowLevñCª©e
(
c⁄ãxt
 *
the_c⁄ãxt
);

41 
π≥º‹
 
RTPLowLevñDe°roy
(
c⁄ãxt
 
cid
);

43 
π≥º‹
 
RTPSessi⁄SëHighLevñInfo
(
c⁄ãxt
 
cid
, *
öfo
);

44 
π≥º‹
 
RTPSessi⁄GëHighLevñInfo
(
c⁄ãxt
 
cid
, **
öfo
);

46 
π≥º‹
 
RTPSèπSessi⁄
(
c⁄ãxt
 
cid
);

47 
π≥º‹
 
RTPSt›Sessi⁄
(
c⁄ãxt
 
cid
, *
ªas⁄
);

49 
π≥º‹
 
RTPBuûdByePackë
(
c⁄ãxt
 
cid
, 
⁄e_c§c
, 
u_öt32
 
s§c
,

50 *
ªas⁄
, 
∑ddög_block
, *
buf„r
,

51 *
Àngth
);

52 
π≥º‹
 
RTPBuûdRTCPPackë
(
c⁄ãxt
 
cid
, 
π˝_sub∑πs_t
 
sub∑πs
,

53 
∑ddög_block
, *
buf„r
, *
Àngth
);

55 
π≥º‹
 
RTPGëRTPHódîLígth
(
c⁄ãxt
 
cid
, *
Àngth
);

56 
π≥º‹
 
RTPBuûdRTPHódî
(
c⁄ãxt
 
cid
, 
öt32
 
tsöc
, 
öt8
 
m¨kî
,

57 
öt16
 
±i
, 
öt8
 
∑ddög
, 
∑ylﬂd_Àn
,

58 *
buf„r
, *
buÊí
);

60 
π≥º‹
 
RTPPackëRe˚ived
(
c⁄ãxt
 
cid
, *
πp_pkt_°ªam
, 
Àn
,

61 
sockaddr
 
‰om_addr
, 
‰omaddæí
,

62 
isRTCP
, 
possibÀ_lo›back
);

64 
π≥º‹
 
RTPSessi⁄LowLevñRemoveFromC⁄åibut‹Li°
(
c⁄ãxt
 
cid
,

65 
u_öt32
 
s§c
,

66 *
ªas⁄
);

68 
π≥º‹
 
RTPSëCh™gedMembîSockaddrCÆlBack
(
c⁄ãxt
 
cid
,

69 (*
f
)(
c⁄ãxt
, 
≥rs⁄
, 
sockaddr
*, ));

72 
π≥º‹
 
	`RTPMembîInfoGëRTPSockaddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

73 
sockaddr
 *
addr
);

74 
π≥º‹
 
	`RTPMembîInfoGëRTCPSockaddr
(
c⁄ãxt
 
cid
, 
≥rs⁄
 
p
,

75 
sockaddr
 *
addr
);

78 
π≥º‹
 
	`RTPMo°Re˚¡Sockaddr
(
c⁄ãxt
 
cid
, 
sockaddr
 *
addr
);

84 
	`TimeExpúed
(
timevÆ
 *
öô_time
, timevÆ *
cur_time
,

85 
timevÆ
 *
öãrvÆ
);

89 
	`RTPSëTimî
(
c⁄ãxt
 
cid
, 
öt32
 
timî_ty≥
, 
u_öt32
 
d©a
,

90 *
°r
, 
timevÆ
 *
ç
);

92 
	`FromDif„ª¡Sour˚
(
sockaddr
 *
addr1
, sockadd∏*
addr2
,

93 
com∂í
);

96 
	`InôR™dom
();

98 
u_öt32
 
	`øndom32
(
ty≥
);

102 #ifde‡
_RTP_DEBUG


103 
π≥º‹
 
	$îr‹debug
(
π≥º‹
 
îr
, *
func
, *
msg
, ...)

104 
	#_RTP_DEFINE_EDEBUG


	)

105 #ifde‡
__GNUC__


106 
	`__©åibuã__
 ((
	$f‹m©
 (
¥ötf
, 3, 4)))

110 #ifde‡
__GNUC__


111 
	#îr‹debug
(
îr
, 
exåa
...Ë(
_RTP_cur_îr
 = (îr))

	)

113 
π≥º‹
 
	`îr‹debug
‘çîr‹ 
îr
, *
func
, *
msg
, ...);

114 
	#_RTP_DEFINE_EDEBUG


	)

	@rtp_mlist.c

7 
	#_MLIST_C


	)

9 
	~"sysdï.h
"

11 
	~"πp_mli°_öã∫Æ.h
"

12 
	~"πp_mli°.h
"

13 
	~"πp_cﬁlisi⁄.h
"

16 #i‚de‡
FALSE


17 
	#FALSE
 0

	)

18 
	#TRUE
 1

	)

24 
≥rs⁄
 
	$AssignID
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

25 #ifde‡
_RTP_DEBUG


26 
	`¥ötf
("ID %ldássig√d\n", 
the_c⁄ãxt
->
unique_id_cou¡î
);

29 
the_c⁄ãxt
->
unique_id_cou¡î
++;

30  
the_c⁄ãxt
->
unique_id_cou¡î
 - 1;

31 
	}
}

36 
	$RTP_Membîshù_Inôülize
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

37 
	`InôSSRCHashTabÀ
(
the_c⁄ãxt
);

38 
	`InôUniqueIDHashTabÀ
(
the_c⁄ãxt
);

39 
	`InôCNAMEHashTabÀ
(
the_c⁄ãxt
);

40 
	`MembîshùLi°Inô
(&
the_c⁄ãxt
->
RTP_MembîLi°
);

41 
	`MembîshùLi°Inô
(&
the_c⁄ãxt
->
RTP_SídîLi°
);

43 
	}
}

55 
membî
 *
	$E°ablishNewMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
u_öt32
 
s§c
,

56 * 
u£r_d©a
, 
sockaddr
 *
‰omaddr
,

57 
addr_is_π˝
, 
membî°©us
 
°©us
){

58 
i
;

59 
membî
 *
the_membî
;

60 
timevÆ
 
begönög
;

61 
the_membî
 = (
membî
*Ë
	`mÆloc
((member));

62 
the_membî
->
s§c_hash
 = 
NULL
;

63 
the_membî
->
unique_id_hash
 = 
NULL
;

64 
the_membî
->
˙ame_hash
 = 
NULL
;

65 
the_membî
->
¢dr_li°_lök
 = 
NULL
;

67 
the_membî
->
s§c
 = ssrc;

69 
the_membî
->
cﬁlidög
 = 
FALSE
;

70 
the_membî
->
cﬁlides_wôh_√xt
 = 
NULL
;

71 
the_membî
->
cﬁlides_wôh_¥ev
 = 
NULL
;

73 
i
 = 0; i < 2; i++) {

77 i‡(
‰omaddr
 !
NULL
 && ((
addr_is_π˝
 !0Ë=(
i
 != 0))) {

78 
the_membî
->
my_addr
[
i
] = *
‰omaddr
;

80 
the_membî
->
my_addr
[
i
].
ß_Ámûy
 = 
_RTP_ADDRESS_NOT_YET_KNOWN
;

85 
the_membî
->
unique_id
 = 
	`AssignID
(
the_c⁄ãxt
);

87 
	`gëtimeofday
(&
the_membî
->
œ°_upd©e_time
, 
NULL
);

94 
the_membî
->
°©us
 = status;

95 
the_membî
->
£nd°©us
 = 
RTP_SENDER_NOT
;

97 
the_membî
->
u£r_d©a
 = user_data;

98 
i
 = 0; i < 
_RTP_NUM_SDES_TYPES
; i++){

99 
the_membî
->
sdes_öfo
[
i
] = 
NULL
;

102 
the_membî
->
loˇl_öfo
 = 
NULL
;

104 
the_membî
->
πp_time°amp
 = 0;

105 
the_membî
->
¡p_time°amp
.
£cs
 = 0;

106 
the_membî
->
¡p_time°amp
.
‰ac
 = 0;

107 
the_membî
->
pkt_cou¡
 = 0;

108 
the_membî
->
o˘_cou¡
 = 0;

110 
the_membî
->
ªcv_πp_cou¡
 = 0;

111 
the_membî
->
ªcv_c§c_cou¡
 = 0;

112 
the_membî
->
π˝_cou¡
 = 0;

114 
the_membî
->
mmbr_li°_lök
 = 
	`Cª©eLök
(the_member);

115 i‡(!
	`MembîshùLi°In£πMembî
(&
the_c⁄ãxt
->
RTP_MembîLi°
,

116 
the_membî
->
mmbr_li°_lök
)){

119 #ifde‡
_RTP_DEBUG


120 
	`¥ötf
("Oops: Member couldn't beÉntered intoÅhe memberlist\n");

122  
NULL
;

125 i‡(!
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
, 
the_membî
)){

127 #ifde‡
_RTP_DEBUG


128 
	`¥ötf
("Oops: Member couldn't beÉntered intoÅhe ssrc hashÅable\n");

130  
NULL
;

132 i‡(!
	`E¡îUniqueIDHashTabÀ
(
the_c⁄ãxt
, 
the_membî
)){

133 #ifde‡
_RTP_DEBUG


134 
	`¥ötf
("Oops: Member couldn't beÉntered intoÅhe id hashÅable\n");

137  
NULL
;

148 
begönög
.
tv_£c
 = 0;

149 
begönög
.
tv_u£c
 = 0;

150 
the_membî
->
œ°_πp_£nd_time
 = 
begönög
;

151 
the_membî
->
œ°_π˝_£nd_time
 = 
begönög
;

152 
the_membî
->
œ°_§_ª˚ùt_time
 = 
begönög
;

153 
the_membî
->
œ°_£nd_basis_time
 = 
begönög
;

157 
the_membî
->
⁄_c§c_li°
 = 
FALSE
;

159 
	`gëtimeofday
(&
begönög
, 
NULL
);

160 
the_membî
->
œ°_upd©e_time
 = 
begönög
;

166 i‡(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
) {

167 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

168 
the_membî
->
unique_id
,

169 
RTP_FLAG_NEW_MEMBER
,

170 
NULL
);

175 i‡(
the_c⁄ãxt
->
Ch™gedMembîSockaddrCÆlBack
 !
NULL
 && 
‰omaddr
 != NULL &&

176 
the_membî
->
unique_id
 != 0) {

177 
the_c⁄ãxt
->

178 
	`Ch™gedMembîSockaddrCÆlBack
(
the_c⁄ãxt
->
c⁄ãxt_num
,

179 
the_membî
->
unique_id
,

180 
‰omaddr
,

181 
addr_is_π˝
);

183  
the_membî
;

184 
	}
}

189 
	$Upd©eMembîTime
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
,

190 
timevÆ
 
√wtime
){

191 i‡(!
	`MembîshùLi°PuŒMembî
(&
the_c⁄ãxt
->
RTP_MembîLi°
,

192 
the_membî
->
mmbr_li°_lök
)){

193  
FALSE
;

196 
the_membî
->
œ°_upd©e_time
 = 
√wtime
;

200 i‡(!
	`MembîshùLi°In£πMembî
(&
the_c⁄ãxt
->
RTP_MembîLi°
,

201 
the_membî
->
mmbr_li°_lök
)){

204  
FALSE
;

206  
TRUE
;

207 
	}
}

217 
	$Upd©eSídîTime
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
,

218 
timevÆ
 
√wtime
, 
d©aÊag
){

220 
√w£ndî
 = 0;

225 if((
the_membî
->
£nd°©us
 =
RTP_MEMBER_CONFIRMED
) &&

226 
d©aÊag
 == 0)

227  
TRUE
;

231 i‡(
the_membî
->
£nd°©us
 =
RTP_SENDER_NOT
) {

234 
the_membî
->
¢dr_li°_lök
 = 
	`Cª©eLök
(the_member);

235 
√w£ndî
 = 1;

239 i‡(!
	`SídîLi°PuŒMembî
(&
the_c⁄ãxt
->
RTP_SídîLi°
,

240 
the_membî
->
¢dr_li°_lök
)){

241 #ifde‡
_RTP_DEBUG


242 
	`¥ötf
("UpdateSenderTime: Couldn'tÖull member\n");

244  
FALSE
;

254 if((
the_membî
->
°©us
 =
RTP_MEMBER_CONFIRMED
) &&

255 (
the_membî
->
£nd°©us
 !
RTP_SENDER_CONFIRMED
) &&

256 (
d©aÊag
 == 1)) {

258 
	`Ch™geSídîSètus
(
the_c⁄ãxt
, 
the_membî
, 
RTP_SENDER_CONFIRMED
);

260 } if((
the_membî
->
°©us
 !
RTP_MEMBER_CONFIRMED
) ||

261 ((
the_membî
->
£nd°©us
 !
RTP_SENDER_CONFIRMED
) &&

262 (
d©aÊag
 == 0))) {

264 
	`Ch™geSídîSètus
(
the_c⁄ãxt
, 
the_membî
, 
RTP_SENDER_PURPORTED
);

270 if(
d©aÊag
 == 1)

271 
the_membî
->
œ°_πp_£nd_time
 = 
√wtime
;

275 
the_membî
->
œ°_£nd_basis_time
 = 
√wtime
;

279 i‡(!
	`SídîLi°In£πMembî
(&
the_c⁄ãxt
->
RTP_SídîLi°
,

280 
the_membî
->
¢dr_li°_lök
)){

282  
FALSE
;

285 i‡(
√w£ndî
 == 1)

286 
	`Inô_RR_Hash
(
the_membî
);

289  
TRUE
;

290 
	}
}

295 
	$SídîTimedOut
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
themembî
,

296 
timevÆ
 
now
){

297 
π˝_£nd_dñay
;

298 
timevÆ
 
£ndî_timeout_öãrvÆ
;

299 
π˝_£nd_dñay
 = 
	`CompuãSídîRTCPSídDñay
(
the_c⁄ãxt
);

301 i‡(
π˝_£nd_dñay
 == 0.0) {

303 
£ndî_timeout_öãrvÆ
 =

304 
	`C⁄vîtDoubÀToTime
(
_RTP_SENDER_MAX_TIMEOUT
);

307 
£ndî_timeout_öãrvÆ
 = 
	`C⁄vîtDoubÀToTime
(
π˝_£nd_dñay
 *

308 
_RTP_SENDER_TIMEOUT
);

311  
	`TimeExpúed
(&
themembî
->
œ°_£nd_basis_time
,

312 &
now
, &
£ndî_timeout_öãrvÆ
);

314 
	}
}

316 
	$PuΩ‹ãdSídîTimedOut
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

317 
membî
 *
themembî
, 
timevÆ
 
now
){

318 
π˝_£nd_dñay
;

319 
timevÆ
 
£ndî_timeout_öãrvÆ
;

320 
π˝_£nd_dñay
 = 
	`CompuãSídîRTCPSídDñay
(
the_c⁄ãxt
);

322 i‡(
π˝_£nd_dñay
 == 0.0) {

324 
£ndî_timeout_öãrvÆ
 =

325 
	`C⁄vîtDoubÀToTime
(
_RTP_PURPORTED_SENDER_MAX_TIMEOUT
);

328 
£ndî_timeout_öãrvÆ
 = 
	`C⁄vîtDoubÀToTime
(
π˝_£nd_dñay
 *

329 
_RTP_PURPORTED_SENDER_TIMEOUT
);

332  
	`TimeExpúed
(&
themembî
->
œ°_£nd_basis_time
,

333 &
now
, &
£ndî_timeout_öãrvÆ
);

335 
	}
}

340 
	$So·TimedOut
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
themembî
,

341 
timevÆ
 
now
){

342 
π˝_£nd_dñay
;

343 
timevÆ
 
so·_timeout_öãrvÆ
;

344 
π˝_£nd_dñay
 = 
	`CompuãRe˚ivîRTCPSídDñay
(
the_c⁄ãxt
);

346 i‡(
π˝_£nd_dñay
 >= 0.0){

347 
so·_timeout_öãrvÆ
 = 
	`C⁄vîtDoubÀToTime
(
π˝_£nd_dñay
 *

348 
_RTP_SOFT_MEMBER_TIMEOUT
);

349  
	`TimeExpúed
(&
themembî
->
œ°_upd©e_time
,

350 &
now
, &
so·_timeout_öãrvÆ
);

355  
FALSE
;

356 
	}
}

363 
	$H¨dTimedOut
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
themembî
,

364 
timevÆ
 
now
){

365 
π˝_£nd_dñay
;

366 
timevÆ
 
h¨d_timeout_öãrvÆ
;

367 
π˝_£nd_dñay
 = 
	`CompuãRe˚ivîRTCPSídDñay
(
the_c⁄ãxt
);

369 i‡(
π˝_£nd_dñay
 >= 0.0){

370 
h¨d_timeout_öãrvÆ
 = 
	`C⁄vîtDoubÀToTime
(
π˝_£nd_dñay
 *

371 
_RTP_SOFT_MEMBER_TIMEOUT
 *

372 
_RTP_HARD_MEMBER_TIMEOUT
);

373  
	`TimeExpúed
(&
themembî
->
œ°_upd©e_time
,

374 &
now
, &
h¨d_timeout_öãrvÆ
);

379  
FALSE
;

380 
	}
}

383 
	$TimeOutPuΩ‹ãdSídîs
(
_RTP_CONTEXT
 *
the_c⁄ãxt
) {

385 
timevÆ
 
now
;

386 
lök
 *
cur_lök
, *
¥ev_lök
;

388 
	`gëtimeofday
(&
now
, 
NULL
);

389 
cur_lök
 = 
the_c⁄ãxt
->
RTP_SídîLi°
.
a˘uÆ_li°
.
œ°_lök
;

390 
cur_lök
 !
NULL
){

394 i‡(!
	`PuΩ‹ãdSídîTimedOut
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
, 
now
)){

398 #ifde‡
_RTP_DEBUG


399 
	`¥ötf
("Member %lxÇoÜongerá sender\n",

400 
cur_lök
->
my_membî
->
s§c
);

403 
¥ev_lök
 = 
cur_lök
->prev_link;

404 
	`SídîLi°PuŒMembî
(&
the_c⁄ãxt
->
RTP_SídîLi°
, 
cur_lök
);

405 
cur_lök
->
my_membî
->
¢dr_li°_lök
 = 
NULL
;

406 
	`Ch™geSídîSètus
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
, 
RTP_SENDER_NOT
);

407 i‡(
cur_lök
->
my_membî
->
loˇl_öfo
 !
NULL
) {

409 
	`‰ì
(
cur_lök
->
my_membî
->
loˇl_öfo
);

410 
cur_lök
->
my_membî
->
loˇl_öfo
 = 
NULL
;

412 
	`Dñëe_RR_Hash
(
cur_lök
->
my_membî
);

413 if(
cur_lök
 =
the_c⁄ãxt
->
RTP_SídîLi°
.
ﬁde°_nŸ_yë_so·
)

414 
the_c⁄ãxt
->
RTP_SídîLi°
.
ﬁde°_nŸ_yë_so·
 = 
¥ev_lök
;

415 
	`‰ì
(
cur_lök
);

416 
cur_lök
 = 
¥ev_lök
;

419 
	}
}

421 
	$TimeOutSídîs
(
_RTP_CONTEXT
 *
the_c⁄ãxt
) {

422 
timevÆ
 
now
;

423 
lök
 *
cur_lök
, *
¥ev_lök
;

425 
	`gëtimeofday
(&
now
, 
NULL
);

426 
cur_lök
 = 
the_c⁄ãxt
->
RTP_SídîLi°
.
ﬁde°_nŸ_yë_so·
;

427 
cur_lök
 !
NULL
){

431 i‡(!
	`SídîTimedOut
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
, 
now
)){

433 } if(
cur_lök
->
my_membî
->
£nd°©us
 =
RTP_SENDER_PURPORTED
) {

434 
cur_lök
 = cur_lök->
¥ev_lök
;

438 #ifde‡
_RTP_DEBUG


439 
	`¥ötf
("Member %lxÇoÜongerá sender\n",

440 
cur_lök
->
my_membî
->
s§c
);

443 
¥ev_lök
 = 
cur_lök
->prev_link;

444 if(
cur_lök
->
my_membî
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
) {

445 
	`Ch™geSídîSètus
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
, 
RTP_SENDER_PURPORTED
);

446 
the_c⁄ãxt
->
RTP_SídîLi°
.
c⁄fúmed_membîs
--;

448 
cur_lök
 = 
¥ev_lök
;

451 
the_c⁄ãxt
->
RTP_SídîLi°
.
ﬁde°_nŸ_yë_so·
 = 
cur_lök
;

453 
	}
}

455 
	$Upd©eMembîshùLi°s
(
_RTP_CONTEXT
 *
the_c⁄ãxt
){

456 
timevÆ
 
now
;

457 
lök
 *
cur_lök
, *
¥ev_lök
;

458 
	`gëtimeofday
(&
now
, 
NULL
);

464 
	`TimeOutPuΩ‹ãdSídîs
(
the_c⁄ãxt
);

465 
	`TimeOutSídîs
(
the_c⁄ãxt
);

473 
cur_lök
 = 
the_c⁄ãxt
->
RTP_MembîLi°
.
a˘uÆ_li°
.
œ°_lök
;

474 
cur_lök
 !
NULL
){

475 
¥ev_lök
 = 
cur_lök
->prev_link;

476 i‡(
cur_lök
->
my_membî
 =
the_c⁄ãxt
->
my_membîöfo
){

479 
cur_lök
 = 
¥ev_lök
;

482 i‡(
cur_lök
->
my_membî
->
⁄_c§c_li°
 =
TRUE
){

484 
cur_lök
 = 
¥ev_lök
;

493 i‡(
	`H¨dTimedOut
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
, 
now
)){

495 
membî
 *
the_membî
 = 
cur_lök
->
my_membî
;

496 
	`RemoveMembî
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
);

497 i‡(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

498 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

499 
the_membî
->
unique_id
,

500 
RTP_FLAG_DELETED_MEMBER
,

501 
NULL
);

503 
	`De°royMembî
(
the_c⁄ãxt
, 
the_membî
);

510 
cur_lök
 = 
¥ev_lök
;

517 
cur_lök
 = 
the_c⁄ãxt
->
RTP_MembîLi°
.
ﬁde°_nŸ_yë_so·
;

519 
cur_lök
 !
NULL
){

520 i‡(
	`So·TimedOut
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
, 
now
)){

522 
¥ev_lök
 = 
cur_lök
->prev_link;

524 i‡(
cur_lök
->
my_membî
 =
the_c⁄ãxt
->
my_membîöfo
){

526 
cur_lök
 = 
¥ev_lök
;

530 if(
cur_lök
->
my_membî
->
⁄_c§c_li°
 =
TRUE
) {

531 
cur_lök
 = 
¥ev_lök
;

535 i‡(
cur_lök
->
my_membî
->
°©us
 =
RTP_MEMBER_CONFIRMED
){

537 
	`Ch™geMembîSètus
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
,

538 
RTP_MEMBER_EXPIRED
);

540 i‡(
cur_lök
->
my_membî
->
°©us
 =
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
) {

542 
	`Ch™geMembîSètus
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
, 
RTP_MEMBER_EXPIRED_CONTRIBUTOR
);

544 i‡((
cur_lök
->
my_membî
->
°©us
 =
RTP_MEMBER_PENDING
) ||

545 (
cur_lök
->
my_membî
->
°©us
 =
RTP_MEMBER_PENDING_CONTRIBUTOR
)) {

546 
membî
 *
the_membî
 = 
cur_lök
->
my_membî
;

549 
	`RemoveMembî
(
the_c⁄ãxt
, 
the_membî
);

550 i‡(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

551 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

552 
the_membî
->
unique_id
,

553 
RTP_FLAG_DELETED_PENDING
,

554 
NULL
);

556 
	`De°royMembî
(
the_c⁄ãxt
, 
the_membî
);

559 
cur_lök
 = 
¥ev_lök
;

570 
the_c⁄ãxt
->
RTP_MembîLi°
.
ﬁde°_nŸ_yë_so·
 = 
cur_lök
;

573 
	}
}

582 
	$RemoveMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
ªmove_me
){

585 i‡(
ªmove_me
->
£nd°©us
 !
RTP_SENDER_NOT
){

587 
	`Dñëe_RR_Hash
(
ªmove_me
);

589 i‡(!
	`SídîLi°PuŒMembî
(&
the_c⁄ãxt
->
RTP_SídîLi°
,

590 
ªmove_me
->
¢dr_li°_lök
)){

591  
FALSE
;

593 
	`‰ì
(
ªmove_me
->
¢dr_li°_lök
);

594 
ªmove_me
->
¢dr_li°_lök
 = 
NULL
;

595 
	`Ch™geSídîSètus
(
the_c⁄ãxt
, 
ªmove_me
, 
RTP_SENDER_NOT
);

598 i‡(
ªmove_me
->
loˇl_öfo
 !
NULL
) {

599 
	`‰ì
(
ªmove_me
->
loˇl_öfo
);

600 
ªmove_me
->
loˇl_öfo
 = 
NULL
;

603 i‡(
ªmove_me
->
unique_id
 == 0){

604  
FALSE
;

608 i‡(!
	`MembîshùLi°PuŒMembî
(&
the_c⁄ãxt
->
RTP_MembîLi°
,

609 
ªmove_me
->
mmbr_li°_lök
)){

610  
FALSE
;

618 
	`‰ì
(
ªmove_me
->
mmbr_li°_lök
);

619 
ªmove_me
->
mmbr_li°_lök
 = 
NULL
;

622 i‡(
ªmove_me
->
s§c_hash
 !
NULL
){

623 
	`RemoveMembîFromSSRCHash
(
the_c⁄ãxt
, 
ªmove_me
);

628  
TRUE
;

629 
	}
}

636 
	$De°royMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
de°roy_me
){

637 
i
;

641 
i
 = 0; i < 
_RTP_NUM_SDES_TYPES
; i++) {

642 i‡(
de°roy_me
->
sdes_öfo
[
i
] !
NULL
) {

643 
	`‰ì
(
de°roy_me
->
sdes_öfo
[
i
]);

647 i‡(
de°roy_me
->
loˇl_öfo
 !
NULL
) {

648 
	`‰ì
(
de°roy_me
->
loˇl_öfo
);

652 
	`CÀ¨_Membî_RRs
(
the_c⁄ãxt
, 
de°roy_me
);

654 i‡(
de°roy_me
->
mmbr_li°_lök
 !
NULL
){

656 
	`MembîshùLi°PuŒMembî
(&(
the_c⁄ãxt
->
RTP_MembîLi°
),

657 
de°roy_me
->
mmbr_li°_lök
);

658 
	`‰ì
(
de°roy_me
->
mmbr_li°_lök
);

661 i‡(
de°roy_me
->
£nd°©us
 !
RTP_SENDER_NOT
){

663 
	`Dñëe_RR_Hash
(
de°roy_me
);

664 
	`SídîLi°PuŒMembî
(&
the_c⁄ãxt
->
RTP_SídîLi°
, 
de°roy_me
->
¢dr_li°_lök
);

665 
	`‰ì
(
de°roy_me
->
¢dr_li°_lök
);

666 
de°roy_me
->
¢dr_li°_lök
 = 
NULL
;

667 
	`Ch™geSídîSètus
(
the_c⁄ãxt
, 
de°roy_me
, 
RTP_SENDER_NOT
);

670 i‡(
de°roy_me
->
s§c_hash
 !
NULL
){

672 
	`RemoveMembîFromSSRCHash
(
the_c⁄ãxt
, 
de°roy_me
);

675 i‡(
de°roy_me
->
unique_id_hash
 !
NULL
){

677 
	`RemoveMembîFromUniqueIDHash
(
the_c⁄ãxt
, 
de°roy_me
);

680 i‡(
de°roy_me
->
˙ame_hash
 !
NULL
){

682 
	`RemoveMembîFromCNAMEHash
(
the_c⁄ãxt
, 
de°roy_me
);

686 i‡(
de°roy_me
->
cﬁlidög
){

687 i‡(
de°roy_me
->
cﬁlides_wôh_√xt
 !
NULL
){

688 
de°roy_me
->
cﬁlides_wôh_√xt
->
cﬁlides_wôh_¥ev
 =

689 
de°roy_me
->
cﬁlides_wôh_¥ev
;

690 i‡(
de°roy_me
->
cﬁlides_wôh_√xt
->
cﬁlides_wôh_¥ev
 =
NULL
 &&

691 
de°roy_me
->
cﬁlides_wôh_√xt
->cﬁlides_wôh_√xà=
NULL
){

692 
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
,

693 
de°roy_me
->
cﬁlides_wôh_√xt
);

694 
de°roy_me
->
cﬁlides_wôh_√xt
->
cﬁlidög
 = 
FALSE
;

697 i‡(
de°roy_me
->
cﬁlides_wôh_¥ev
 !
NULL
){

698 
de°roy_me
->
cﬁlides_wôh_¥ev
->
cﬁlides_wôh_√xt
 =

699 
de°roy_me
->
cﬁlides_wôh_√xt
;

700 i‡(
de°roy_me
->
cﬁlides_wôh_¥ev
->
cﬁlides_wôh_√xt
 =
NULL
 &&

701 
de°roy_me
->
cﬁlides_wôh_¥ev
->cﬁlides_wôh_¥ev =
NULL
){

702 
	`E¡îSSRCHashTabÀ
(
the_c⁄ãxt
,

703 
de°roy_me
->
cﬁlides_wôh_¥ev
);

704 
de°roy_me
->
cﬁlides_wôh_¥ev
->
cﬁlidög
 = 
FALSE
;

711 i‡(
the_c⁄ãxt
->
mo°_ª˚¡_πp_£ndî
 =
de°roy_me
)

712 
the_c⁄ãxt
->
mo°_ª˚¡_πp_£ndî
 = 
NULL
;

713 i‡(
the_c⁄ãxt
->
mo°_ª˚¡_π˝_£ndî
 =
de°roy_me
)

714 
the_c⁄ãxt
->
mo°_ª˚¡_π˝_£ndî
 = 
NULL
;

717 
	`‰ì
(
de°roy_me
);

718  
TRUE
;

719 
	}
}

725 
	$CÀ™Li°
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
doubly_löked_li°
 *
the_li°
){

726 
lök
 *
cur_lök
, *
√xt_lök
;

727 
cur_lök
 = 
the_li°
->
fú°_lök
;

728 
cur_lök
 !
NULL
){

729 
√xt_lök
 = 
cur_lök
->next_link;

730 
	`De°royMembî
(
the_c⁄ãxt
, 
cur_lök
->
my_membî
);

731 
cur_lök
 = 
√xt_lök
;

734 
	}
}

740 
	$CÀ™MembîshùLi°
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membîshù_li°
 *
l
){

741 
	`CÀ™Li°
(
the_c⁄ãxt
, &
l
->
a˘uÆ_li°
);

742 
l
->
c⁄fúmed_membîs
 = 0;

743 
l
->
ﬁde°_nŸ_yë_so·
 = 
NULL
;

744 
	}
}

749 
	$CÀ™Hash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
hash_èbÀ
 *
the_hash
){

750 
i
;

751 
i
=0; i<
HASHSIZE
;i++){

752 
	`CÀ™Li°
(
the_c⁄ãxt
, 
the_hash
->
hashvÆ
 + 
i
);

755 
	}
}

777 
membî
* 
	$Upd©eTimeOrCª©eMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

778 
u_öt32
 
s§c
,

779 
sockaddr
 *
‰omaddr
,

780 
addæí
,

781 
addr_is_π˝
,

782 
membî°©us
 
°©us
){

783 
membî
 *
pkt_‹igö_membî
;

784 
timevÆ
 
tvÆ±r
;

785 
addr_idx
 = (
addr_is_π˝
 != 0);

787 
pkt_‹igö_membî
 = 
	`GëMembîFromSSRCHash
(
the_c⁄ãxt
, 
s§c
);

788 i‡(
pkt_‹igö_membî
==
NULL
){

789 
pkt_‹igö_membî
 = 
	`E°ablishNewMembî
(
the_c⁄ãxt
, 
s§c
, 
NULL
,

790 
‰omaddr
, 
addr_is_π˝
, 
°©us
);

792 i‡(
‰omaddr
->
ß_Ámûy
 !
_RTP_ADDRESS_NOT_YET_KNOWN
) {

796 
pkt_‹igö_membî
->
cﬁlides_wôh_√xt
 !
NULL
) {

797 i‡(
pkt_‹igö_membî
->
my_addr
[
addr_idx
].
ß_Ámûy
 ==

798 
_RTP_ADDRESS_NOT_YET_KNOWN
) {

801 i‡(!
	`FromDif„ª¡Sour˚
(
‰omaddr
,

802 &
pkt_‹igö_membî
->
my_addr
[
addr_idx
],

803 
addæí
)) {

806 
pkt_‹igö_membî
 =Ökt_‹igö_membî->
cﬁlides_wôh_√xt
;

808 i‡(
pkt_‹igö_membî
->
my_addr
[
addr_idx
].
ß_Ámûy
 ==

809 
_RTP_ADDRESS_NOT_YET_KNOWN
) {

810 
pkt_‹igö_membî
->
my_addr
[
addr_idx
] = *
‰omaddr
;

812 i‡(
the_c⁄ãxt
->
Ch™gedMembîSockaddrCÆlBack
 !
NULL
 &&

813 
pkt_‹igö_membî
->
unique_id
 != 0) {

815 
the_c⁄ãxt
->

816 
	`Ch™gedMembîSockaddrCÆlBack
(
the_c⁄ãxt
->
c⁄ãxt_num
,

817 
pkt_‹igö_membî
->
unique_id
,

818 
‰omaddr
,

819 
addr_is_π˝
);

824 
	`gëtimeofday
(&
tvÆ±r
, 
NULL
);

825 
	`Upd©eMembîTime
(
the_c⁄ãxt
, 
pkt_‹igö_membî
, 
tvÆ±r
);

827  
pkt_‹igö_membî
;

828 
	}
}

830 
π≥º‹
 
	$Upd©eMembîInfoBySR
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

831 
π˝_∑ckë
 *
the_∑ckë
,

832 
sockaddr
 *
‰omaddr
,

833 
addæí
) {

834 
membî
 *
pkt_‹igö_membî
;

835 
π˝_ªp‹t_block
 
the_block
;

836 
timevÆ
 
tvÆ±r
;

837 
s§c_ôî
;

839 
	`gëtimeofday
(&
tvÆ±r
, 
NULL
);

841 
pkt_‹igö_membî
 =

842 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
,

843 
the_∑ckë
->
v¨ü¡
.
§
.
§_fixed
->
s§c
,

844 
‰omaddr
, 
addæí
, 
TRUE
, 
RTP_MEMBER_PENDING
);

845 
pkt_‹igö_membî
->
ªcv_πp_cou¡
++;

848 if(((
pkt_‹igö_membî
->
ªcv_πp_cou¡
 > 1) &&

849 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_PENDING
)) ||

850 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_EXPIRED
)){

851 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
pkt_‹igö_membî
,
RTP_MEMBER_CONFIRMED
);

854 
	`Upd©eSídîTime
(
the_c⁄ãxt
, 
pkt_‹igö_membî
, 
tvÆ±r
, 0);

858 
pkt_‹igö_membî
->
¡p_time°amp
.
£cs
 =

859 
the_∑ckë
->
v¨ü¡
.
§
.
§_fixed
->
¡p_£cs
;

860 
pkt_‹igö_membî
->
¡p_time°amp
.
‰ac
 =

861 
the_∑ckë
->
v¨ü¡
.
§
.
§_fixed
->
¡p_‰ac
;

863 
pkt_‹igö_membî
->
πp_time°amp
 =

864 
the_∑ckë
->
v¨ü¡
.
§
.
§_fixed
->
πp_°amp
;

866 
pkt_‹igö_membî
->
pkt_cou¡
 =

867 
the_∑ckë
->
v¨ü¡
.
§
.
§_fixed
->
pkt_cou¡
;

868 
pkt_‹igö_membî
->
o˘_cou¡
 =

869 
the_∑ckë
->
v¨ü¡
.
§
.
§_fixed
->
o˘_cou¡
;

873 
s§c_ôî
=0; s§c_ôî < 
	`RTCP_RC
(*
the_∑ckë
->
comm⁄
); ssrc_iter++) {

874 
membî
 *
ªp‹ãd_£ndî
;

875 
the_block
 = 
	`RTPGëRï‹tBlock
(
the_∑ckë
, 
s§c_ôî
);

881 i‡((
ªp‹ãd_£ndî
 =

882 
	`GëMembîFromSSRCHash
(
the_c⁄ãxt
, 
the_block
.
s§c
)Ë=
NULL
) {

883 
ªp‹ãd_£ndî
 =

884 
	`E°ablishNewMembî
(
the_c⁄ãxt
, 
the_block
.
s§c
,

885 
NULL
, 
‰omaddr
, 
TRUE
, 
RTP_MEMBER_PENDING
);

887 
	`Upd©eSídîTime
(
the_c⁄ãxt
, 
ªp‹ãd_£ndî
, 
tvÆ±r
, 0);

888 
	`Upd©e_RR
(
pkt_‹igö_membî
, 
ªp‹ãd_£ndî
, &
the_block
);

892 
pkt_‹igö_membî
->
œ°_§_ª˚ùt_time
 = 
tvÆ±r
;

894 (
RTP_OK
);

896 
	}
}

897 
π≥º‹
 
	$Upd©eMembîInfoByRR
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

898 
π˝_∑ckë
 *
the_∑ckë
,

899 
sockaddr
 *
‰omaddr
,

900 
addæí
) {

903 
membî
 *
pkt_‹igö_membî
;

904 
π˝_ªp‹t_block
 
the_block
;

905 
timevÆ
 
tvÆ±r
;

906 
s§c_ôî
;

908 
	`gëtimeofday
(&
tvÆ±r
, 
NULL
);

911 
pkt_‹igö_membî
 =

912 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
,

913 
the_∑ckë
->
v¨ü¡
.
º
.
º_fixed
->
s§c
,

914 
‰omaddr
, 
addæí
, 
TRUE
, 
RTP_MEMBER_PENDING
);

915 
pkt_‹igö_membî
->
ªcv_πp_cou¡
++;

918 if(((
pkt_‹igö_membî
->
ªcv_πp_cou¡
 > 1) &&

919 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_PENDING
)) ||

920 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_EXPIRED
)){

921 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
pkt_‹igö_membî
,
RTP_MEMBER_CONFIRMED
);

924 
s§c_ôî
=0; s§c_ôî < 
	`RTCP_RC
(*
the_∑ckë
->
comm⁄
); ssrc_iter++){

925 
membî
 *
ªp‹ãd_£ndî
;

926 
the_block
 = 
	`RTPGëRï‹tBlock
(
the_∑ckë
, 
s§c_ôî
);

932 i‡((
ªp‹ãd_£ndî
 =

933 
	`GëMembîFromSSRCHash
(
the_c⁄ãxt
, 
the_block
.
s§c
)Ë=
NULL
) {

934 
ªp‹ãd_£ndî
 =

935 
	`E°ablishNewMembî
(
the_c⁄ãxt
, 
the_block
.
s§c
, 
NULL
,

936 
‰omaddr
, 
TRUE
, 
RTP_MEMBER_PENDING
);

938 
	`Upd©eSídîTime
(
the_c⁄ãxt
, 
ªp‹ãd_£ndî
, 
tvÆ±r
, 0);

939 
	`Upd©e_RR
(
pkt_‹igö_membî
, 
ªp‹ãd_£ndî
, &
the_block
);

942 (
RTP_OK
);

943 
	}
}

945 
π≥º‹
 
	$Upd©eMembîInfoBySDES
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

946 
π˝_∑ckë
 *
the_∑ckë
,

947 
sockaddr
 *
‰omaddr
,

948 
addæí
) {

951 
membî
 *
pkt_‹igö_membî
 = 
NULL
;

952 
membî
 *
¥ev_membî
;

953 
π˝_sdes_ôem
 
sdes_ôem
;

954 **
membî_ôem
;

955 
the_ôem
[100];

956 
u_öt32
 
cur_s§c
, 
¥ev_s§c
;

957 
timevÆ
 
tvÆ±r
;

958 
s§c_ôî
;

959 
	`gëtimeofday
(&
tvÆ±r
, 
NULL
);

961 i‡(
	`RTCP_RC
(*
the_∑ckë
->
comm⁄
)==0){

962 (
RTP_OK
);

965 
s§c_ôî
 = 0;

966 
sdes_ôem
 = 
	`InôSDESIãmIãr
(
the_∑ckë
);

970 
¥ev_s§c
 = 
sdes_ôem
.
s§c
 + 1;

976 
sdes_ôem
.
ty≥
 != 0 ||

977 
s§c_ôî
 < 
	`RTCP_RC
(*
the_∑ckë
->
comm⁄
)){

981 i‡(
sdes_ôem
.
ty≥
 > 0 && sdes_ôem.ty≥ < 
_RTP_NUM_SDES_TYPES
 + 1){

983 
cur_s§c
 = 
sdes_ôem
.
s§c
;

984 i‡(
cur_s§c
 !
¥ev_s§c
){

988 if(
s§c_ôî
 == 0) {

989 
pkt_‹igö_membî
 =

990 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
, 
cur_s§c
,

991 
‰omaddr
, 
addæí
, 
TRUE
,

992 
RTP_MEMBER_PENDING
);

994 
pkt_‹igö_membî
->
ªcv_πp_cou¡
++;

998 if(((
pkt_‹igö_membî
->
ªcv_πp_cou¡
 > 1) &&

999 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_PENDING
)) ||

1000 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_EXPIRED
)){

1001 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
pkt_‹igö_membî
,
RTP_MEMBER_CONFIRMED
);

1005 
pkt_‹igö_membî
 =

1006 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
, 
cur_s§c
,

1007 
‰omaddr
, 
addæí
, 
TRUE
,

1008 
RTP_MEMBER_PENDING_CONTRIBUTOR
);

1010 
pkt_‹igö_membî
->
ªcv_c§c_cou¡
++;

1014 if(((
pkt_‹igö_membî
->
ªcv_c§c_cou¡
 > 1) &&

1015 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_PENDING_CONTRIBUTOR
)) ||

1016 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_EXPIRED_CONTRIBUTOR
)){

1017 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
pkt_‹igö_membî
,
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
);

1027 
membî_ôem
 = 
pkt_‹igö_membî
->
sdes_öfo
 + 
sdes_ôem
.
ty≥
 - 1;

1028 i‡(*
membî_ôem
 !
NULL
){

1032 i‡(
	`°∫cmp
(*
membî_ôem
, 
sdes_ôem
.
des¸ùti⁄
,

1033 
sdes_ôem
.
Àn
) != 0){

1034 i‡(
sdes_ôem
.
ty≥
 == 1){

1044 #ifde‡
_RTP_DEBUG


1045 
	`¥ötf
("Members with different CNAMEs collide\n");

1048 
pkt_‹igö_membî
->
cﬁlides_wôh_√xt
 !
NULL
){

1049 i‡(
	`°∫cmp
(*
membî_ôem
, 
sdes_ôem
.
des¸ùti⁄
,

1050 
sdes_ôem
.
Àn
) == 0){

1051 (
RTP_OK
);

1053 
pkt_‹igö_membî
 =Ökt_‹igö_membî->
cﬁlides_wôh_√xt
;

1054 
membî_ôem
 = 
pkt_‹igö_membî
->
sdes_öfo
 +

1055 
sdes_ôem
.
ty≥
 - 1;

1059 #ifde‡
_RTP_DEBUG


1060 
	`¥ötf
("Handle1...\n");

1063 
pkt_‹igö_membî
 =

1064 
	`H™dÀSSRCCﬁlisi⁄
(
the_c⁄ãxt
, 
pkt_‹igö_membî
,

1065 
‰omaddr
, 
TRUE
, 
the_ôem
,
s§c_ôî
);

1070 
	`‰ì
(*
membî_ôem
);

1071 *
membî_ôem
 = 
NULL
;

1074 i‡(
sdes_ôem
.
ty≥
 == 1 &&

1075 
‰omaddr
->
ß_Ámûy
 !
_RTP_ADDRESS_NOT_YET_KNOWN
) {

1080 i‡(
pkt_‹igö_membî
->
my_addr
[1].
ß_Ámûy
 ==

1081 
_RTP_ADDRESS_NOT_YET_KNOWN
 ||

1082 
	`FromDif„ª¡Sour˚
(
‰omaddr
, &
pkt_‹igö_membî
->
my_addr
[1],

1083 
addæí
)) {

1084 
pkt_‹igö_membî
->
my_addr
[1] = *
‰omaddr
;

1086 i‡(
the_c⁄ãxt
->
Ch™gedMembîSockaddrCÆlBack
 !
NULL
 &&

1087 
pkt_‹igö_membî
->
unique_id
 != 0) {

1088 
the_c⁄ãxt
->

1089 
	`Ch™gedMembîSockaddrCÆlBack
(
the_c⁄ãxt
->
c⁄ãxt_num
,

1090 
pkt_‹igö_membî
->
unique_id
,

1091 &
pkt_‹igö_membî
->
my_addr
[1],

1092 
TRUE
);

1097 i‡(
sdes_ôem
.
ty≥
 == 1){

1102 
	`°∫˝y
(
the_ôem
, 
sdes_ôem
.
des¸ùti⁄
, sdes_ôem.
Àn
);

1103 
the_ôem
[
sdes_ôem
.
Àn
] = '\0';

1104 
¥ev_membî
 = 
	`GëMembîFromCNAMEHash
(
the_c⁄ãxt
, 
the_ôem
);

1105 i‡(
¥ev_membî
 !
NULL
){

1106 i‡(
¥ev_membî
 =
the_c⁄ãxt
->
my_membîöfo
) {

1111  
	`îr‹debug
(
RTP_PACKET_LOOPBACK
, "UpdateMemberInfoByRTCP",

1113 ()
the_c⁄ãxt
->
c⁄ãxt_num
);

1120 #ifde‡
_RTP_DEBUG


1121 
	`¥ötf
 ("*** GoingÅo merge members... ***\n");

1124 
pkt_‹igö_membî
 =

1125 
	`MîgeMembîs
(
the_c⁄ãxt
, 
¥ev_membî
, 
pkt_‹igö_membî
);

1126 
membî_ôem
 = 
pkt_‹igö_membî
->
sdes_öfo
 + 
sdes_ôem
.
ty≥
 - 1;

1134 i‡(*
membî_ôem
 =
NULL
){

1135 *
membî_ôem
 = 
	`mÆloc
(
sdes_ôem
.
Àn
 + 1);

1136 
	`°∫˝y
(*
membî_ôem
, 
sdes_ôem
.
des¸ùti⁄
, sdes_ôem.
Àn
);

1137 (*
membî_ôem
)[
sdes_ôem
.
Àn
] = '\0';

1138 i‡(
sdes_ôem
.
ty≥
 == 1){

1143 
	`E¡îCNAMEHashTabÀ
(
the_c⁄ãxt
, 
pkt_‹igö_membî
);

1146 if((
s§c_ôî
 == 0) &&

1147 (
pkt_‹igö_membî
->
°©us
 !
RTP_MEMBER_CONFIRMED
)) {

1148 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
pkt_‹igö_membî
,
RTP_MEMBER_CONFIRMED
);

1149 } if(
s§c_ôî
 != 0) {

1151 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
pkt_‹igö_membî
,
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
);

1156 i‡(
the_c⁄ãxt
->
Ch™gedMembîInfoCÆlBack
 !
NULL
) {

1157 
the_c⁄ãxt
->

1158 
	`Ch™gedMembîInfoCÆlBack
(
the_c⁄ãxt
->
c⁄ãxt_num
,

1159 
pkt_‹igö_membî
->
unique_id
,

1160 
sdes_ôem
.
ty≥
, *
membî_ôem
,

1161 
RTP_FLAG_MEMBER_INFO_CHANGES
);

1164 
¥ev_s§c
 = 
cur_s§c
;

1166 (
s§c_ôî
++);

1167 i‡(
s§c_ôî
 < 
	`RTCP_RC
(*
the_∑ckë
->
comm⁄
)){

1168 
sdes_ôem
 = 
	`GëNextIãm
(&sdes_item);

1173 (
RTP_OK
);

1174 
	}
}

1176 
π≥º‹
 
	$Upd©eMembîInfoByBYE
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

1177 
π˝_∑ckë
 *
the_∑ckë
,

1178 
sockaddr
 *
‰omaddr
,

1179 
addæí
) {

1182 
membî
 *
pkt_‹igö_membî
;

1183 
u_öt32
 
cur_s§c
;

1184 
s§c_ôî
;

1185 
i
;

1186 
π˝_bye_block
 
bb
;

1192 
i
 = 0; i < 
the_∑ckë
->
v¨ü¡
.
bye
.
ªas⁄_Àngth
; i++) {

1193 
the_c⁄ãxt
->
byîós⁄
[
i
] = 
the_∑ckë
->
v¨ü¡
.
bye
.
ªas⁄
[i];

1195 
the_c⁄ãxt
->
byîós⁄
[
i
] = '\0';

1198 
s§c_ôî
=0; s§c_ôî < 
	`RTCP_RC
(*
the_∑ckë
->
comm⁄
); ssrc_iter++){

1200 
bb
 = 
	`RTPGëByeBlock
(
the_∑ckë
, 
s§c_ôî
);

1201 
cur_s§c
 = 
bb
.
s§cc§c
;

1203 
pkt_‹igö_membî
 =

1204 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
, 
cur_s§c
,

1205 
‰omaddr
, 
addæí
, 
TRUE
,

1206 
RTP_MEMBER_PENDING
);

1217 i‡(!
pkt_‹igö_membî
->
cﬁlidög
 ||

1218 
pkt_‹igö_membî
->
sdes_öfo
[0] =
NULL
){

1220 
	`RemoveMembî
(
the_c⁄ãxt
, 
pkt_‹igö_membî
);

1222 i‡(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

1223 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

1224 
pkt_‹igö_membî
->
unique_id
,

1225 
RTP_FLAG_MEMBER_LEAVES
,

1226 
the_c⁄ãxt
->
byîós⁄
);

1228 
	`De°royMembî
(
the_c⁄ãxt
, 
pkt_‹igö_membî
);

1232 (
RTP_OK
);

1233 
	}
}

1238 
π≥º‹
 
	$Upd©eMembîInfoByRTCP
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

1239 
π˝_∑ckë
 *
the_∑ckë
,

1240 
sockaddr
 *
‰omaddr
,

1241 
addæí
,

1242 
∑π_ö_compound_pkt
){

1244 
membî
 *
pkt_‹igö_membî
 = 
NULL
;

1245 
π≥º‹
 
îr
;

1246 
timevÆ
 
tvÆ±r
;

1248 
îr
 = 
RTP_OK
;

1249 
	`gëtimeofday
(&
tvÆ±r
, 
NULL
);

1251 #ifde‡
_RTP_DEBUG


1252 
	`¥ötf
("Upd©ög membî infÿf‹Ö¨à%d o‡pkt\n", 
∑π_ö_compound_pkt
);

1255 
the_∑ckë
->
comm⁄
->
±
){

1256 
RTCP_PACKET_SR
:

1257 
îr
 = 
	`Upd©eMembîInfoBySR
(
the_c⁄ãxt
, 
the_∑ckë
, 
‰omaddr
, 
addæí
);

1260 
RTCP_PACKET_RR
:

1261 
îr
 = 
	`Upd©eMembîInfoByRR
(
the_c⁄ãxt
, 
the_∑ckë
, 
‰omaddr
, 
addæí
);

1264 
RTCP_PACKET_SDES
:

1265 
îr
 = 
	`Upd©eMembîInfoBySDES
(
the_c⁄ãxt
, 
the_∑ckë
, 
‰omaddr
, 
addæí
);

1268 
RTCP_PACKET_BYE
:

1269 
îr
 = 
	`Upd©eMembîInfoByBYE
(
the_c⁄ãxt
, 
the_∑ckë
, 
‰omaddr
, 
addæí
);

1272 
RTCP_PACKET_APP
:

1275 
pkt_‹igö_membî
 =

1276 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
,

1277 
the_∑ckë
->
v¨ü¡
.
≠p
.
≠p_fixed
->
s§cc§c
,

1278 
‰omaddr
, 
addæí
, 
TRUE
,

1279 
RTP_MEMBER_PENDING
);

1280 
pkt_‹igö_membî
->
ªcv_πp_cou¡
++;

1284 if(((
pkt_‹igö_membî
->
ªcv_πp_cou¡
 > 1) &&

1285 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_PENDING
)) ||

1286 (
pkt_‹igö_membî
->
°©us
 =
RTP_MEMBER_EXPIRED
)){

1287 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
pkt_‹igö_membî
,
RTP_MEMBER_CONFIRMED
);

1292  
	`îr‹debug
(
RTP_BAD_PACKET_FORMAT
, "UpdateMemberInfoByRTCP",

1294 ()
the_c⁄ãxt
->
c⁄ãxt_num
);

1298 
the_c⁄ãxt
->
mo°_ª˚¡_π˝_£ndî
 = 
pkt_‹igö_membî
;

1301 i‡(
pkt_‹igö_membî
 !
NULL
){

1306 i‡(
∑π_ö_compound_pkt
 == 0) {

1307 
pkt_‹igö_membî
->
π˝_cou¡
++;

1309 
pkt_‹igö_membî
->
œ°_π˝_£nd_time
 = 
tvÆ±r
;

1314 
	`Upd©eMembîshùLi°s
(
the_c⁄ãxt
);

1316  
îr
;

1317 
	}
}

1323 
π≥º‹
 
	$Upd©eMembîInfoByRTP
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

1324 
πp_∑ckë
 *
the_∑ckë
,

1325 
sockaddr
 *
‰omaddr
,

1326 
addæí
){

1327 
u_öt32
 
membî_s§c
 = 
the_∑ckë
->
RTP_hódî
->
s§c
;

1328 
öt32
 
£q_öc
;

1329 
i
;

1330 
timevÆ
 
cuπime
;

1331 
membî
 *
£ndög_membî
;

1332 
cur_jôãr
;

1336 
£ndög_membî
 =

1337 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
, 
membî_s§c
,

1338 
‰omaddr
, 
addæí
, 
FALSE
,

1339 
RTP_MEMBER_PENDING
);

1342 
£ndög_membî
->
ªcv_πp_cou¡
++;

1345 if(((
£ndög_membî
->
ªcv_πp_cou¡
 > 1) &&

1346 (
£ndög_membî
->
°©us
 =
RTP_MEMBER_PENDING
)) ||

1347 (
£ndög_membî
->
°©us
 =
RTP_MEMBER_EXPIRED
)){

1348 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
£ndög_membî
,
RTP_MEMBER_CONFIRMED
);

1352 
	`gëtimeofday
(&
cuπime
, 
NULL
);

1354 
the_c⁄ãxt
->
mo°_ª˚¡_πp_£ndî
 = 
£ndög_membî
;

1356 
	`Upd©eSídîTime
(
the_c⁄ãxt
, 
£ndög_membî
, 
cuπime
,1);

1358 
i
=0; i < 
	`RTP_CC
(*
the_∑ckë
->
RTP_hódî
); i++){

1359 
membî_s§c
 = 
	`RTPPackëGëCSRC
(
the_∑ckë
, 
i
);

1360 
£ndög_membî
 = 
	`Upd©eTimeOrCª©eMembî
(
the_c⁄ãxt
, 
membî_s§c
,

1361 
‰omaddr
, 
addæí
, 
FALSE
,

1362 
RTP_MEMBER_PENDING_CONTRIBUTOR
);

1365 
£ndög_membî
->
ªcv_c§c_cou¡
++;

1370 if(((
£ndög_membî
->
ªcv_c§c_cou¡
 > 1) &&

1371 (
£ndög_membî
->
°©us
 =
RTP_MEMBER_PENDING_CONTRIBUTOR
)) ||

1372 (
£ndög_membî
->
°©us
 =
RTP_MEMBER_EXPIRED_CONTRIBUTOR
)) {

1373 
	`Ch™geMembîSètus
(
the_c⁄ãxt
,
£ndög_membî
,
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
);

1379 i‡(
£ndög_membî
->
loˇl_öfo
 =
NULL
){

1383 
£ndög_membî
->
loˇl_öfo
 = 
	`mÆloc
((
πp_¢dr_loˇl
));

1384 
£ndög_membî
->
loˇl_öfo
->
jôãr
 = -1;

1385 
£ndög_membî
->
loˇl_öfo
->
¥ev_¢dtime
 = 
the_∑ckë
->
RTP_hódî
->
ts
;

1386 
	`gëtimeofday
(&
£ndög_membî
->
loˇl_öfo
->
¥ev_rcvtime
, 
NULL
);

1387 
£ndög_membî
->
loˇl_öfo
->
num_pkts_ªcd
 = 0;

1388 
£ndög_membî
->
loˇl_öfo
->
num_pkts_ªcd_sö˚_œ°
 = 0;

1389 
£ndög_membî
->
loˇl_öfo
->
ex≥˘ed_¥i‹
 = 0;

1390 
£ndög_membî
->
loˇl_öfo
->
fú°_£qno
 =

1391 (
u_öt32
Ë
the_∑ckë
->
RTP_hódî
->
£q
;

1392 
£ndög_membî
->
loˇl_öfo
->
highe°_£qno
 =

1393 
£ndög_membî
->
loˇl_öfo
->
fú°_£qno
;

1394 
£ndög_membî
->
loˇl_öfo
->
ex≥˘ed_¥i‹
 = 0;

1397 
	`gëtimeofday
(&
cuπime
, 
NULL
);

1398 
cur_jôãr
 = 
	`Ábs
((Ë
the_∑ckë
->
RTP_hódî
->
ts
 -

1399 (Ë
£ndög_membî
->
loˇl_öfo
->
¥ev_¢dtime
 -

1400 
	`RTPTimeDiff
(
the_c⁄ãxt
, &
cuπime
,

1401 &
£ndög_membî
->
loˇl_öfo
->
¥ev_rcvtime
,

1402 (
öt8
Ë
	`RTP_PT
(*
the_∑ckë
->
RTP_hódî
)));

1403 i‡(
£ndög_membî
->
loˇl_öfo
->
jôãr
 == -1){

1406 
£ndög_membî
->
loˇl_öfo
->
jôãr
 = 
cur_jôãr
;

1411 
£ndög_membî
->
loˇl_öfo
->
jôãr
 *= 15.0 / 16.0;

1412 
£ndög_membî
->
loˇl_öfo
->
jôãr
 +
cur_jôãr
 / 16.0;

1414 
£ndög_membî
->
loˇl_öfo
->
¥ev_¢dtime
 = 
the_∑ckë
->
RTP_hódî
->
ts
;

1415 
£ndög_membî
->
loˇl_öfo
->
¥ev_rcvtime
 = 
cuπime
;

1418 
£ndög_membî
->
loˇl_öfo
->
num_pkts_ªcd_sö˚_œ°
++;

1419 
£q_öc
 = 
the_∑ckë
->
RTP_hódî
->
£q
 -

1420 (
£ndög_membî
->
loˇl_öfo
->
highe°_£qno
 % 65536);

1421 i‡(
£q_öc
 > 0){

1422 
£ndög_membî
->
loˇl_öfo
->
highe°_£qno
 +
£q_öc
;

1424 i‡(
£q_öc
 < -32768) {

1432 
£ndög_membî
->
loˇl_öfo
->
highe°_£qno
 +(65536 + 
£q_öc
);

1434  
RTP_OK
;

1435 
	}
}

	@rtp_mlist.h

9 #i‚de‡
_MLIST_H


10 
	#_MLIST_H


	)

12 
	~"πp_mli°_öã∫Æ.h
"

13 
	~"πp_≠i_öã∫Æ.h
"

15 
RTP_Membîshù_Inôülize
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

17 
membî
 *
E°ablishNewMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
u_öt32
 
s§c
,

18 * 
u£r_d©a
, 
sockaddr
 *
‰omaddr
,

19 
addr_is_π˝
, 
membî°©us
 
°©us
);

21 
Upd©eMembîTime
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
,

22 
timevÆ
 
√wtime
);

25 
Upd©eSídîTime
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
,

26 
timevÆ
 
√wtime
, 
d©aÊag
);

28 
Upd©eMembîshùLi°s
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

31 
RemoveMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
ªmove_me
);

33 
De°royMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
de°roy_me
);

35 
CÀ™Li°
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
doubly_löked_li°
 *
the_li°
);

37 
CÀ™MembîshùLi°
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membîshù_li°
 *
l
);

39 
CÀ™Hash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
hash_èbÀ
 *
the_hash
);

41 
π≥º‹
 
Upd©eMembîInfoByRTCP
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

42 
π˝_∑ckë
 *
the_∑ckë
,

43 
sockaddr
 *
‰omaddr
,

44 
addæí
,

45 
∑π_ö_compound_pkt
);

47 
π≥º‹
 
Upd©eMembîInfoBySR
 (
_RTP_CONTEXT
 *
the_c⁄ãxt
,

48 
π˝_∑ckë
 *
the_∑ckë
,

49 
sockaddr
 *
‰omaddr
,

50 
addæí
);

52 
π≥º‹
 
Upd©eMembîInfoByRR
 (
_RTP_CONTEXT
 *
the_c⁄ãxt
,

53 
π˝_∑ckë
 *
the_∑ckë
,

54 
sockaddr
 *
‰omaddr
,

55 
addæí
);

57 
π≥º‹
 
Upd©eMembîInfoBySDES
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

58 
π˝_∑ckë
 *
the_∑ckë
,

59 
sockaddr
 *
‰omaddr
,

60 
addæí
);

62 
π≥º‹
 
Upd©eMembîInfoByBYE
 (
_RTP_CONTEXT
 *
the_c⁄ãxt
,

63 
π˝_∑ckë
 *
the_∑ckë
,

64 
sockaddr
 *
‰omaddr
,

65 
addæí
);

68 
π≥º‹
 
Upd©eMembîInfoByRTP
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

69 
πp_∑ckë
 *
the_∑ckë
,

70 
sockaddr
 *
‰omaddr
,

71 
addæí
);

	@rtp_mlist_internal.c

8 
	~"sysdï.h
"

10 
	~"πp_mli°_öã∫Æ.h
"

12 
	~"t˛Hash.h
"

14 #i‚de‡
FALSE


15 
	#FALSE
 0

	)

16 
	#TRUE
 1

	)

20 #ifde‡
_RTP_WATCH_ALLOCATION


21 
	#MAXMALLOCS
 10000

	)

22 
	gmÆl˘r
;

23 
	gmÆlˇŒs
;

24 
	g‰ìˇŒs
;

26 * 
	gmÆœddr
[
MAXMALLOCS
];

27 
	$InôMÆlocs
(){

28 
i
;

29 
i
=0;i<
MAXMALLOCS
;i++){

30 
mÆœddr
[
i
] = 
NULL
;

31 
mÆl˘r
 = 0;

32 
mÆlˇŒs
 = 0;

33 
‰ìˇŒs
 = 0;

35 
	}
}

37 
	$CheckMÆlocs
(){

38 
i
;

39 
mis£d
 = 0;

40 
i
=0;i<
MAXMALLOCS
;i++){

41 i‡(
mÆœddr
[
i
] !
NULL
){

42 
	`¥ötf
("Un‰ìd mem‹y:áŒo¯%d mem‹yÜo¯%p\n", 
i
, 
mÆœddr
[i]);

43 
mis£d
++;

46 
	`¥ötf
("MÆlo¯ªp‹t†%d mis£d fªes\n", 
mis£d
);

47 
	}
}

49 * 
	$my_mÆloc
(
size_t
 
size
){

50 
mÆœddr
[
mÆlˇŒs
] = 
	`mÆloc
(
size
);

51 
mÆl˘r
 +
size
;

52 
	`¥ötf
("ˇŒ %ld: mÆlocög %dáà%p:ÅŸ o‡%ld\n", 
mÆlˇŒs
, 
size
,

53 
mÆœddr
[
mÆlˇŒs
], 
mÆl˘r
);

54 
mÆlˇŒs
++;

55  
mÆœddr
[
mÆlˇŒs
-1];

56 
	}
}

58 * 
	$my_ˇŒoc
(
size_t
 
num
, size_à
size
){

59 
mÆl˘r
 +
size
 * 
num
;

60 
mÆœddr
[
mÆlˇŒs
] = 
	`ˇŒoc
(
num
, 
size
);

61 
	`¥ötf
("ˇŒ %ld: cÆlocög %d o‡%dáà%p:ÅŸ o‡%ld\n", 
mÆlˇŒs
, 
num
,

62 
size
, 
mÆœddr
[
mÆlˇŒs
], 
mÆl˘r
);

63 
mÆlˇŒs
++;

64  
mÆœddr
[
mÆlˇŒs
-1];

65 
	}
}

67 
	$my_‰ì
(* 
to‰ì
){

68 
i
;

69 
i
=0; i < 
MAXMALLOCS
; i++){

70 i‡(
to‰ì
==
mÆœddr
[
i
]){

71 
	`¥ötf
("Fªe: fªeögáŒoˇti⁄ %dáà%p\n", 
i
, 
to‰ì
);

72 
	`‰ì
(
to‰ì
);

73 
mÆœddr
[
i
] = 
NULL
;

77 
	`¥ötf
("Free: Address %p doesÇot show up in mallocÅable\n",

78 
to‰ì
);

80 
	}
}

85 
	$InôLi°
(
doubly_löked_li°
 *
l
){

86 
l
->
fú°_lök
 = 
NULL
;

87 
l
->
œ°_lök
 = 
NULL
;

88 
l
->
li°_size
 = 0;

90 
	}
}

92 
	$InôHashTabÀ
(
hash_èbÀ
 *
h
){

93 
i
;

94 
i
=0; i<
HASHSIZE
;i++){

95 
	`InôLi°
(
h
->
hashvÆ
+
i
);

98 
	}
}

101 
	$PuŒMembî
(
doubly_löked_li°
 *
l
, 
lök
 *
the_lök
){

102 
lök
 *
¥ev
, *
√xt
;

104 i‡(
the_lök
->
ö_li°
 !
l
){

105  
FALSE
;

107 
¥ev
 = 
the_lök
->
¥ev_lök
;

108 
√xt
 = 
the_lök
->
√xt_lök
;

111 
the_lök
->
¥ev_lök
 = 
NULL
;

112 
the_lök
->
√xt_lök
 = 
NULL
;

114 i‡(
¥ev
 !
NULL
){

115 
¥ev
->
√xt_lök
 = 
√xt
;

118 i‡(
√xt
 !
NULL
){

119 
√xt
->
¥ev_lök
 = 
¥ev
;

122 
l
->
li°_size
--;

126 i‡(
l
->
fú°_lök
 =
the_lök
){

127 
l
->
fú°_lök
 = 
√xt
;

129 i‡(
l
->
œ°_lök
 =
the_lök
){

130 
l
->
œ°_lök
 = 
¥ev
;

132 
the_lök
->
ö_li°
 = 
NULL
;

133  
TRUE
;

134 
	}
}

136 
	$Uns‹ãdIn£πMembî
(
doubly_löked_li°
 *
l
,

137 
lök
 *
the_lök
,

138 
lök
 *
¥ev_⁄_li°
){

142 i‡(
the_lök
->
ö_li°
 !
NULL
){

143  
FALSE
;

145 i‡(
¥ev_⁄_li°
 !
NULL
){

146 i‡(
¥ev_⁄_li°
->
ö_li°
 !
l
){

147  
FALSE
;

151 i‡(
¥ev_⁄_li°
 =
NULL
){

152 i‡(
l
->
li°_size
 > 0){

153 
the_lök
->
√xt_lök
 = 
l
->
fú°_lök
;

154 
l
->
fú°_lök
->
¥ev_lök
 = 
the_lök
;

157 
the_lök
->
√xt_lök
 = 
NULL
;

158 
l
->
œ°_lök
 = 
the_lök
;

160 
the_lök
->
¥ev_lök
 = 
NULL
;

161 
l
->
fú°_lök
 = 
the_lök
;

167 
the_lök
->
√xt_lök
 = 
¥ev_⁄_li°
->next_link;

168 
¥ev_⁄_li°
->
√xt_lök
 = 
the_lök
;

169 
the_lök
->
¥ev_lök
 = 
¥ev_⁄_li°
;

172 i‡(
the_lök
->
√xt_lök
 =
NULL
){

173 
l
->
œ°_lök
 = 
the_lök
;

176 
the_lök
->
√xt_lök
->
¥ev_lök
 =Åhe_link;

180 
l
->
li°_size
++;

181 
the_lök
->
ö_li°
 = 
l
;

182  
TRUE
;

183 
	}
}

186 
S‹ãdIn£πMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
doubly_löked_li°
 *
l
,

187 
lök
 *
the_lök
,

188 (*
s‹t_func
)(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

189 
lök
* 
com∑ª_me
,

190 
lök
* 
to_me
),

191 
lök
 *
°¨t_poöt
){

192 
åy_down
 = 
TRUE
;

193 
åy_up
 = 
TRUE
;

195 i‡(
the_lök
->
ö_li°
 !
NULL
){

196  
FALSE
;

198 i‡(
°¨t_poöt
 !
NULL
){

199 i‡(
°¨t_poöt
->
ö_li°
 !
l
){

200  
FALSE
;

205 i‡(
l
->
li°_size
 == 0){

206  
	`Uns‹ãdIn£πMembî
(
l
, 
the_lök
, 
NULL
);

211 i‡(
°¨t_poöt
 =
NULL
){

212 
°¨t_poöt
 = 
l
->
œ°_lök
;

219 
åy_down
 && 
°¨t_poöt
 !
NULL
){

220 i‡((*
s‹t_func
)(
the_c⁄ãxt
, 
the_lök
, 
°¨t_poöt
) < 0){

221 
°¨t_poöt
 = sèπ_poöt->
¥ev_lök
;

223 
åy_up
 = 
FALSE
;

225 
åy_down
 = 
FALSE
;

232 
åy_up
){

233 i‡(
°¨t_poöt
->
√xt_lök
 =
NULL
){

236 
åy_up
 = 
FALSE
;

238 i‡((*
s‹t_func
)(
the_c⁄ãxt
, 
the_lök
, 
°¨t_poöt
->
√xt_lök
) > 0){

239 
°¨t_poöt
 = sèπ_poöt->
√xt_lök
;

241 
åy_up
 = 
FALSE
;

244  
	`Uns‹ãdIn£πMembî
(
l
, 
the_lök
, 
°¨t_poöt
);

245 
	}
}

248 
lök
 *
	$Cª©eLök
(
membî
 *
the_membî
){

249 
lök
 *
√w_lök
;

251 #ifde‡
_RTP_DEBUG


252 
	`¥ötf
("BuûdÜökf‹ membî id %ld, SSRC %lx\n", 
the_membî
->
unique_id
,

253 
the_membî
->
s§c
);

256 
√w_lök
 = 
	`mÆloc
((
lök
));

257 
√w_lök
->
my_membî
 = 
the_membî
;

258 
√w_lök
->
√xt_lök
 = 
NULL
;

259 
√w_lök
->
¥ev_lök
 = 
NULL
;

260 
√w_lök
->
ö_li°
 = 
NULL
;

261  
√w_lök
;

262 
	}
}

273 
	$MembîshùLi°Inô
(
membîshù_li°
 *
l
){

274 
	`InôLi°
(&
l
->
a˘uÆ_li°
);

275 
l
->
ﬁde°_nŸ_yë_so·
 = 
NULL
;

276 
l
->
c⁄fúmed_membîs
 = 0;

277 
	}
}

286 
	$MembîshùLi°PuŒMembî
(
membîshù_li°
 *
l
, 
lök


287 *
the_lök
){

294 i‡(
l
->
ﬁde°_nŸ_yë_so·
 =
the_lök
){

295 
l
->
ﬁde°_nŸ_yë_so·
 = 
the_lök
->
¥ev_lök
;

301 i‡(
the_lök
->
my_membî
->
°©us
 =
RTP_MEMBER_CONFIRMED
){

302 
l
->
c⁄fúmed_membîs
--;

306  
	`PuŒMembî
(&
l
->
a˘uÆ_li°
, 
the_lök
);

307 
	}
}

309 
	$SídîLi°PuŒMembî
(
membîshù_li°
 *
l
, 
lök


310 *
the_lök
){

317 i‡(
l
->
ﬁde°_nŸ_yë_so·
 =
the_lök
){

318 
l
->
ﬁde°_nŸ_yë_so·
 = 
the_lök
->
¥ev_lök
;

324 i‡(
the_lök
->
my_membî
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
){

325 
l
->
c⁄fúmed_membîs
--;

329  
	`PuŒMembî
(&
l
->
a˘uÆ_li°
, 
the_lök
);

330 
	}
}

342 
	$MembîshùLi°In£πMembî
(
membîshù_li°
 *
l
,

343 
lök
 *
the_lök
){

350 i‡(
	`Uns‹ãdIn£πMembî
(&
l
->
a˘uÆ_li°
, 
the_lök
, 
NULL
Ë=
FALSE
){

351  
FALSE
;

357 i‡(
the_lök
->
my_membî
->
°©us
 =
RTP_MEMBER_CONFIRMED
){

358 
l
->
c⁄fúmed_membîs
++;

365 i‡(
l
->
ﬁde°_nŸ_yë_so·
 =
NULL
){

366 
l
->
ﬁde°_nŸ_yë_so·
 = 
the_lök
;

369  
TRUE
;

370 
	}
}

377 
	$SídîLi°In£πMembî
(
membîshù_li°
 *
l
,

378 
lök
 *
the_lök
){

385 i‡(
	`Uns‹ãdIn£πMembî
(&
l
->
a˘uÆ_li°
, 
the_lök
, 
NULL
Ë=
FALSE
){

386  
FALSE
;

392 i‡(
the_lök
->
my_membî
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
){

393 
l
->
c⁄fúmed_membîs
++;

400 i‡(
l
->
ﬁde°_nŸ_yë_so·
 =
NULL
){

401 
l
->
ﬁde°_nŸ_yë_so·
 = 
the_lök
;

404  
TRUE
;

405 
	}
}

408 
	$Ch™geSídîSètus
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

409 
membî
 *
m
, 
£ndî°©us
 
√w_°©us
) {

411 
ˇŒbackf
 = 
RTP_FLAG_NONE
;

414 if(
√w_°©us
 =
RTP_SENDER_CONFIRMED
) {

416 if(
m
->
£nd°©us
 =
RTP_SENDER_NOT
) {

417 
ˇŒbackf
 = 
RTP_FLAG_NEW_SENDER
;

418 } if(
m
->
£nd°©us
 =
RTP_SENDER_PURPORTED
) {

419 
ˇŒbackf
 = 
RTP_FLAG_NEW_SENDER
;

422 if(
√w_°©us
 =
RTP_SENDER_PURPORTED
) {

424 if(
m
->
£nd°©us
 =
RTP_SENDER_NOT
) {

425 
ˇŒbackf
 = 
RTP_FLAG_PURPORTED_SENDER
;

426 } if(
m
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
) {

427 
ˇŒbackf
 = 
RTP_FLAG_EXPIRED_SENDER
;

430 } if(
√w_°©us
 =
RTP_SENDER_NOT
) {

432 if(
m
->
£nd°©us
 =
RTP_SENDER_CONFIRMED
) {

433 
ˇŒbackf
 = 
RTP_FLAG_DELETED_SENDER
;

434 } if(
m
->
£nd°©us
 =
RTP_SENDER_PURPORTED
) {

435 
ˇŒbackf
 = 
RTP_FLAG_DELETED_SENDER
;

440 
m
->
£nd°©us
 = 
√w_°©us
;

441 if(
ˇŒbackf
 !
RTP_FLAG_NONE
) {

442 if(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

443 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

444 
m
->
unique_id
,

445 
ˇŒbackf
,

446 
NULL
);

452 
	}
}

458 
	$Ch™geMembîSètus
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

459 
membî
 *
m
, 
membî°©us
 
√w_°©us
){

460 
membîshù_li°
 *
the_li°
 = &
the_c⁄ãxt
->
RTP_MembîLi°
;

465 if((
√w_°©us
 =
RTP_MEMBER_CONFIRMED
) &&

466 (
m
->
°©us
 !
RTP_MEMBER_CONFIRMED
))

467 
the_li°
->
c⁄fúmed_membîs
++;

469 if((
√w_°©us
 !
RTP_MEMBER_CONFIRMED
) &&

470 (
m
->
°©us
 =
RTP_MEMBER_CONFIRMED
))

471 
the_li°
->
c⁄fúmed_membîs
--;

475 i‡(
m
->
mmbr_li°_lök
 !
NULL
){

477 if((
√w_°©us
 =
RTP_MEMBER_CONFIRMED
) ||

478 (
√w_°©us
 =
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
)) {

480 i‡((
m
->
°©us
 =
RTP_MEMBER_PENDING
) ||

481 (
m
->
°©us
 =
RTP_MEMBER_PENDING_CONTRIBUTOR
)) {

483 
m
->
°©us
 = 
√w_°©us
;

484 if(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

485 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

486 
m
->
unique_id
,

487 
RTP_FLAG_MEMBER_CONFIRMED
,

488 
NULL
);

491 i‡((
m
->
°©us
 =
RTP_MEMBER_EXPIRED
) ||

492 (
m
->
°©us
 =
RTP_MEMBER_EXPIRED_CONTRIBUTOR
)) {

494 
m
->
°©us
 = 
√w_°©us
;

495 if(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

496 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

497 
m
->
unique_id
,

498 
RTP_FLAG_MEMBER_ALIVE
,

499 
NULL
);

503 } if((
√w_°©us
 =
RTP_MEMBER_EXPIRED
) ||

504 (
√w_°©us
 =
RTP_MEMBER_EXPIRED_CONTRIBUTOR
)) {

506 i‡((
m
->
°©us
 =
RTP_MEMBER_CONFIRMED
) ||

507 (
m
->
°©us
 =
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
)) {

508 
m
->
°©us
 = 
√w_°©us
;

509 if(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

510 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

511 
m
->
unique_id
,

512 
RTP_FLAG_EXPIRED_MEMBER
,

513 
NULL
);

517 i‡((
m
->
°©us
 =
RTP_MEMBER_PENDING
) ||

518 (
m
->
°©us
 =
RTP_MEMBER_PENDING_CONTRIBUTOR
)) {

519 
m
->
°©us
 = 
√w_°©us
;

520 if(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

521 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

522 
m
->
unique_id
,

523 
RTP_FLAG_EXPIRED_MEMBER
,

524 
NULL
);

528 } if((
√w_°©us
 =
RTP_MEMBER_PENDING
) ||

529 (
√w_°©us
 =
RTP_MEMBER_PENDING_CONTRIBUTOR
)) {

532 i‡((
m
->
°©us
 =
RTP_MEMBER_CONFIRMED
) ||

533 (
m
->
°©us
 =
RTP_MEMBER_CONFIRMED_CONTRIBUTOR
)) {

534 
m
->
°©us
 = 
√w_°©us
;

538 i‡((
m
->
°©us
 =
RTP_MEMBER_EXPIRED
) ||

539 (
m
->
°©us
 =
RTP_MEMBER_EXPIRED_CONTRIBUTOR
)) {

540 
m
->
°©us
 = 
√w_°©us
;

541 if(
the_c⁄ãxt
->
Upd©eMembîCÆlBack
 !
NULL
){

542 
the_c⁄ãxt
->
	`Upd©eMembîCÆlBack
—he_c⁄ãxt->
c⁄ãxt_num
,

543 
m
->
unique_id
,

544 
RTP_FLAG_MEMBER_ALIVE
,

545 
NULL
);

552 
m
->
°©us
 = 
√w_°©us
;

554 
	}
}

566 
CÀ™Hash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
hash_èbÀ
 *
the_hash
);

568 
	$InôSSRCHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
)

570 
	`InôHashTabÀ
(&
the_c⁄ãxt
->
RTP_SSRC_Hash
);

571 
	}
}

574 
	$DñëeSSRCHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
)

576 
	`CÀ™Hash
(
the_c⁄ãxt
, &the_c⁄ãxt->
RTP_SSRC_Hash
);

577 
	}
}

580 
	$E¡îSSRCHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
){

581 
öto_li°
;

582 
hash_èbÀ
 *
the_èbÀ
 = &
the_c⁄ãxt
->
RTP_SSRC_Hash
;

583 i‡(
the_membî
->
s§c_hash
 !
NULL
){

585 #ifde‡
_RTP_DEBUG


586 
	`¥ötf
("Hey! I've been hashed\n");

589  
FALSE
;

591 
öto_li°
 = (Ë(
the_membî
->
s§c
 % 
HASHSIZE
);

593 
the_membî
->
s§c_hash
 = 
	`Cª©eLök
(the_member);

594 i‡(!
	`Uns‹ãdIn£πMembî
(
the_èbÀ
->
hashvÆ
+
öto_li°
,

595 
the_membî
->
s§c_hash
,

596 
NULL
)){

597  
FALSE
;

599  
TRUE
;

600 
	}
}

605 
membî
 *
	$GëMembîFromSSRCHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
u_öt32
 
s§c
){

606 
öto_li°
 = (Ë(
s§c
 % 
HASHSIZE
);

607 
hash_èbÀ
 *
the_èbÀ
 = &
the_c⁄ãxt
->
RTP_SSRC_Hash
;

608 
lök
 *
cur_lök
 = 
the_èbÀ
->
hashvÆ
[
öto_li°
].
fú°_lök
;

609 
cur_lök
 !
NULL
){

610 i‡(
s§c
 =
cur_lök
->
my_membî
->ssrc){

611  
cur_lök
->
my_membî
;

613 
cur_lök
 = cur_lök->
√xt_lök
;

615  
NULL
;

616 
	}
}

620 
RemoveMembîFromSSRCHash
(
ARG_UNUSED
(
_RTP_CONTEXT
*, 
the_c⁄ãxt
),

621 
membî
 *
the_membî
){

622 
lök
 *
	glök_to_de°roy
 = 
the_membî
->
s§c_hash
;

623 i‡(!
PuŒMembî
(
lök_to_de°roy
->
ö_li°
,Üink_to_destroy)){

624  
	gFALSE
;

626 
	gthe_membî
->
	gs§c_hash
 = 
NULL
;

627 
‰ì
(
lök_to_de°roy
);

628  
	gTRUE
;

634 
	$InôUniqueIDHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
)

636 
	`InôHashTabÀ
(&
the_c⁄ãxt
->
RTP_ID_Hash
);

637 
	}
}

640 
	$DñëeUniqueIDHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
)

642 
	`CÀ™Hash
(
the_c⁄ãxt
, &the_c⁄ãxt->
RTP_ID_Hash
);

643 
	}
}

646 
	$E¡îUniqueIDHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
){

647 
öto_li°
;

648 
hash_èbÀ
 *
the_èbÀ
 = &
the_c⁄ãxt
->
RTP_ID_Hash
;

649 i‡(
the_membî
->
unique_id_hash
 !
NULL
){

650  
FALSE
;

652 
öto_li°
 = (Ë(
the_membî
->
unique_id
 % 
HASHSIZE
);

653 
the_membî
->
unique_id_hash
 = 
	`Cª©eLök
(the_member);

654 
	`Uns‹ãdIn£πMembî
(
the_èbÀ
->
hashvÆ
+
öto_li°
,

655 
the_membî
->
unique_id_hash
,

656 
NULL
);

657  
TRUE
;

658 
	}
}

663 
membî
 *
	$GëMembîFromUniqueIDHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
≥rs⁄
 
id
){

664 
öto_li°
;

665 
hash_èbÀ
 *
the_èbÀ
 = &
the_c⁄ãxt
->
RTP_ID_Hash
;

666 
lök
 *
cur_lök
;

667 
	`Rem≠Pîs⁄
(
the_c⁄ãxt
, &
id
);

668 
öto_li°
 = (Ë(
id
 % 
HASHSIZE
);

669 
cur_lök
 = 
the_èbÀ
->
hashvÆ
[
öto_li°
].
fú°_lök
;

672 
cur_lök
 !
NULL
){

673 i‡(
id
 =
cur_lök
->
my_membî
->
unique_id
){

674  
cur_lök
->
my_membî
;

676 
cur_lök
 = cur_lök->
√xt_lök
;

678  
NULL
;

679 
	}
}

683 
RemoveMembîFromUniqueIDHash
(
ARG_UNUSED
(
_RTP_CONTEXT
 *,
the_c⁄ãxt
),

684 
membî
 *
the_membî
){

685 
lök
 *
	glök_to_de°roy
 = 
the_membî
->
unique_id_hash
;

686 i‡(!
PuŒMembî
(
lök_to_de°roy
->
ö_li°
,Üink_to_destroy)){

687  
	gFALSE
;

689 
	gthe_membî
->
	gunique_id_hash
 = 
NULL
;

690 
‰ì
(
lök_to_de°roy
);

691  
	gTRUE
;

697 
	$InôCNAMEHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
)

699 
	`InôHashTabÀ
(&
the_c⁄ãxt
->
RTP_CNAME_Hash
);

700 
	}
}

703 
	$DñëeCNAMEHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
)

705 
	`CÀ™Hash
(
the_c⁄ãxt
, &the_c⁄ãxt->
RTP_CNAME_Hash
);

706 
	}
}

709 
	$HashOnName
(*
the_«me
){

710 
öto_li°
 = 0;

711 
i
;

712 
i
=0; i < 
	`°æí
(
the_«me
); i++){

713 
öto_li°
 *= 33;

714 
öto_li°
 +
the_«me
[
i
];

716  (0x3FF & 
öto_li°
);

717 
	}
}

719 
	$E¡îCNAMEHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
){

720 
hash_èbÀ
 *
the_èbÀ
 = &
the_c⁄ãxt
->
RTP_CNAME_Hash
;

721 *
˙ame
 = 
the_membî
->
sdes_öfo
[0];

722 
öto_li°
;

723 i‡(
the_membî
->
˙ame_hash
 !
NULL
){

724  
FALSE
;

726 i‡(
˙ame
==
NULL
){

732 
öto_li°
 = 0;

734 
öto_li°
 = 
	`HashOnName
(
˙ame
);

735 
the_membî
->
˙ame_hash
 = 
	`Cª©eLök
(the_member);

736 
	`Uns‹ãdIn£πMembî
(
the_èbÀ
->
hashvÆ
+
öto_li°
,

737 
the_membî
->
˙ame_hash
,

738 
NULL
);

739  
TRUE
;

740 
	}
}

744 
membî
 *
	$GëMembîFromCNAMEHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, *
˙ame
){

745 
öto_li°
 = 
	`HashOnName
(
˙ame
);

746 
hash_èbÀ
 *
the_èbÀ
 = &
the_c⁄ãxt
->
RTP_CNAME_Hash
;

747 
lök
 *
cur_lök
;

748 
cur_lök
 = 
the_èbÀ
->
hashvÆ
[
öto_li°
].
fú°_lök
;

749 
cur_lök
 !
NULL
){

750 i‡(
cur_lök
->
my_membî
->
sdes_öfo
[0] !
NULL
){

751 i‡(
	`°rcmp
(
˙ame
, 
cur_lök
->
my_membî
->
sdes_öfo
[0])==0){

752  
cur_lök
->
my_membî
;

755 
cur_lök
 = cur_lök->
√xt_lök
;

757  
NULL
;

758 
	}
}

762 
RemoveMembîFromCNAMEHash
(
ARG_UNUSED
(
_RTP_CONTEXT
*, 
the_c⁄ãxt
),

763 
membî
 *
the_membî
){

764 
lök
 *
	glök_to_de°roy
 = 
the_membî
->
˙ame_hash
;

765 i‡(!
PuŒMembî
(
lök_to_de°roy
->
ö_li°
,Üink_to_destroy)){

766  
	gFALSE
;

768 
	gthe_membî
->
	g˙ame_hash
 = 
NULL
;

769 
‰ì
(
lök_to_de°roy
);

770  
	gTRUE
;

810 
	$Inô_RR_Hash
(
membî
 *
the_membî
)

812 
T˛_HashTabÀ
 *
the_èbÀ
 = &
the_membî
->
RR_Hash
;

814 
	`T˛_InôHashTabÀ
(
the_èbÀ
, 
TCL_ONE_WORD_KEYS
);

815 
	}
}

818 
	$Dñëe_RR_Hash
(
membî
 *
the_membî
)

820 
T˛_HashTabÀ
 *
the_èbÀ
 = &
the_membî
->
RR_Hash
;

821 
T˛_HashE¡ry
 *
the_íåy
;

822 
T˛_HashSórch
 
the_£¨ch
;

824 
the_íåy
 = 
	`T˛_Fú°HashE¡ry
(
the_èbÀ
, &
the_£¨ch
);

825 
the_íåy
 !
NULL
) {

826 
	`‰ì
(
	`T˛_GëHashVÆue
(
the_íåy
));

827 
the_íåy
 = 
	`T˛_NextHashE¡ry
(&
the_£¨ch
);

830 
	`T˛_DñëeHashTabÀ
(
the_èbÀ
);

831 
	}
}

837 
ª˚ivî_ªp‹t
 *
	$Upd©e_RR
(
membî
 *
ªp‹ãr
, membî *
£ndî
,

838 
π˝_ªp‹t_block
 *
the_block
)

840 
T˛_HashE¡ry
 *
the_íåy
;

841 
ª˚ivî_ªp‹t
 *
the_öfo
;

842 
¸óãd
;

843 
T˛_HashTabÀ
 *
the_èbÀ
 = &
£ndî
->
RR_Hash
;

845 i‡(
the_block
->
s§c
 !
£ndî
->ssrc) {

846 #ifde‡
_RTP_DEBUG


847 
	`Ârötf
(
°dîr
, "Update_RR: block ssrc != sender ssrc\n");

849  
NULL
;

852 i‡(
£ndî
->
£nd°©us
 =
RTP_SENDER_NOT
) {

854  
NULL
;

857 
the_íåy
 = 
	`T˛_Cª©eHashE¡ry
(
the_èbÀ
, (*Ë
ªp‹ãr
->
unique_id
,

858 &
¸óãd
);

859 i‡(
¸óãd
) {

860 
the_öfo
 = (
ª˚ivî_ªp‹t
 *Ë
	`mÆloc
((receiver_report));

861 
the_öfo
->
ªp‹ãr
 =Ñï‹ãr->
unique_id
;

862 
	`T˛_SëHashVÆue
(
the_íåy
, (
Clõ¡D©a
Ë
the_öfo
);

864 
the_öfo
 = (
ª˚ivî_ªp‹t
 *Ë
	`T˛_GëHashVÆue
(
the_íåy
);

868 
the_öfo
->
‰a˘i⁄_lo°
 = 
the_block
->
‰ac_lo°
;

869 
the_öfo
->
cum_lo°
 = 
the_block
->cum_lost;

870 
the_öfo
->
highe°_£qno
 = 
the_block
->highest_seqno;

871 
the_öfo
->
jôãr
 = 
the_block
->jitter;

872 
the_öfo
->
œ°_§
 = 
the_block
->
l§
;

873 
the_öfo
->
dñay_œ°_§
 = 
the_block
->
dl§
;

875  
the_öfo
;

876 
	}
}

881 
	$CÀ¨_Membî_RRs
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
)

883 
lök
 *
cur_lök
;

884 
T˛_HashTabÀ
 *
the_èbÀ
;

885 
T˛_HashE¡ry
 *
the_íåy
;

887 
cur_lök
 = 
the_c⁄ãxt
->
RTP_SídîLi°
.
a˘uÆ_li°
.
fú°_lök
;

889 
cur_lök
 !
NULL
) {

890 
the_èbÀ
 = &
cur_lök
->
my_membî
->
RR_Hash
;

891 
the_íåy
 = 
	`T˛_FödHashE¡ry
(
the_èbÀ
, (*Ë
the_membî
->
unique_id
);

892 i‡(
the_íåy
 !
NULL
) {

893 
	`‰ì
(
	`T˛_GëHashVÆue
(
the_íåy
));

894 
	`T˛_DñëeHashE¡ry
(
the_íåy
);

896 
cur_lök
 = cur_lök->
√xt_lök
;

898 
	}
}

900 
	$Mîge_RRs
(
ª˚ivî_ªp‹t
 *
¥ev_§
,Ñe˚ivî_ªp‹à*
√w_§
){

902 
¥ev_§
->
‰a˘i⁄_lo°
 = 
√w_§
->fraction_lost;

903 
¥ev_§
->
cum_lo°
 +
√w_§
->cum_lost;

904 i‡(
¥ev_§
->
highe°_£qno
 < 
√w_§
->highest_seqno){

905 
¥ev_§
->
highe°_£qno
 = 
√w_§
->highest_seqno;

907 i‡(
¥ev_§
->
œ°_§
 < 
√w_§
->last_sr){

908 
¥ev_§
->
œ°_§
 = 
√w_§
->last_sr;

911 
	}
}

913 
	$Mîge_RR_Hashes
(
membî
* 
¥ev_membî
, membî *
√w_membî
)

915 
T˛_HashTabÀ
 *
¥ev_èbÀ
 = &
¥ev_membî
->
RR_Hash
;

916 
T˛_HashTabÀ
 *
√w_èbÀ
 = &
√w_membî
->
RR_Hash
;

917 
T˛_HashE¡ry
 *
¥ev_íåy
, *
√w_íåy
;

918 
T˛_HashSórch
 
the_£¨ch
;

919 
ª˚ivî_ªp‹t
 *
¥ev_öfo
, *
√w_öfo
;

920 
¸óãd
;

922 
√w_íåy
 = 
	`T˛_Fú°HashE¡ry
(
√w_èbÀ
, &
the_£¨ch
);

923 
√w_íåy
 !
NULL
) {

924 
¥ev_íåy
 = 
	`T˛_Cª©eHashE¡ry
(
¥ev_èbÀ
,

925 
	`T˛_GëHashKey
(
√w_èbÀ
, 
√w_íåy
),

926 &
¸óãd
);

927 i‡(
¸óãd
) {

928 
¥ev_öfo
 = (
ª˚ivî_ªp‹t
 *Ë
	`mÆloc
((receiver_report));

929 
	`T˛_SëHashVÆue
(
¥ev_íåy
, (
Clõ¡D©a
Ë
¥ev_öfo
);

930 
√w_öfo
 = (
ª˚ivî_ªp‹t
 *Ë
	`T˛_GëHashVÆue
(
√w_íåy
);

931 
	`mem˝y
(
¥ev_öfo
, 
√w_öfo
, (
ª˚ivî_ªp‹t
));

933 
¥ev_öfo
 = (
ª˚ivî_ªp‹t
 *Ë
	`T˛_GëHashVÆue
(
¥ev_íåy
);

934 
√w_öfo
 = (
ª˚ivî_ªp‹t
 *Ë
	`T˛_GëHashVÆue
(
√w_íåy
);

935 
	`Mîge_RRs
(
¥ev_öfo
, 
√w_öfo
);

938 
√w_íåy
 = 
	`T˛_NextHashE¡ry
(&
the_£¨ch
);

942 
	}
}

952 
	$∑nic
(*
f‹m©
, ...)

954 
va_li°
 
¨gs
;

956 
	`va_°¨t
(
¨gs
, 
f‹m©
);

957 
	`vÂrötf
(
°dîr
, 
f‹m©
, 
¨gs
);

958 
	`va_íd
(
¨gs
);

959 
	`Ârötf
(
°dîr
, "\n");

960 
	`ab‹t
();

961 
	}
}

	@rtp_mlist_internal.h

9 #i‚de‡
_MLIST_INTERNAL_H


10 
	#_MLIST_INTERNAL_H


	)

12 
	~"t˛Hash.h
"

13 
	~"sysdï.h
"

34 
	#_RTP_NUM_SDES_TYPES
 12

	)

39 
	#_RTP_MAX_IP_ADDR_SIZE
 16

	)

41 #ifde‡
HAVE_SYS_TIME_H


42 
	~<sys/time.h
>

45 
	~"πp_≠i.h
"

73 
	mjôãr
;

77 
u_öt32
 
	m¥ev_¢dtime
;

81 
timevÆ
 
	m¥ev_rcvtime
;

85 
u_öt32
 
	mnum_pkts_ªcd_sö˚_œ°
;

89 
u_öt32
 
	mnum_pkts_ªcd
;

93 
u_öt32
 
	mfú°_£qno
;

97 
u_öt32
 
	mhighe°_£qno
;

101 
u_öt32
 
	mex≥˘ed_¥i‹
;

102 } 
	tπp_¢dr_loˇl
;

104 
	glök
;

106 
	smmbr
 {

112 
≥rs⁄
 
	munique_id
;

116 
u_öt32
 
	ms§c
;

128 
timevÆ
 
	mœ°_upd©e_time
;

129 
timevÆ
 
	mœ°_πp_£nd_time
;

130 
timevÆ
 
	mœ°_π˝_£nd_time
;

131 
timevÆ
 
	mœ°_£nd_basis_time
;

134 
membî°©us
 
	m°©us
;

138 
£ndî°©us
 
	m£nd°©us
;

143 
timevÆ
 
	mœ°_§_ª˚ùt_time
;

147 * 
	mu£r_d©a
;

155 
	mcﬁlidög
;

159 
mmbr
 *
	mcﬁlides_wôh_√xt
;

160 
mmbr
 *
	mcﬁlides_wôh_¥ev
;

165 
sockaddr
 
	mmy_addr
[2];

170 *
	msdes_öfo
[
_RTP_NUM_SDES_TYPES
];

177 
u_öt32
 
	mπp_time°amp
;

178 
¡p64
 
	m¡p_time°amp
;

179 
u_öt32
 
	mpkt_cou¡
;

180 
u_öt32
 
	mo˘_cou¡
;

183 
πp_¢dr_loˇl
 *
	mloˇl_öfo
;

186 
T˛_HashTabÀ
 
	mRR_Hash
;

190 
u_öt32
 
	mªcv_πp_cou¡
;

195 
u_öt32
 
	mªcv_c§c_cou¡
;

205 
u_öt32
 
	mπ˝_cou¡
;

210 
	m⁄_c§c_li°
;

218 
lök
 *
	mmmbr_li°_lök
;

222 
lök
 *
	m¢dr_li°_lök
;

226 
lök
 *
	ms§c_hash
;

229 
lök
 *
	munique_id_hash
;

232 
lök
 *
	m˙ame_hash
;

234 } 
	tmembî
;

237 
	gdŒ
;

239 
	slök
 {

244 
membî
 *
	mmy_membî
;

245 
lök
 *
	m√xt_lök
;

246 
lök
 *
	m¥ev_lök
;

247 
dŒ
 *
	mö_li°
;

250 
	sdŒ
 {

252 
lök
 *
	mfú°_lök
;

253 
lök
 *
	mœ°_lök
;

254 
	mli°_size
;

255 } 
	tdoubly_löked_li°
;

263 
doubly_löked_li°
 
	ma˘uÆ_li°
;

264 
lök
 *
	mﬁde°_nŸ_yë_so·
;

265 
	mc⁄fúmed_membîs
;

266 } 
	tmembîshù_li°
;

268 
	#HASHSIZE
 1024

	)

274 
doubly_löked_li°
 
	mhashvÆ
[
HASHSIZE
];

275 } 
	thash_èbÀ
;

278 
	~"πp_≠i_öã∫Æ.h
"

282 
InôLi°
(
doubly_löked_li°
 *
l
);

288 
lök
 *
Cª©eLök
(
membî
 *
the_membî
);

293 
PuŒMembî
(
doubly_löked_li°
 *
l
, 
lök
 *
the_lök
);

300 
Uns‹ãdIn£πMembî
(
doubly_löked_li°
 *
l
,

301 
lök
 *
the_lök
,

302 
lök
 *
¥ev_⁄_li°
);

313 
S‹ãdIn£πMembî
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
doubly_löked_li°
 *
l
,

314 
lök
 *
the_lök
,

315 (*
s‹t_func
)(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

316 
lök
* 
com∑ª_me
,

317 
lök
* 
to_me
),

318 
lök
 *
°¨t_poöt
);

326 
	`MembîshùLi°Inô
(
membîshù_li°
 *
l
);

328 
	`MembîshùLi°PuŒMembî
(
membîshù_li°
 *
l
, 
lök
 *
the_lök
);

329 
	`SídîLi°PuŒMembî
(
membîshù_li°
 *
l
, 
lök
 *
the_lök
);

331 
	`MembîshùLi°In£πMembî
(
membîshù_li°
 *
l
,

332 
lök
 *
the_lök
);

333 
	`SídîLi°In£πMembî
(
membîshù_li°
 *
l
,

334 
lök
 *
the_lök
);

336 
	`Ch™geMembîSètus
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

337 
membî
 *
m
, 
membî°©us
 
√w_°©us
);

338 
	`Ch™geSídîSètus
(
_RTP_CONTEXT
 *
the_c⁄ãxt
,

339 
membî
 *
m
, 
£ndî°©us
 
√w_°©us
);

348 
	`InôSSRCHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

349 
	`DñëeSSRCHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

350 
	`E¡îSSRCHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
);

351 
membî
 *
	`GëMembîFromSSRCHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
u_öt32
 
s§c
);

352 
	`RemoveMembîFromSSRCHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
);

354 
	`InôUniqueIDHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

355 
	`DñëeUniqueIDHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

356 
	`E¡îUniqueIDHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
);

357 
membî
 *
	`GëMembîFromUniqueIDHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
≥rs⁄
 
unique_id
);

358 
	`RemoveMembîFromUniqueIDHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
);

360 
	`InôCNAMEHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

361 
	`DñëeCNAMEHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
);

362 
	`E¡îCNAMEHashTabÀ
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
);

363 
membî
 *
	`GëMembîFromCNAMEHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, * 
˙ame
);

364 
	`RemoveMembîFromCNAMEHash
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
);

370 
	`Inô_RR_Hash
(
membî
 *
the_membî
);

371 
	`Dñëe_RR_Hash
(
membî
 *
the_membî
);

372 
ª˚ivî_ªp‹t
 *
	`Upd©e_RR
(
membî
 *
ªp‹ãr
, membî *
£ndî
,

373 
π˝_ªp‹t_block
 *
the_block
);

374 
	`CÀ¨_Membî_RRs
(
_RTP_CONTEXT
 *
the_c⁄ãxt
, 
membî
 *
the_membî
);

375 
	`Mîge_RR_Hashes
(
membî
* 
¥ev_membî
, membî *
√w_membî
);

379 #ifde‡
_RTP_WATCH_ALLOCATION


381 * 
	`my_mÆloc
(
size_t
 
size
);

382 * 
	`my_ˇŒoc
(
size_t
 
num
, size_à
size
);

383 
	`my_‰ì
(* 
to‰ì
);

385 
	#mÆloc
(
size
Ë
	`my_mÆloc
(size)

	)

386 
	#ˇŒoc
(
num
, 
size
Ë
	`my_ˇŒoc
“um, size)

	)

387 
	#‰ì
(
to‰ì
Ë
	`my_‰ì
—o‰ì)

	)

	@rtp_unix.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~"πp_unix.h
"

10 
	~"πp_≠i.h
"

11 
	~"sysdï.h
"

12 
	~<uni°d.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/sockë.h
>

15 
	~<sys/∑øm.h
>

16 
	~<√töë/ö.h
>

17 
	~<¨∑/öë.h
>

18 
	~<sys/uio.h
>

19 
	~<√tdb.h
>

20 
	~<sys/ut¢ame.h
>

21 
	~<sys/time.h
>

22 
	~<î∫o.h
>

25 
u_l⁄g
 
md_32
(*
°rög
, 
Àngth
);

26 
sockty≥
 
	$_sys_¸óã_sockë
(
ty≥
) {

27 
skt
;

29 
skt
 = 
	`sockë
(
AF_INET
, 
ty≥
, 0);

31 if(
skt
 == -1)

32 (
_SYS_INVALID_SOCKET
);

34 (
skt
);

36 
	}
}

38 
	$_sys_˛o£_sockë
(
sockty≥
 
skt
) {

40 
îr
;

41 
îr
 = 
	`˛o£
(
skt
);

42 if(
îr
 == -1)

43 (
_SYS_SOCKET_ERROR
);

46 
	}
}

48 
	$_sys_c⁄√˘_sockë
(
sockty≥
 
skt
, 
sockaddr_ö
 *
ß
) {

50 
îr
;

52 
îr
 = 
	`c⁄√˘
(
skt
,

53 (
sockaddr
 *Ë
ß
,

54 (
sockaddr_ö
));

56 if(
îr
 == -1)

57 (
_SYS_SOCKET_ERROR
);

60 
	}
}

62 
	$_sys_£t_âl
(
sockty≥
 
skt
, 
âl
) {

64 
öt8
 
…é
;

65 
nRë
;

67 
…é
 = (
öt8
Ë
âl
;

69 
nRë
 = 
	`£tsock›t
(
skt
,

70 
IPPROTO_IP
,

71 
IP_MULTICAST_TTL
,

72 (*Ë&
…é
,

73 (
öt8
));

75 if(
nRë
 == -1)

76 (
_SYS_SOCKET_ERROR
);

79 
	}
}

81 
	$_sys_gë_sockë_«me
(
sockty≥
 
skt
, 
sockaddr_ö
 *
ß
) {

83 
Àn
;

84 
ªt
;

86 
Àn
 = (
sockaddr
);

87 
ªt
 = 
	`gësock«me
(
skt
, (
sockaddr
 *Ë
ß
, &
Àn
);

88 if(
ªt
 == -1)

89 (
_SYS_SOCKET_ERROR
);

92 
	}
}

94 
	$_sys_£t_ªu£addr
(
sockty≥
 
skt
) {

95 
îr
;

96 
⁄e
;

98 
⁄e
 = 1;

99 
îr
 = 
	`£tsock›t
(
skt
,

100 
SOL_SOCKET
,

101 
SO_REUSEADDR
,

102 (*Ë&
⁄e
,

103 (
⁄e
));

105 if(
îr
 < 0)

106 (
_SYS_SOCKET_ERROR
);

108 
	}
}

110 
	$_sys_£t_ªu£p‹t
(
sockty≥
 
skt
) {

112 
îr
,
⁄e
;

114 
⁄e
 = 1;

115 #ifde‡
SO_REUSEPORT


116 
îr
 = 
	`£tsock›t
(
skt
,

117 
SOL_SOCKET
,

118 
SO_REUSEPORT
,

119 (*Ë&
⁄e
,

120 (
⁄e
));

122 
îr
 = 0;

125 if(
îr
 < 0)

126 (
_SYS_SOCKET_ERROR
);

130 
	}
}

132 
	$_sys_böd
(
sockty≥
 
skt
, 
sockaddr_ö
 *
ß
) {

134 
nRë
;

136 
nRë
 = 
	`böd
 (
skt
,

137 (
sockaddr
 *Ë
ß
,

138 (
sockaddr
));

140 if(
nRë
 == -1) {

142 
nRë
 = 
î∫o
;

143 if(
nRë
 =
EADDRINUSE
)

144 (
_SYS_SOCKET_ADDRINUSE
);

145 if(
nRë
 =
EADDRNOTAVAIL
)

146 (
_SYS_SOCKET_ADDRNOTAVAIL
);

147 (
_SYS_SOCKET_ERROR
);

150 
	}
}

152 
	$_sys_joö_mˇ°_group
(
sockty≥
 
πpskt
, 
sockaddr_ö
 *
ß
) {

153 
ù_mªq
 
mªq
;

154 
îr
;

156 
mªq
.
imr_mu…üddr
 = 
ß
->
sö_addr
;

157 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
INADDR_ANY
;

159 
îr
 = 
	`£tsock›t
(
πpskt
,

160 
IPPROTO_IP
,

161 
IP_ADD_MEMBERSHIP
,

162 (*Ë&
mªq
,

163 (
ù_mªq
));

167 if(
îr
 < 0)

168 (
_SYS_SOCKET_ERROR
);

170 
	}
}

173 
	$_sys_£ndmsg
(
sockty≥
 
s
, 
msghdr
 *
m
, 
f
) {

174 
cou¡
;

176 
cou¡
 = 
	`£ndmsg
(
s
, 
m
, 
f
);

177 (
cou¡
);

178 
	}
}

180 
	$_sys_£nd
(
sockty≥
 
skt
, *
buf
, 
buÊí
, 
Êags
) {

181 
ªs
;

183 
ªs
 = 
	`£nd
(
skt
, 
buf
, 
buÊí
, 
Êags
);

184 (
ªs
);

185 
	}
}

187 
	$_sys_ªcv‰om
(
sockty≥
 
skt
, *
buf
, 
Àn
, 
Êags
, 
sockaddr
 *
‰om
, *
Æí
) {

189 
ªs
;

191 
ªs
 = 
	`ªcv‰om
(
skt
,

192 
buf
,

193 
Àn
,

194 
Êags
,

195 
‰om
,

196 
Æí
);

198 (
ªs
);

199 
	}
}

204 
	$IsMu…iˇ°
(
ö_addr
 
addr
){

205 
haddr
;

207 
haddr
 = 
	`¡ohl
(
addr
.
s_addr
);

208 if(((
haddr
 >> 28) & 0xf) == 0xe)

212 
	}
}

214 #ifde‡
_RTP_SEMI_RANDOM


216 
u_öt32
 
	$øndom32
(
ty≥
){

217  
	`ønd
();

218 
	}
}

221 
u_öt32
 
	$øndom32
(
ty≥
)

224 
ty≥
;

225 
timevÆ
 
tv
;

226 
˛ock_t
 
˝u
;

227 
pid_t
 
pid
;

228 
u_l⁄g
 
hid
;

229 
uid_t
 
uid
;

230 
gid_t
 
gid
;

231 
ut¢ame
 
«me
;

232 } 
s
;

234 
	`gëtimeofday
(&
s
.
tv
, 0);

235 
	`u«me
(&
s
.
«me
);

236 
s
.
ty≥
 =Åype;

237 
s
.
˝u
 = 
	`˛ock
();

238 
s
.
pid
 = 
	`gëpid
();

239 
s
.
hid
 = 
	`gëho°id
();

240 
s
.
uid
 = 
	`gëuid
();

241 
s
.
gid
 = 
	`gëgid
();

242  
	`md_32
((*)&
s
, (s));

244 
	}
}

	@rtp_unix.h

1 #i‚de‡
_RTP_UNIX_H


2 
	#_RTP_UNIX_H


	)

4 #i‚de‡
SOCKTYPE_DEFINED


5 
	tsockty≥
;

6 
	#SOCKTYPE_DEFINED


	)

9 
	~<sys/ty≥s.h
>

10 
	~<sys/sockë.h
>

11 
	~<sys/∑øm.h
>

12 
	~<√töë/ö.h
>

13 
	~<¨∑/öë.h
>

14 
	~<sys/uio.h
>

15 
	~<√tdb.h
>

17 
	~<sys/ut¢ame.h
>

18 
	~<sys/time.h
>

20 
	#_SYS_INVALID_SOCKET
 -1

	)

21 
	#_SYS_SOCKET_ERROR
 -1

	)

22 
	#_SYS_SOCKET_ADDRINUSE
 -2

	)

23 
	#_SYS_SOCKET_ADDRNOTAVAIL
 -3

	)

25 
sockty≥
 
_sys_¸óã_sockë
(
ty≥
);

26 
_sys_˛o£_sockë
(
sockty≥
 
skt
);

27 
_sys_c⁄√˘_sockë
(
sockty≥
 
skt
, 
sockaddr_ö
 *
ß
);

28 
_sys_£t_âl
(
sockty≥
 
skt
, 
âl
);

29 
_sys_gë_sockë_«me
(
sockty≥
 
skt
, 
sockaddr_ö
 *
ß
);

30 
_sys_£t_ªu£addr
(
sockty≥
 
skt
);

31 
_sys_£t_ªu£p‹t
(
sockty≥
 
skt
);

32 
_sys_böd
(
sockty≥
 
πpskt
, 
sockaddr_ö
 *
ß
);

33 
_sys_joö_mˇ°_group
(
sockty≥
 
πpskt
, 
sockaddr_ö
 *
ß
);

34 
_sys_£ndmsg
(
sockty≥
 
s
, 
msghdr
 *
m
, 
f
);

35 
_sys_£nd
(
sockty≥
 
skt
, *
buf
, 
buÊí
, 
Êags
);

36 
_sys_ªcv‰om
(
sockty≥
 
skt
, *
buf
, 
Àn
, 
Êags
, 
sockaddr
 *
‰om
, *
Æí
);

	@sysdep.h

3 #i‚de‡
_SYSDEP_H


4 
	#_SYSDEP_H


	)

6 #ifde‡
HAVE_CONFIG_H


7 
	~<c⁄fig.h
>

10 #i‡
HAVE_STRING_H


11 
	~<°rög.h
>

13 
	~<°rögs.h
>

14 
	~<mem‹y.h
>

16 #i‡
HAVE_STDLIB_H


17 
	~<°dlib.h
>

18 #ñi‡
HAVE_MALLOC_H


19 
	~<mÆloc.h
>

22 #i‡
TIME_WITH_SYS_TIME


23 
	~<sys/time.h
>

24 
	~<time.h
>

26 #i‡
HAVE_SYS_TIME_H


27 
	~<sys/time.h
>

29 
	~<time.h
>

32 #i‡
HAVE_UNISTD_H


33 
	~<uni°d.h
>

36 
	~<°dio.h
>

37 
	~<î∫o.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<m©h.h
>

40 
	~<°d¨g.h
>

42 #ifde‡
__unix


43 
	~<sys/sockë.h
>

45 
	~<√töë/ö.h
>

49 #ifde‡
WIN32


50 
	~<wösock2.h
>

51 
gëtimeofday
(
timevÆ
 *
ç
, *
unu£d
);

52 
dønd48
();

53 
§™d48
(
sv
);

56 #ifde‡
__GNUC__


57 
	#ARG_UNUSED
(
t
, 
v
Ëàv 
	`__©åibuã__
((
unu£d
))

	)

60 
	#ARG_UNUSED
(
t
, 
v
Ëà
	)
v

66 
	#_RTP_ADDRESS_NOT_YET_KNOWN
 (
AF_MAX
 + 1)

	)

	@tclHash.c

23 
	~"sysdï.h
"

24 
	~"t˛Hash.h
"

31 
	#REBUILD_MULTIPLIER
 3

	)

42 
	#RANDOM_INDEX
(
èbÀPå
, 
i
) \

43 (((((Ë(
i
))*1103515245Ë>> (
èbÀPå
)->
downShi·
Ë& (èbÀPå)->
mask
)

	)

49 
T˛_HashE¡ry
 * 
AºayFöd
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

50 
CONST
 *
key
));

51 
T˛_HashE¡ry
 * 
AºayCª©e
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

52 
CONST
 *
key
, *
√wPå
));

53 
T˛_HashE¡ry
 * 
BogusFöd
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

54 
CONST
 *
key
));

55 
T˛_HashE¡ry
 * 
BogusCª©e
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

56 
CONST
 *
key
, *
√wPå
));

57 
HashSåög
 
_ANSI_ARGS_
((
CONST
 *
°rög
));

58 
RebuûdTabÀ
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
));

59 
T˛_HashE¡ry
 * 
SåögFöd
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

60 
CONST
 *
key
));

61 
T˛_HashE¡ry
 * 
SåögCª©e
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

62 
CONST
 *
key
, *
√wPå
));

63 
T˛_HashE¡ry
 * 
O√W‹dFöd
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

64 
CONST
 *
key
));

65 
T˛_HashE¡ry
 * 
O√W‹dCª©e
 
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

66 
CONST
 *
key
, *
√wPå
));

87 
	$T˛_InôHashTabÀ
(
èbÀPå
, 
keyTy≥
)

88 
T˛_HashTabÀ
 *
èbÀPå
;

90 
keyTy≥
;

94 
èbÀPå
->
buckës
 =ÅabÀPå->
°©icBuckës
;

95 
èbÀPå
->
°©icBuckës
[0] =ÅablePtr->staticBuckets[1] = 0;

96 
èbÀPå
->
°©icBuckës
[2] =ÅablePtr->staticBuckets[3] = 0;

97 
èbÀPå
->
numBuckës
 = 
TCL_SMALL_HASH_TABLE
;

98 
èbÀPå
->
numE¡rõs
 = 0;

99 
èbÀPå
->
ªbuûdSize
 = 
TCL_SMALL_HASH_TABLE
*
REBUILD_MULTIPLIER
;

100 
èbÀPå
->
downShi·
 = 28;

101 
èbÀPå
->
mask
 = 3;

102 
èbÀPå
->
keyTy≥
 = keyType;

103 i‡(
keyTy≥
 =
TCL_STRING_KEYS
) {

104 
èbÀPå
->
födProc
 = 
SåögFöd
;

105 
èbÀPå
->
¸óãProc
 = 
SåögCª©e
;

106 } i‡(
keyTy≥
 =
TCL_ONE_WORD_KEYS
) {

107 
èbÀPå
->
födProc
 = 
O√W‹dFöd
;

108 
èbÀPå
->
¸óãProc
 = 
O√W‹dCª©e
;

110 
èbÀPå
->
födProc
 = 
AºayFöd
;

111 
èbÀPå
->
¸óãProc
 = 
AºayCª©e
;

113 
	}
}

135 
	$T˛_DñëeHashE¡ry
(
íåyPå
)

136 
T˛_HashE¡ry
 *
íåyPå
;

138 
T˛_HashE¡ry
 *
¥evPå
;

140 i‡(*
íåyPå
->
buckëPå
 ==ÉntryPtr) {

141 *
íåyPå
->
buckëPå
 =É¡ryPå->
√xtPå
;

143 
¥evPå
 = *
íåyPå
->
buckëPå
; ;ÖªvPå =ÖªvPå->
√xtPå
) {

144 i‡(
¥evPå
 =
NULL
) {

145 
	`∑nic
("malformed bucket chain in Tcl_DeleteHashEntry");

147 i‡(
¥evPå
->
√xtPå
 =
íåyPå
) {

148 
¥evPå
->
√xtPå
 = 
íåyPå
->nextPtr;

153 
íåyPå
->
èbÀPå
->
numE¡rõs
--;

154 
	`ck‰ì
((*Ë
íåyPå
);

155 
	}
}

175 
	$T˛_DñëeHashTabÀ
(
èbÀPå
)

176 
T˛_HashTabÀ
 *
èbÀPå
;

178 
T˛_HashE¡ry
 *
hPå
, *
√xtPå
;

179 
i
;

185 
i
 = 0; i < 
èbÀPå
->
numBuckës
; i++) {

186 
hPå
 = 
èbÀPå
->
buckës
[
i
];

187 
hPå
 !
NULL
) {

188 
√xtPå
 = 
hPå
->nextPtr;

189 
	`ck‰ì
((*Ë
hPå
);

190 
hPå
 = 
√xtPå
;

198 i‡(
èbÀPå
->
buckës
 !èbÀPå->
°©icBuckës
) {

199 
	`ck‰ì
((*Ë
èbÀPå
->
buckës
);

207 
èbÀPå
->
födProc
 = 
BogusFöd
;

208 
èbÀPå
->
¸óãProc
 = 
BogusCª©e
;

209 
	}
}

233 
T˛_HashE¡ry
 *

234 
	$T˛_Fú°HashE¡ry
(
èbÀPå
, 
£¨chPå
)

235 
T˛_HashTabÀ
 *
èbÀPå
;

236 
T˛_HashSórch
 *
£¨chPå
;

239 
£¨chPå
->
èbÀPå
 =ÅablePtr;

240 
£¨chPå
->
√xtIndex
 = 0;

241 
£¨chPå
->
√xtE¡ryPå
 = 
NULL
;

242  
	`T˛_NextHashE¡ry
(
£¨chPå
);

243 
	}
}

264 
T˛_HashE¡ry
 *

265 
	$T˛_NextHashE¡ry
(
£¨chPå
)

266 
T˛_HashSórch
 *
£¨chPå
;

271 
T˛_HashE¡ry
 *
hPå
;

273 
£¨chPå
->
√xtE¡ryPå
 =
NULL
) {

274 i‡(
£¨chPå
->
√xtIndex
 >£¨chPå->
èbÀPå
->
numBuckës
) {

275  
NULL
;

277 
£¨chPå
->
√xtE¡ryPå
 =

278 
£¨chPå
->
èbÀPå
->
buckës
[£¨chPå->
√xtIndex
];

279 
£¨chPå
->
√xtIndex
++;

281 
hPå
 = 
£¨chPå
->
√xtE¡ryPå
;

282 
£¨chPå
->
√xtE¡ryPå
 = 
hPå
->
√xtPå
;

283  
hPå
;

284 
	}
}

306 
	$T˛_HashSèts
(
èbÀPå
)

307 
T˛_HashTabÀ
 *
èbÀPå
;

309 
	#NUM_COUNTERS
 10

	)

310 
cou¡
[
NUM_COUNTERS
], 
ovîÊow
, 
i
, 
j
;

311 
avîage
, 
tmp
;

312 
T˛_HashE¡ry
 *
hPå
;

313 *
ªsu…
, *
p
;

319 
i
 = 0; i < 
NUM_COUNTERS
; i++) {

320 
cou¡
[
i
] = 0;

322 
ovîÊow
 = 0;

323 
avîage
 = 0.0;

324 
i
 = 0; i < 
èbÀPå
->
numBuckës
; i++) {

325 
j
 = 0;

326 
hPå
 = 
èbÀPå
->
buckës
[
i
]; hPå !
NULL
; hPå = hPå->
√xtPå
) {

327 
j
++;

329 i‡(
j
 < 
NUM_COUNTERS
) {

330 
cou¡
[
j
]++;

332 
ovîÊow
++;

334 
tmp
 = 
j
;

335 
avîage
 +(
tmp
+1.0)*—mp/
èbÀPå
->
numE¡rõs
)/2.0;

342 
ªsu…
 = (*Ë
	`ckÆloc
((Ë((
NUM_COUNTERS
*60) + 300));

343 
	`•rötf
(
ªsu…
, "%dÉntries inÅable, %d buckets\n",

344 
èbÀPå
->
numE¡rõs
,ÅabÀPå->
numBuckës
);

345 
p
 = 
ªsu…
 + 
	`°æí
(result);

346 
i
 = 0; i < 
NUM_COUNTERS
; i++) {

347 
	`•rötf
(
p
, "number of buckets with %dÉntries: %d\n",

348 
i
, 
cou¡
[i]);

349 
p
 +
	`°æí
(p);

351 
	`•rötf
(
p
, "number of buckets with %d or moreÉntries: %d\n",

352 
NUM_COUNTERS
, 
ovîÊow
);

353 
p
 +
	`°æí
(p);

354 
	`•rötf
(
p
, "avîagê£¨ch di°™˚ f‹É¡ry: %.1f", 
avîage
);

355  
ªsu…
;

356 
	}
}

377 
	$HashSåög
(
°rög
)

378 
CONST
 *
°rög
;

380 
ªsu…
;

381 
c
;

399 
ªsu…
 = 0;

401 
c
 = *
°rög
;

402 
°rög
++;

403 i‡(
c
 == 0) {

406 
ªsu…
 +‘esu…<<3Ë+ 
c
;

408  
ªsu…
;

409 
	}
}

429 
T˛_HashE¡ry
 *

430 
	$SåögFöd
(
èbÀPå
, 
key
)

431 
T˛_HashTabÀ
 *
èbÀPå
;

432 
CONST
 *
key
;

434 
T˛_HashE¡ry
 *
hPå
;

435 
CONST
 *
p1
, *
p2
;

436 
ödex
;

438 
ödex
 = 
	`HashSåög
(
key
Ë& 
èbÀPå
->
mask
;

444 
hPå
 = 
èbÀPå
->
buckës
[
ödex
]; hPå !
NULL
;

445 
hPå
 = hPå->
√xtPå
) {

446 
p1
 = 
key
, 
p2
 = 
hPå
->key.
°rög
; ;Ö1++,Ö2++) {

447 i‡(*
p1
 !*
p2
) {

450 i‡(*
p1
 == '\0') {

451  
hPå
;

455  
NULL
;

456 
	}
}

479 
T˛_HashE¡ry
 *

480 
	$SåögCª©e
(
èbÀPå
, 
key
, 
√wPå
)

481 
T˛_HashTabÀ
 *
èbÀPå
;

482 
CONST
 *
key
;

484 *
√wPå
;

487 
T˛_HashE¡ry
 *
hPå
;

488 
CONST
 *
p1
, *
p2
;

489 
ödex
;

491 
ödex
 = 
	`HashSåög
(
key
Ë& 
èbÀPå
->
mask
;

497 
hPå
 = 
èbÀPå
->
buckës
[
ödex
]; hPå !
NULL
;

498 
hPå
 = hPå->
√xtPå
) {

499 
p1
 = 
key
, 
p2
 = 
hPå
->key.
°rög
; ;Ö1++,Ö2++) {

500 i‡(*
p1
 !*
p2
) {

503 i‡(*
p1
 == '\0') {

504 *
√wPå
 = 0;

505  
hPå
;

514 *
√wPå
 = 1;

515 
hPå
 = (
T˛_HashE¡ry
 *Ë
	`ckÆloc
(()

516 ((
T˛_HashE¡ry
Ë+ 
	`°æí
((*)
key
Ë- ((
hPå
->key) -1)));

517 
hPå
->
èbÀPå
 =ÅablePtr;

518 
hPå
->
buckëPå
 = &(
èbÀPå
->
buckës
[
ödex
]);

519 
hPå
->
√xtPå
 = *hPå->
buckëPå
;

520 
hPå
->
˛õ¡D©a
 = 0;

521 
	`°r˝y
(
hPå
->
key
.
°rög
, (*)key);

522 *
hPå
->
buckëPå
 = hPtr;

523 
èbÀPå
->
numE¡rõs
++;

530 i‡(
èbÀPå
->
numE¡rõs
 >èbÀPå->
ªbuûdSize
) {

531 
	`RebuûdTabÀ
(
èbÀPå
);

533  
hPå
;

534 
	}
}

554 
T˛_HashE¡ry
 *

555 
	$O√W‹dFöd
(
èbÀPå
, 
key
)

556 
T˛_HashTabÀ
 *
èbÀPå
;

557 
CONST
 *
key
;

559 
T˛_HashE¡ry
 *
hPå
;

560 
ödex
;

562 
ödex
 = 
	`RANDOM_INDEX
(
èbÀPå
, 
key
);

568 
hPå
 = 
èbÀPå
->
buckës
[
ödex
]; hPå !
NULL
;

569 
hPå
 = hPå->
√xtPå
) {

570 i‡(
hPå
->
key
.
⁄eW‹dVÆue
 == key) {

571  
hPå
;

574  
NULL
;

575 
	}
}

598 
T˛_HashE¡ry
 *

599 
	$O√W‹dCª©e
(
èbÀPå
, 
key
, 
√wPå
)

600 
T˛_HashTabÀ
 *
èbÀPå
;

601 
CONST
 *
key
;

603 *
√wPå
;

606 
T˛_HashE¡ry
 *
hPå
;

607 
ödex
;

609 
ödex
 = 
	`RANDOM_INDEX
(
èbÀPå
, 
key
);

615 
hPå
 = 
èbÀPå
->
buckës
[
ödex
]; hPå !
NULL
;

616 
hPå
 = hPå->
√xtPå
) {

617 i‡(
hPå
->
key
.
⁄eW‹dVÆue
 == key) {

618 *
√wPå
 = 0;

619  
hPå
;

627 *
√wPå
 = 1;

628 
hPå
 = (
T˛_HashE¡ry
 *Ë
	`ckÆloc
((Tcl_HashEntry));

629 
hPå
->
èbÀPå
 =ÅablePtr;

630 
hPå
->
buckëPå
 = &(
èbÀPå
->
buckës
[
ödex
]);

631 
hPå
->
√xtPå
 = *hPå->
buckëPå
;

632 
hPå
->
˛õ¡D©a
 = 0;

633 
hPå
->
key
.
⁄eW‹dVÆue
 = (*) key;

634 *
hPå
->
buckëPå
 = hPtr;

635 
èbÀPå
->
numE¡rõs
++;

642 i‡(
èbÀPå
->
numE¡rõs
 >èbÀPå->
ªbuûdSize
) {

643 
	`RebuûdTabÀ
(
èbÀPå
);

645  
hPå
;

646 
	}
}

666 
T˛_HashE¡ry
 *

667 
	$AºayFöd
(
èbÀPå
, 
key
)

668 
T˛_HashTabÀ
 *
èbÀPå
;

669 
CONST
 *
key
;

671 
T˛_HashE¡ry
 *
hPå
;

672 *
¨øyPå
 = (*Ë
key
;

673 *
iPå1
, *
iPå2
;

674 
ödex
, 
cou¡
;

676 
ödex
 = 0, 
cou¡
 = 
èbÀPå
->
keyTy≥
, 
iPå1
 = 
¨øyPå
;

677 
cou¡
 > 0; cou¡--, 
iPå1
++) {

678 
ödex
 +*
iPå1
;

680 
ödex
 = 
	`RANDOM_INDEX
(
èbÀPå
, index);

686 
hPå
 = 
èbÀPå
->
buckës
[
ödex
]; hPå !
NULL
;

687 
hPå
 = hPå->
√xtPå
) {

688 
iPå1
 = 
¨øyPå
, 
iPå2
 = 
hPå
->
key
.
w‹ds
,

689 
cou¡
 = 
èbÀPå
->
keyTy≥
; ; cou¡--, 
iPå1
++, 
iPå2
++) {

690 i‡(
cou¡
 == 0) {

691  
hPå
;

693 i‡(*
iPå1
 !*
iPå2
) {

698  
NULL
;

699 
	}
}

722 
T˛_HashE¡ry
 *

723 
	$AºayCª©e
(
èbÀPå
, 
key
, 
√wPå
)

724 
T˛_HashTabÀ
 *
èbÀPå
;

725 
CONST
 *
key
;

727 *
√wPå
;

730 
T˛_HashE¡ry
 *
hPå
;

731 *
¨øyPå
 = (*Ë
key
;

732 *
iPå1
, *
iPå2
;

733 
ödex
, 
cou¡
;

735 
ödex
 = 0, 
cou¡
 = 
èbÀPå
->
keyTy≥
, 
iPå1
 = 
¨øyPå
;

736 
cou¡
 > 0; cou¡--, 
iPå1
++) {

737 
ödex
 +*
iPå1
;

739 
ödex
 = 
	`RANDOM_INDEX
(
èbÀPå
, index);

745 
hPå
 = 
èbÀPå
->
buckës
[
ödex
]; hPå !
NULL
;

746 
hPå
 = hPå->
√xtPå
) {

747 
iPå1
 = 
¨øyPå
, 
iPå2
 = 
hPå
->
key
.
w‹ds
,

748 
cou¡
 = 
èbÀPå
->
keyTy≥
; ; cou¡--, 
iPå1
++, 
iPå2
++) {

749 i‡(
cou¡
 == 0) {

750 *
√wPå
 = 0;

751  
hPå
;

753 i‡(*
iPå1
 !*
iPå2
) {

763 *
√wPå
 = 1;

764 
hPå
 = (
T˛_HashE¡ry
 *Ë
	`ckÆloc
(() ((Tcl_HashEntry)

765 + (
èbÀPå
->
keyTy≥
*()) - 4));

766 
hPå
->
èbÀPå
 =ÅablePtr;

767 
hPå
->
buckëPå
 = &(
èbÀPå
->
buckës
[
ödex
]);

768 
hPå
->
√xtPå
 = *hPå->
buckëPå
;

769 
hPå
->
˛õ¡D©a
 = 0;

770 
iPå1
 = 
¨øyPå
, 
iPå2
 = 
hPå
->
key
.
w‹ds
, 
cou¡
 = 
èbÀPå
->
keyTy≥
;

771 
cou¡
 > 0; cou¡--, 
iPå1
++, 
iPå2
++) {

772 *
iPå2
 = *
iPå1
;

774 *
hPå
->
buckëPå
 = hPtr;

775 
èbÀPå
->
numE¡rõs
++;

782 i‡(
èbÀPå
->
numE¡rõs
 >èbÀPå->
ªbuûdSize
) {

783 
	`RebuûdTabÀ
(
èbÀPå
);

785  
hPå
;

786 
	}
}

807 
T˛_HashE¡ry
 *

808 
BogusFöd
(
ARG_UNUSED
(
T˛_HashTabÀ
*, 
èbÀPå
),

809 
	$ARG_UNUSED
(
CONST
 *, 
key
))

813 
	`∑nic
("called Tcl_FindHashEntry on deletedÅable");

814  
NULL
;

815 
	}
}

836 
T˛_HashE¡ry
 *

837 
BogusCª©e
(
ARG_UNUSED
(
T˛_HashTabÀ
 *, 
èbÀPå
),

838 
ARG_UNUSED
(
CONST
 *, 
key
),

839 
	$ARG_UNUSED
(*, 
√wPå
))

846 
	`∑nic
("called Tcl_CreateHashEntry on deletedÅable");

847  
NULL
;

848 
	}
}

871 
	$RebuûdTabÀ
(
èbÀPå
)

872 
T˛_HashTabÀ
 *
èbÀPå
;

874 
ﬁdSize
, 
cou¡
, 
ödex
;

875 
T˛_HashE¡ry
 **
ﬁdBuckës
;

876 
T˛_HashE¡ry
 **
ﬁdChaöPå
, **
√wChaöPå
;

877 
T˛_HashE¡ry
 *
hPå
;

879 
ﬁdSize
 = 
èbÀPå
->
numBuckës
;

880 
ﬁdBuckës
 = 
èbÀPå
->
buckës
;

887 
èbÀPå
->
numBuckës
 *= 4;

888 
èbÀPå
->
buckës
 = (
T˛_HashE¡ry
 **Ë
	`ckÆloc
(()

889 (
èbÀPå
->
numBuckës
 * (
T˛_HashE¡ry
 *)));

890 
cou¡
 = 
èbÀPå
->
numBuckës
, 
√wChaöPå
 =ÅabÀPå->
buckës
;

891 
cou¡
 > 0; cou¡--, 
√wChaöPå
++) {

892 *
√wChaöPå
 = 
NULL
;

894 
èbÀPå
->
ªbuûdSize
 *= 4;

895 
èbÀPå
->
downShi·
 -= 2;

896 
èbÀPå
->
mask
 = (tablePtr->mask << 2) + 3;

902 
ﬁdChaöPå
 = 
ﬁdBuckës
; 
ﬁdSize
 > 0; oldSize--, oldChainPtr++) {

903 
hPå
 = *
ﬁdChaöPå
; hPå !
NULL
; hPtr = *oldChainPtr) {

904 *
ﬁdChaöPå
 = 
hPå
->
√xtPå
;

905 i‡(
èbÀPå
->
keyTy≥
 =
TCL_STRING_KEYS
) {

906 
ödex
 = 
	`HashSåög
(
hPå
->
key
.
°rög
Ë& 
èbÀPå
->
mask
;

907 } i‡(
èbÀPå
->
keyTy≥
 =
TCL_ONE_WORD_KEYS
) {

908 
ödex
 = 
	`RANDOM_INDEX
(
èbÀPå
, 
hPå
->
key
.
⁄eW‹dVÆue
);

910 *
iPå
;

911 
cou¡
;

913 
ödex
 = 0, 
cou¡
 = 
èbÀPå
->
keyTy≥
,

914 
iPå
 = 
hPå
->
key
.
w‹ds
; 
cou¡
 > 0; count--, iPtr++) {

915 
ödex
 +*
iPå
;

917 
ödex
 = 
	`RANDOM_INDEX
(
èbÀPå
, index);

919 
hPå
->
buckëPå
 = &(
èbÀPå
->
buckës
[
ödex
]);

920 
hPå
->
√xtPå
 = *hPå->
buckëPå
;

921 *
hPå
->
buckëPå
 = hPtr;

929 i‡(
ﬁdBuckës
 !
èbÀPå
->
°©icBuckës
) {

930 
	`ck‰ì
((*Ë
ﬁdBuckës
);

932 
	}
}

	@tclHash.h

25 #i‚de‡
_TCLINT


26 
	#_TCLINT


	)

38 
	~<°dio.h
>

39 
	~<°rög.h
>

59 #i‚de‡
_TCL


60 
	#_TCL


	)

62 
	#T˛_DñëeHashE¡ry
 
Rç_T˛_DñëeHashE¡ry


	)

63 
	#T˛_DñëeHashTabÀ
 
Rç_T˛_DñëeHashTabÀ


	)

64 
	#T˛_Fú°HashE¡ry
 
Rç_T˛_Fú°HashE¡ry


	)

65 
	#T˛_HashSèts
 
Rç_T˛_HashSèts


	)

66 
	#T˛_InôHashTabÀ
 
Rç_T˛_InôHashTabÀ


	)

67 
	#T˛_NextHashE¡ry
 
Rç_T˛_NextHashE¡ry


	)

79 #i‡
deföed
(
__STDC__
Ë|| deföed(
HAS_STDARG
)

80 
	#TCL_VARARGS
(
ty≥
, 
«me
Ë—y≥Çame, ...)

	)

81 
	#TCL_VARARGS_DEF
(
ty≥
, 
«me
Ë—y≥Çame, ...)

	)

82 
	#TCL_VARARGS_START
(
ty≥
, 
«me
, 
li°
Ë(
	`va_°¨t
÷i°,Çame),Çame)

	)

84 #ifde‡
__˝lu•lus


85 
	#TCL_VARARGS
(
ty≥
, 
«me
Ë—y≥Çame, ...)

	)

86 
	#TCL_VARARGS_DEF
(
ty≥
, 
«me
Ë—y≥ 
va_Æi°
, ...)

	)

88 
	#TCL_VARARGS
(
ty≥
, 
«me
Ë()

	)

89 
	#TCL_VARARGS_DEF
(
ty≥
, 
«me
Ë(
va_Æi°
)

	)

91 
	#TCL_VARARGS_START
(
ty≥
, 
«me
, 
li°
) \

92 (
	`va_°¨t
(
li°
), 
	`va_¨g
÷i°, 
ty≥
))

	)

100 #unde‡
_ANSI_ARGS_


101 #unde‡
CONST


103 #i‡((
deföed
(
__STDC__
Ë|| deföed(
SABER
)Ë&& !deföed(
NO_PROTOTYPE
)Ë|| deföed(
__˝lu•lus
Ë|| deföed(
USE_PROTOTYPE
)

104 
	#_USING_PROTOTYPES_
 1

	)

105 
	#_ANSI_ARGS_
(
x
Ë
	)
x

106 
	#CONST
 c⁄°

	)

108 
	#_ANSI_ARGS_
(
x
Ë()

	)

109 
	#CONST


	)

112 #ifde‡
__˝lu•lus


113 
	#EXTERN
 "C"

	)

115 
	#EXTERN
 

	)

123 #i‚de‡
WIN32


124 #i‚de‡
VOID


125 #ifde‡
__STDC__


126 
	#VOID
 

	)

128 
	#VOID
 

	)

137 #i‚de‡
VOID


138 
	#VOID
 

	)

139 
	tCHAR
;

140 
	tSHORT
;

141 
	tLONG
;

149 #i‚de‡
NULL


150 
	#NULL
 0

	)

153 #i‚de‡
_CLIENTDATA


154 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

155 *
	tClõ¡D©a
;

157 *
	tClõ¡D©a
;

159 
	#_CLIENTDATA


	)

162 
	#ckÆloc
(
x
Ë
	`mÆloc
(x)

	)

163 
	#ck‰ì
(
x
Ë
	`‰ì
(x)

	)

164 
	#ckªÆloc
(
x
,
y
Ë
	`ªÆloc
(x,y)

	)

174 #ifde‡
__˝lu•lus


175 
	gT˛_HashTabÀ
;

184 
	sT˛_HashE¡ry
 {

185 
T˛_HashE¡ry
 *
	m√xtPå
;

188 
T˛_HashTabÀ
 *
	mèbÀPå
;

189 
T˛_HashE¡ry
 **
	mbuckëPå
;

192 
Clõ¡D©a
 
	m˛õ¡D©a
;

195 *
	m⁄eW‹dVÆue
;

196 
	mw‹ds
[1];

200 
	m°rög
[4];

203 } 
	mkey
;

204 } 
	tT˛_HashE¡ry
;

212 
	#TCL_SMALL_HASH_TABLE
 4

	)

213 
	sT˛_HashTabÀ
 {

214 
T˛_HashE¡ry
 **
	mbuckës
;

217 
T˛_HashE¡ry
 *
	m°©icBuckës
[
TCL_SMALL_HASH_TABLE
];

220 
	mnumBuckës
;

222 
	mnumE¡rõs
;

224 
	mªbuûdSize
;

226 
	mdownShi·
;

229 
	mmask
;

231 
	mkeyTy≥
;

237 
	mT˛_HashE¡ry
 *(*
	mfödProc
Ë
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

238 
CONST
 *
key
));

239 
	mT˛_HashE¡ry
 *(*
	m¸óãProc
Ë
_ANSI_ARGS_
((
T˛_HashTabÀ
 *
èbÀPå
,

240 
CONST
 *
key
, *
√wPå
));

241 } 
	tT˛_HashTabÀ
;

248 
	sT˛_HashSórch
 {

249 
T˛_HashTabÀ
 *
	mèbÀPå
;

250 
	m√xtIndex
;

252 
T˛_HashE¡ry
 *
	m√xtE¡ryPå
;

254 } 
	tT˛_HashSórch
;

260 
	#TCL_STRING_KEYS
 0

	)

261 
	#TCL_ONE_WORD_KEYS
 1

	)

267 
	#T˛_GëHashVÆue
(
h
Ë((h)->
˛õ¡D©a
)

	)

268 
	#T˛_SëHashVÆue
(
h
, 
vÆue
Ë((h)->
˛õ¡D©a
 = (
Clõ¡D©a
Ë(vÆue))

	)

269 
	#T˛_GëHashKey
(
èbÀPå
, 
h
) \

270 ((*Ë(((
èbÀPå
)->
keyTy≥
 =
TCL_ONE_WORD_KEYS
Ë? (
h
)->
key
.
⁄eW‹dVÆue
 \

271 : (
h
)->
key
.
°rög
))

	)

278 
	#T˛_FödHashE¡ry
(
èbÀPå
, 
key
) \

279 (*((
èbÀPå
)->
födProc
))—abÀPå, 
key
)

	)

280 
	#T˛_Cª©eHashE¡ry
(
èbÀPå
, 
key
, 
√wPå
) \

281 (*((
èbÀPå
)->
¸óãProc
))—abÀPå, 
key
, 
√wPå
)

	)

288 
EXTERN
 
T˛_DñëeHashE¡ry
 
_ANSI_ARGS_
((

289 
T˛_HashE¡ry
 *
íåyPå
));

290 
EXTERN
 
T˛_DñëeHashTabÀ
 
_ANSI_ARGS_
((

291 
T˛_HashTabÀ
 *
èbÀPå
));

292 
EXTERN
 
T˛_HashE¡ry
 * 
T˛_Fú°HashE¡ry
 
_ANSI_ARGS_
((

293 
T˛_HashTabÀ
 *
èbÀPå
,

294 
T˛_HashSórch
 *
£¨chPå
));

295 
EXTERN
 * 
T˛_HashSèts
 
_ANSI_ARGS_
((

296 
T˛_HashTabÀ
 *
èbÀPå
));

297 
EXTERN
 
T˛_InôHashTabÀ
 
_ANSI_ARGS_
((

298 
T˛_HashTabÀ
 *
èbÀPå
,

299 
keyTy≥
));

300 
EXTERN
 
T˛_HashE¡ry
 * 
T˛_NextHashE¡ry
 
_ANSI_ARGS_
((

301 
T˛_HashSórch
 *
£¨chPå
));

308 #ifde‡
NO_STDLIB_H


309 
	~"../com∑t/°dlib.h
"

311 
	~<°dlib.h
>

321 
EXTERN
 
∑nic
 
_ANSI_ARGS_
(
TCL_VARARGS
(*,
f‹m©
));

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	#__mÆloc_±r_t
 *

	)

30 
	#__mÆloc_size_t
 
size_t


	)

31 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

33 #ifde‡
__GNUC__


35 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

38 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

42 
	#__MALLOC_P
(
¨gs
Ë
	)
args

43 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

48 
__BEGIN_DECLS


51 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

54 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

55 
__©åibuã_mÆloc__
 
__wur
;

62 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

63 
__©åibuã_w¨n_unu£d_ªsu…__
;

66 
‰ì
 
__MALLOC_P
 ((*
__±r
));

69 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

72 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

73 
__©åibuã_mÆloc__
 
__wur
;

76 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

77 
__©åibuã_mÆloc__
 
__wur
;

81 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

82 
__©åibuã_mÆloc__
 
__wur
;

86 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

89 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

90 
__©åibuã_mÆloc__
;

94 
	smÆlöfo
 {

95 
	m¨ía
;

96 
	m‹dblks
;

97 
	msmblks
;

98 
	mhblks
;

99 
	mhblkhd
;

100 
	musmblks
;

101 
	mfsmblks
;

102 
	mu‹dblks
;

103 
	mf‹dblks
;

104 
	mkìpco°
;

108 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

111 #i‚de‡
M_MXFAST


112 
	#M_MXFAST
 1

	)

114 #i‚de‡
M_NLBLKS


115 
	#M_NLBLKS
 2

	)

117 #i‚de‡
M_GRAIN


118 
	#M_GRAIN
 3

	)

120 #i‚de‡
M_KEEP


121 
	#M_KEEP
 4

	)

125 
	#M_TRIM_THRESHOLD
 -1

	)

126 
	#M_TOP_PAD
 -2

	)

127 
	#M_MMAP_THRESHOLD
 -3

	)

128 
	#M_MMAP_MAX
 -4

	)

129 
	#M_CHECK_ACTION
 -5

	)

130 
	#M_PERTURB
 -6

	)

131 
	#M_ARENA_TEST
 -7

	)

132 
	#M_ARENA_MAX
 -8

	)

135 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

139 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

143 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

146 
mÆloc_°©s
 
__MALLOC_P
 (());

149 
mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
);

152 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

156 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

161 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

163 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

164 
__c⁄°
 
__mÆloc_±r_t
));

165 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

166 
__c⁄°
 
__mÆloc_±r_t
));

167 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

168 
__c⁄°
 
__mÆloc_±r_t
));

169 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

170 
size_t
 
__size
,

171 
__c⁄°
 
__mÆloc_±r_t
));

172 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

175 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

178 
__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 \

102 || 
deföed
 
__LDBL_COMPAT
 \

103 || !
deföed
 
_LIBC
)

104 #ifde‡
__LDBL_COMPAT


106 #ifde‡
__USE_ISOC99


107 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

108 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

109 #ifde‡
__REDIRECT_NTH


110 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

111 
__∆dbl_√xâow¨df
)

112 
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

114 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

115 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

116 (
__x
, 
__y
),

117 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


124 #unde‡
__MATHDECL_1


125 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

126 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

127 
¨gs
, 
Æüs
)

	)

128 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

129 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	~<bôs/m©hˇŒs.h
>

146 #unde‡
_MdoubÀ_


147 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


148 #unde‡
_MdoubÀ_END_NAMESPACE


149 #unde‡
__MATH_PRECNAME


154 #unde‡
__MATHDECL_1


155 #unde‡
__MATHDECL


156 #unde‡
__MATHCALL


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


161 
signgam
;

166 #ifde‡
__USE_ISOC99


204 
FP_NAN
,

205 
	#FP_NAN
 
FP_NAN


	)

206 
FP_INFINITE
,

207 
	#FP_INFINITE
 
FP_INFINITE


	)

208 
FP_ZERO
,

209 
	#FP_ZERO
 
FP_ZERO


	)

210 
FP_SUBNORMAL
,

211 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

212 
FP_NORMAL


213 
	#FP_NORMAL
 
FP_NORMAL


	)

217 #ifde‡
__NO_LONG_DOUBLE_MATH


218 
	#Â˛assify
(
x
) \

219 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

221 
	#Â˛assify
(
x
) \

222 ( (
x
) ==  () \

223 ? 
	`__Â˛assifyf
 (
x
) \

224 :  (
x
) ==  () \

225 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

229 #ifde‡
__NO_LONG_DOUBLE_MATH


230 
	#signbô
(
x
) \

231 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

233 
	#signbô
(
x
) \

234 ( (
x
) ==  () \

235 ? 
	`__signbôf
 (
x
) \

236 :  (
x
) ==  () \

237 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
	#isföôe
(
x
) \

243 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

245 
	#isföôe
(
x
) \

246 ( (
x
) ==  () \

247 ? 
	`__föôef
 (
x
) \

248 :  (
x
) ==  () \

249 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

253 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

257 #ifde‡
__NO_LONG_DOUBLE_MATH


258 
	#i¢™
(
x
) \

259 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

261 
	#i¢™
(
x
) \

262 ( (
x
) ==  () \

263 ? 
	`__i¢™f
 (
x
) \

264 :  (
x
) ==  () \

265 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

269 #ifde‡
__NO_LONG_DOUBLE_MATH


270 
	#isöf
(
x
) \

271 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

273 
	#isöf
(
x
) \

274 ( (
x
) ==  () \

275 ? 
	`__isöff
 (
x
) \

276 :  (
x
) ==  () \

277 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

281 
	#MATH_ERRNO
 1

	)

282 
	#MATH_ERREXCEPT
 2

	)

287 #i‚de‡
__FAST_MATH__


288 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

293 #ifdef 
__USE_MISC


297 
_IEEE_
 = -1,

298 
_SVID_
,

299 
_XOPEN_
,

300 
_POSIX_
,

301 
_ISOC_


302 } 
	t_LIB_VERSION_TYPE
;

307 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

311 #ifde‡
__USE_SVID


317 #ifde‡
__˝lu•lus


318 
__ex˚±i⁄


320 
ex˚±i⁄


323 
ty≥
;

324 *
«me
;

325 
¨g1
;

326 
¨g2
;

327 
ªtvÆ
;

328 
	}
};

330 #ifde‡
__˝lu•lus


331 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

333 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

336 
	#X_TLOSS
 1.41484755040568800000e+16

	)

339 
	#DOMAIN
 1

	)

340 
	#SING
 2

	)

341 
	#OVERFLOW
 3

	)

342 
	#UNDERFLOW
 4

	)

343 
	#TLOSS
 5

	)

344 
	#PLOSS
 6

	)

347 
	#HUGE
 3.40282347e+38F

	)

351 #ifde‡
__USE_XOPEN


353 
	#MAXFLOAT
 3.40282347e+38F

	)

360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


361 
	#M_E
 2.7182818284590452354

	)

362 
	#M_LOG2E
 1.4426950408889634074

	)

363 
	#M_LOG10E
 0.43429448190325182765

	)

364 
	#M_LN2
 0.69314718055994530942

	)

365 
	#M_LN10
 2.30258509299404568402

	)

366 
	#M_PI
 3.14159265358979323846

	)

367 
	#M_PI_2
 1.57079632679489661923

	)

368 
	#M_PI_4
 0.78539816339744830962

	)

369 
	#M_1_PI
 0.31830988618379067154

	)

370 
	#M_2_PI
 0.63661977236758134308

	)

371 
	#M_2_SQRTPI
 1.12837916709551257390

	)

372 
	#M_SQRT2
 1.41421356237309504880

	)

373 
	#M_SQRT1_2
 0.70710678118654752440

	)

379 #ifde‡
__USE_GNU


380 
	#M_El
 2.7182818284590452353602874713526625L

	)

381 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

382 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

383 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

384 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

385 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

386 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

387 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

388 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

389 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

390 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

391 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

392 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

399 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


400 
	#__NO_MATH_INLINES
 1

	)

403 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

410 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

411 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

412 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

413 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

414 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

415 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

419 #ifde‡
__USE_EXTERN_INLINES


420 
	~<bôs/m©hölöe.h
>

423 #ifde‡
__USE_ISOC99


427 #i‚de‡
isgª©î


428 
	#isgª©î
(
x
, 
y
) \

429 (
__exãnsi⁄__
 \

430 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

431 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

435 #i‚de‡
isgª©îequÆ


436 
	#isgª©îequÆ
(
x
, 
y
) \

437 (
__exãnsi⁄__
 \

438 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

439 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

443 #i‚de‡
i¶ess


444 
	#i¶ess
(
x
, 
y
) \

445 (
__exãnsi⁄__
 \

446 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

447 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

451 #i‚de‡
i¶es£quÆ


452 
	#i¶es£quÆ
(
x
, 
y
) \

453 (
__exãnsi⁄__
 \

454 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

455 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

459 #i‚de‡
i¶essgª©î


460 
	#i¶essgª©î
(
x
, 
y
) \

461 (
__exãnsi⁄__
 \

462 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

463 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

467 #i‚de‡
isun‹dîed


468 
	#isun‹dîed
(
u
, 
v
) \

469 (
__exãnsi⁄__
 \

470 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

471 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

476 
	g__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


56 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


59 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

62 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

66 
	#HOST_NOT_FOUND
 1

	)

67 
	#TRY_AGAIN
 2

	)

69 
	#NO_RECOVERY
 3

	)

71 
	#NO_DATA
 4

	)

74 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


75 
	#NETDB_INTERNAL
 -1

	)

76 
	#NETDB_SUCCESS
 0

	)

77 
	#NO_ADDRESS
 
NO_DATA


	)

80 #ifde‡
__USE_XOPEN2K


82 
	#IPPORT_RESERVED
 1024

	)

85 #ifde‡
__USE_GNU


87 
	#SCOPE_DELIMITER
 '%'

	)

90 #ifde‡
__USE_MISC


93 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

96 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

101 
	sho°ít


103 *
h_«me
;

104 **
h_Æü£s
;

105 
h_addπy≥
;

106 
h_Àngth
;

107 **
h_addr_li°
;

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


109 
	#h_addr
 
h_addr_li°
[0]

	)

118 
	`£tho°ít
 (
__°ay_›í
);

124 
	`ídho°ít
 ();

131 
ho°ít
 *
	`gëho°ít
 ();

138 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

139 
__ty≥
);

145 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

147 #ifde‡
__USE_MISC


156 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

168 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

174 
__ty≥
,

175 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

176 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

177 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

178 *
__ª°ri˘
 
__h_î∫›
);

180 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

181 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

182 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

183 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

184 *
__ª°ri˘
 
__h_î∫›
);

186 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

187 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

188 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

189 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

190 *
__ª°ri˘
 
__h_î∫›
);

199 
	`£äëít
 (
__°ay_›í
);

205 
	`íd√ã¡
 ();

212 
√ã¡
 *
	`gë√ã¡
 ();

219 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

225 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

227 #ifdef 
__USE_MISC


238 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

239 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

240 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

241 *
__ª°ri˘
 
__h_î∫›
);

243 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

244 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

245 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

246 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

247 *
__ª°ri˘
 
__h_î∫›
);

249 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

250 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

251 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

252 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

253 *
__ª°ri˘
 
__h_î∫›
);

258 
	s£rvít


260 *
s_«me
;

261 **
s_Æü£s
;

262 
s_p‹t
;

263 *
s_¥Ÿo
;

271 
	`£t£rvít
 (
__°ay_›í
);

277 
	`íd£rvít
 ();

284 
£rvít
 *
	`gë£rvít
 ();

291 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

292 
__c⁄°
 *
__¥Ÿo
);

299 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

302 #ifdef 
__USE_MISC


310 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

311 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

312 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

314 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

315 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

316 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

317 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

318 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

320 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

321 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

322 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

323 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

328 
	s¥Ÿ€¡


330 *
p_«me
;

331 **
p_Æü£s
;

332 
p_¥Ÿo
;

340 
	`£çrŸ€¡
 (
__°ay_›í
);

346 
	`íd¥Ÿ€¡
 ();

353 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

359 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

365 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

368 #ifdef 
__USE_MISC


376 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

377 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

378 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

380 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

381 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

382 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

383 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

385 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

386 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

387 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

388 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

397 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

405 
	`íd√tgª¡
 ();

414 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

415 **
__ª°ri˘
 
__u£Ω
,

416 **
__ª°ri˘
 
__domaöp
);

425 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

426 
__c⁄°
 *
__u£r
, __c⁄° *
__domaö
);

434 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

435 **
__ª°ri˘
 
__u£Ω
,

436 **
__ª°ri˘
 
__domaöp
,

437 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

441 #ifde‡
__USE_BSD


453 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

454 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

455 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

456 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

465 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

466 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

467 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

468 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

469 
ß_Ámûy_t
 
__af
);

481 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

482 
__c⁄°
 *
__ª°ri˘
 
__«me
,

483 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

484 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

493 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

494 
__c⁄°
 *
__ª°ri˘
 
__«me
,

495 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

496 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

497 
ß_Ámûy_t
 
__af
);

507 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

508 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

517 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

518 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

519 
ß_Ámûy_t
 
__af
);

530 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

531 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

541 
	`úu£rok_af
 (
__c⁄°
 *
__øddr
, 
__su£r
,

542 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

543 
ß_Ámûy_t
 
__af
);

553 
	`ºesvp‹t
 (*
__Æp‹t
);

562 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

567 #ifdef 
__USE_POSIX


569 
	saddröfo


571 
ai_Êags
;

572 
ai_Ámûy
;

573 
ai_sockty≥
;

574 
ai_¥Ÿocﬁ
;

575 
sockÀn_t
 
ai_addæí
;

576 
sockaddr
 *
ai_addr
;

577 *
ai_ˇn⁄«me
;

578 
addröfo
 *
ai_√xt
;

581 #ifde‡
__USE_GNU


583 
	sgaicb


585 c⁄° *
¨_«me
;

586 c⁄° *
¨_£rvi˚
;

587 c⁄° 
addröfo
 *
¨_ªque°
;

588 
addröfo
 *
¨_ªsu…
;

590 
__ªtu∫
;

591 
__unu£d
[5];

595 
	#GAI_WAIT
 0

	)

596 
	#GAI_NOWAIT
 1

	)

600 
	#AI_PASSIVE
 0x0001

	)

601 
	#AI_CANONNAME
 0x0002

	)

602 
	#AI_NUMERICHOST
 0x0004

	)

603 
	#AI_V4MAPPED
 0x0008

	)

604 
	#AI_ALL
 0x0010

	)

605 
	#AI_ADDRCONFIG
 0x0020

	)

607 #ifde‡
__USE_GNU


608 
	#AI_IDN
 0x0040

	)

611 
	#AI_CANONIDN
 0x0080

	)

612 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

614 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

617 
	#AI_NUMERICSERV
 0x0400

	)

620 
	#EAI_BADFLAGS
 -1

	)

621 
	#EAI_NONAME
 -2

	)

622 
	#EAI_AGAIN
 -3

	)

623 
	#EAI_FAIL
 -4

	)

624 
	#EAI_FAMILY
 -6

	)

625 
	#EAI_SOCKTYPE
 -7

	)

626 
	#EAI_SERVICE
 -8

	)

627 
	#EAI_MEMORY
 -10

	)

628 
	#EAI_SYSTEM
 -11

	)

629 
	#EAI_OVERFLOW
 -12

	)

630 #ifde‡
__USE_GNU


631 
	#EAI_NODATA
 -5

	)

632 
	#EAI_ADDRFAMILY
 -9

	)

633 
	#EAI_INPROGRESS
 -100

	)

634 
	#EAI_CANCELED
 -101

	)

635 
	#EAI_NOTCANCELED
 -102

	)

636 
	#EAI_ALLDONE
 -103

	)

637 
	#EAI_INTR
 -104

	)

638 
	#EAI_IDN_ENCODE
 -105

	)

641 #ifde‡
__USE_MISC


642 
	#NI_MAXHOST
 1025

	)

643 
	#NI_MAXSERV
 32

	)

646 
	#NI_NUMERICHOST
 1

	)

647 
	#NI_NUMERICSERV
 2

	)

648 
	#NI_NOFQDN
 4

	)

649 
	#NI_NAMEREQD
 8

	)

650 
	#NI_DGRAM
 16

	)

651 #ifde‡
__USE_GNU


652 
	#NI_IDN
 32

	)

653 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

655 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

664 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

665 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

666 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

667 
addröfo
 **
__ª°ri˘
 
__∑i
);

670 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

673 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

679 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

680 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

681 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

682 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

685 #ifde‡
__USE_GNU


694 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

695 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

705 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

706 
__c⁄°
 
time•ec
 *
__timeout
);

709 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

712 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

715 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/rpcsvc/ypclnt.h

21 #i‚def 
__RPCSVC_YPCLNT_H__


22 
	#__RPCSVC_YPCLNT_H__


	)

24 
	~<„©uªs.h
>

27 
	#YPERR_SUCCESS
 0

	)

28 
	#YPERR_BADARGS
 1

	)

29 
	#YPERR_RPC
 2

	)

30 
	#YPERR_DOMAIN
 3

	)

31 
	#YPERR_MAP
 4

	)

32 
	#YPERR_KEY
 5

	)

33 
	#YPERR_YPERR
 6

	)

34 
	#YPERR_RESRC
 7

	)

35 
	#YPERR_NOMORE
 8

	)

36 
	#YPERR_PMAP
 9

	)

37 
	#YPERR_YPBIND
 10

	)

38 
	#YPERR_YPSERV
 11

	)

39 
	#YPERR_NODOM
 12

	)

40 
	#YPERR_BADDB
 13

	)

41 
	#YPERR_VERS
 14

	)

42 
	#YPERR_ACCESS
 15

	)

43 
	#YPERR_BUSY
 16

	)

46 
	#YPOP_CHANGE
 1

	)

47 
	#YPOP_INSERT
 2

	)

48 
	#YPOP_DELETE
 3

	)

49 
	#YPOP_STORE
 4

	)

51 
__BEGIN_DECLS


54 
	sy∑Œ_ˇŒback


56 (*
	mf‹óch
Ë(
	m__°©us
, *
	m__key
, 
	m__keyÀn
,

57 *
	m__vÆ
, 
	m__vÆÀn
, *
	m__d©a
);

58 *
	md©a
;

62 
	$yp_böd
 (
__c⁄°
 *Ë
__THROW
;

63 
	$yp_unböd
 (
__c⁄°
 *Ë
__THROW
;

64 
	$yp_gë_deÁu…_domaö
 (**Ë
__THROW
;

65 
	$yp_m©ch
 (
__c⁄°
 *, __const *, __const *,

66 
__c⁄°
 , **, *Ë
__THROW
;

67 
	$yp_fú°
 (
__c⁄°
 *, __const *, **,

68 *, **, *Ë
__THROW
;

69 
	$yp_√xt
 (
__c⁄°
 *, __const *, __const *,

70 
__c⁄°
 , **, *, **, *Ë
__THROW
;

71 
	$yp_ma°î
 (
__c⁄°
 *, __c⁄° *, **Ë
__THROW
;

72 
	$yp_‹dî
 (
__c⁄°
 *, __c⁄° *, *Ë
__THROW
;

73 
	$yp_Æl
 (
__c⁄°
 *, __const *,

74 
__c⁄°
 
y∑Œ_ˇŒback
 *Ë
__THROW
;

75 
__c⁄°
 *
	$y≥º_°rög
 (
__c⁄°
 Ë
__THROW
;

76 
__c⁄°
 *
	$ypbödîr_°rög
 (
__c⁄°
 Ë
__THROW
;

77 
	$yµrŸ_îr
 (
__c⁄°
 Ë
__THROW
;

78 
	$yp_upd©e
 (*, *, , *,

79 , *, Ë
__THROW
;

81 
	$yp_m≠li°
 (
__c⁄°
 *, 
ypm≠li°
 **Ë
__THROW
;

85 
	$__yp_check
 (**Ë
__THROW
;

87 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

169 
	#°dö
 
°dö


	)

170 
	#°dout
 
°dout


	)

171 
	#°dîr
 
°dîr


	)

173 
__BEGIN_NAMESPACE_STD


175 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

177 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

178 
__END_NAMESPACE_STD


180 #ifde‡
__USE_ATFILE


182 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

183 
__c⁄°
 *
__√w
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


191 #i‚de‡
__USE_FILE_OFFSET64


192 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

194 #ifde‡
__REDIRECT


195 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

197 
	#tmpfûe
 
tmpfûe64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

206 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

207 
__END_NAMESPACE_STD


209 #ifde‡
__USE_MISC


212 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

216 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


224 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

225 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

229 
__BEGIN_NAMESPACE_STD


234 
	`f˛o£
 (
FILE
 *
__°ªam
);

239 
	`fÊush
 (
FILE
 *
__°ªam
);

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_MISC


249 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

252 #ifde‡
__USE_GNU


259 
	`f˛o£Æl
 ();

263 
__BEGIN_NAMESPACE_STD


264 #i‚de‡
__USE_FILE_OFFSET64


269 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

275 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

279 #ifde‡
__REDIRECT


280 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

281 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

282 
__wur
;

283 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

284 
__c⁄°
 *
__ª°ri˘
 
__modes
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

286 
__wur
;

288 
	#f›í
 
f›í64


	)

289 
	#‰e›í
 
‰e›í64


	)

292 
__END_NAMESPACE_STD


293 #ifde‡
__USE_LARGEFILE64


294 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

295 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

296 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 #ifdef 
__USE_POSIX


303 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

306 #ifdef 
__USE_GNU


309 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

310 
__c⁄°
 *
__ª°ri˘
 
__modes
,

311 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

314 #ifde‡
__USE_XOPEN2K8


316 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

317 
__THROW
 
__wur
;

322 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

326 
__BEGIN_NAMESPACE_STD


329 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

333 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

334 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 
__END_NAMESPACE_STD


337 #ifdef 
__USE_BSD


340 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

341 
size_t
 
__size
Ë
__THROW
;

344 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

348 
__BEGIN_NAMESPACE_STD


353 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

359 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	$•rötf
 (*
__ª°ri˘
 
__s
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

368 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

369 
_G_va_li°
 
__¨g
);

374 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

376 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

377 
_G_va_li°
 
__¨g
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


381 
__BEGIN_NAMESPACE_C99


383 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

384 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

385 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

387 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

389 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

390 
__END_NAMESPACE_C99


393 #ifde‡
__USE_GNU


396 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

397 
_G_va_li°
 
__¨g
)

398 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

399 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

400 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

401 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

402 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

403 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

451 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

458 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (
__c⁄°
 *
__ª°ri˘
 
__s
,

506 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

516 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

632 *
	$gës
 (*
__s
Ë
__wur
;

633 
__END_NAMESPACE_STD


635 #ifde‡
__USE_GNU


642 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 #ifdef 
__USE_XOPEN2K8


658 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

659 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

660 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

661 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

662 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
__BEGIN_NAMESPACE_STD


682 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

688 
	`puts
 (
__c⁄°
 *
__s
);

695 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

702 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

710 
__END_NAMESPACE_STD


712 #ifde‡
__USE_GNU


719 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

720 
FILE
 *
__ª°ri˘
 
__°ªam
);

723 #ifde‡
__USE_MISC


730 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

731 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

732 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

737 
__BEGIN_NAMESPACE_STD


742 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

747 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`ªwöd
 (
FILE
 *
__°ªam
);

753 
__END_NAMESPACE_STD


760 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


761 #i‚de‡
__USE_FILE_OFFSET64


766 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

771 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

773 #ifde‡
__REDIRECT


774 
	`__REDIRECT
 (
f£eko
,

775 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

776 
f£eko64
);

777 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

779 
	#f£eko
 
f£eko64


	)

780 
	#·ñlo
 
·ñlo64


	)

785 
__BEGIN_NAMESPACE_STD


786 #i‚de‡
__USE_FILE_OFFSET64


791 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

796 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

798 #ifde‡
__REDIRECT


799 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

800 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

801 
	`__REDIRECT
 (
f£ços
,

802 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

804 
	#fgëpos
 
fgëpos64


	)

805 
	#f£ços
 
f£ços64


	)

808 
__END_NAMESPACE_STD


810 #ifde‡
__USE_LARGEFILE64


811 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

812 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

813 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

814 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

817 
__BEGIN_NAMESPACE_STD


819 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

821 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

823 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

824 
__END_NAMESPACE_STD


826 #ifde‡
__USE_MISC


828 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

829 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__BEGIN_NAMESPACE_STD


839 
	`≥º‹
 (
__c⁄°
 *
__s
);

840 
__END_NAMESPACE_STD


846 
	~<bôs/sys_îæi°.h
>

849 #ifdef 
__USE_POSIX


851 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

854 #ifde‡
__USE_MISC


856 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

861 
deföed
 
__USE_MISC
)

866 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

872 
	`p˛o£
 (
FILE
 *
__°ªam
);

876 #ifdef 
__USE_POSIX


878 *
	$˘îmid
 (*
__s
Ë
__THROW
;

882 #ifde‡
__USE_XOPEN


884 *
	`cu£rid
 (*
__s
);

888 #ifdef 
__USE_GNU


889 
ob°ack
;

892 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

893 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

894 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

895 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

896 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

897 
_G_va_li°
 
__¨gs
)

898 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

902 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


906 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

910 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

913 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


920 
	#__√ed_gë›t


	)

921 
	~<gë›t.h
>

926 #ifde‡
__USE_EXTERN_INLINES


927 
	~<bôs/°dio.h
>

929 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


930 
	~<bôs/°dio2.h
>

932 #ifde‡
__LDBL_COMPAT


933 
	~<bôs/°dio-ldbl.h
>

936 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/strings.h

20 #i‚def 
_STRINGS_H


21 
	#_STRINGS_H
 1

	)

26 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


28 
	~<„©uªs.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

33 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

34 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

37 
	g__BEGIN_DECLS


39 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


41 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

42 
__THROW
 
__©åibuã_puª__
;

45 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

48 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

51 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


54 *
	`ödex
 (*
__s
, 
__c
)

55 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

56 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

59 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


60 
__exã∫_Æways_ölöe
 *

61 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
__exã∫_Æways_ölöe
 
__c⁄°
 *

67 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


69  
	`__buûtö_ödex
 (
__s
, 
__c
);

72 
	}
}

74 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

75 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


82 *
	`rödex
 (*
__s
, 
__c
)

83 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

84 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

87 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


88 
__exã∫_Æways_ölöe
 *

89 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
__exã∫_Æways_ölöe
 
__c⁄°
 *

95 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


97  
	`__buûtö_rödex
 (
__s
, 
__c
);

100 
	}
}

102 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


110 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

114 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

115 
__THROW
 
__©åibuã_puª__
;

118 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

119 
__THROW
 
__©åibuã_puª__
;

121 #ifdef 
__USE_XOPEN2K8


125 
	~<xloˇÀ.h
>

129 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

130 
__loˇÀ_t
 
__loc
)

131 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

134 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1028 #i‚de‡
__USE_FILE_OFFSET64


1029 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1031 #ifde‡
__REDIRECT_NTH


1032 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1033 
·runˇã64
Ë
__wur
;

1035 
	#·runˇã
 
·runˇã64


	)

1038 #ifde‡
__USE_LARGEFILE64


1039 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1045 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1046 || 
deföed
 
__USE_MISC


1050 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1056 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1060 #ifde‡
__USE_MISC


1071 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1076 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1088 
	#F_ULOCK
 0

	)

1089 
	#F_LOCK
 1

	)

1090 
	#F_TLOCK
 2

	)

1091 
	#F_TEST
 3

	)

1093 #i‚de‡
__USE_FILE_OFFSET64


1094 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__REDIRECT


1097 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1098 
lockf64
Ë
__wur
;

1100 
	#lockf
 
lockf64


	)

1103 #ifde‡
__USE_LARGEFILE64


1104 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1109 #ifde‡
__USE_GNU


1114 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1115 (
__exãnsi⁄__
 \

1116 ({ 
__ªsu…
; \

1117 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1118 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1119 
__ªsu…
; 
	}
}))

	)

1122 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1125 
fd©async
 (
__fûdes
);

1131 #ifdef 
__USE_XOPEN


1133 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1138 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1145 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1146 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1154 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1159 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1160 
	~<bôs/uni°d.h
>

1163 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

67 
	#IP_MTU
 14

	)

68 
	#IP_FREEBIND
 15

	)

69 
	#IP_IPSEC_POLICY
 16

	)

70 
	#IP_XFRM_POLICY
 17

	)

71 
	#IP_PASSSEC
 18

	)

72 
	#IP_TRANSPARENT
 19

	)

75 
	#IP_ORIGDSTADDR
 20

	)

76 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

78 
	#IP_MINTTL
 21

	)

82 
	#IP_PMTUDISC_DONT
 0

	)

83 
	#IP_PMTUDISC_WANT
 1

	)

84 
	#IP_PMTUDISC_DO
 2

	)

85 
	#IP_PMTUDISC_PROBE
 3

	)

88 
	#SOL_IP
 0

	)

90 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

91 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

92 
	#IP_MAX_MEMBERSHIPS
 20

	)

94 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


98 
	sù_›ts


100 
ö_addr
 
	mù_d°
;

101 
	mù_›ts
[40];

105 
	sù_mªqn


107 
ö_addr
 
	mimr_mu…üddr
;

108 
ö_addr
 
	mimr_addªss
;

109 
	mimr_ifödex
;

113 
	sö_pktöfo


115 
	mùi_ifödex
;

116 
ö_addr
 
	mùi_•ec_d°
;

117 
ö_addr
 
	mùi_addr
;

124 
	#IPV6_ADDRFORM
 1

	)

125 
	#IPV6_2292PKTINFO
 2

	)

126 
	#IPV6_2292HOPOPTS
 3

	)

127 
	#IPV6_2292DSTOPTS
 4

	)

128 
	#IPV6_2292RTHDR
 5

	)

129 
	#IPV6_2292PKTOPTIONS
 6

	)

130 
	#IPV6_CHECKSUM
 7

	)

131 
	#IPV6_2292HOPLIMIT
 8

	)

133 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

135 
	#IPV6_NEXTHOP
 9

	)

136 
	#IPV6_AUTHHDR
 10

	)

137 
	#IPV6_UNICAST_HOPS
 16

	)

138 
	#IPV6_MULTICAST_IF
 17

	)

139 
	#IPV6_MULTICAST_HOPS
 18

	)

140 
	#IPV6_MULTICAST_LOOP
 19

	)

141 
	#IPV6_JOIN_GROUP
 20

	)

142 
	#IPV6_LEAVE_GROUP
 21

	)

143 
	#IPV6_ROUTER_ALERT
 22

	)

144 
	#IPV6_MTU_DISCOVER
 23

	)

145 
	#IPV6_MTU
 24

	)

146 
	#IPV6_RECVERR
 25

	)

147 
	#IPV6_V6ONLY
 26

	)

148 
	#IPV6_JOIN_ANYCAST
 27

	)

149 
	#IPV6_LEAVE_ANYCAST
 28

	)

150 
	#IPV6_IPSEC_POLICY
 34

	)

151 
	#IPV6_XFRM_POLICY
 35

	)

153 
	#IPV6_RECVPKTINFO
 49

	)

154 
	#IPV6_PKTINFO
 50

	)

155 
	#IPV6_RECVHOPLIMIT
 51

	)

156 
	#IPV6_HOPLIMIT
 52

	)

157 
	#IPV6_RECVHOPOPTS
 53

	)

158 
	#IPV6_HOPOPTS
 54

	)

159 
	#IPV6_RTHDRDSTOPTS
 55

	)

160 
	#IPV6_RECVRTHDR
 56

	)

161 
	#IPV6_RTHDR
 57

	)

162 
	#IPV6_RECVDSTOPTS
 58

	)

163 
	#IPV6_DSTOPTS
 59

	)

165 
	#IPV6_RECVTCLASS
 66

	)

166 
	#IPV6_TCLASS
 67

	)

169 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

170 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

171 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

172 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

175 
	#IPV6_PMTUDISC_DONT
 0

	)

176 
	#IPV6_PMTUDISC_WANT
 1

	)

177 
	#IPV6_PMTUDISC_DO
 2

	)

178 
	#IPV6_PMTUDISC_PROBE
 3

	)

181 
	#SOL_IPV6
 41

	)

182 
	#SOL_ICMPV6
 58

	)

185 
	#IPV6_RTHDR_LOOSE
 0

	)

186 
	#IPV6_RTHDR_STRICT
 1

	)

188 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

50 #i‡
__FP_FAST_FMA


51 
	#FP_FAST_FMA
 1

	)

54 #i‡
__FP_FAST_FMAF


55 
	#FP_FAST_FMAF
 1

	)

58 #i‡
__FP_FAST_FMAL


59 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_CAIF
 37

	)

113 
	#PF_ALG
 38

	)

114 
	#PF_MAX
 39

	)

117 
	#AF_UNSPEC
 
PF_UNSPEC


	)

118 
	#AF_LOCAL
 
PF_LOCAL


	)

119 
	#AF_UNIX
 
PF_UNIX


	)

120 
	#AF_FILE
 
PF_FILE


	)

121 
	#AF_INET
 
PF_INET


	)

122 
	#AF_AX25
 
PF_AX25


	)

123 
	#AF_IPX
 
PF_IPX


	)

124 
	#AF_APPLETALK
 
PF_APPLETALK


	)

125 
	#AF_NETROM
 
PF_NETROM


	)

126 
	#AF_BRIDGE
 
PF_BRIDGE


	)

127 
	#AF_ATMPVC
 
PF_ATMPVC


	)

128 
	#AF_X25
 
PF_X25


	)

129 
	#AF_INET6
 
PF_INET6


	)

130 
	#AF_ROSE
 
PF_ROSE


	)

131 
	#AF_DEC√t
 
PF_DEC√t


	)

132 
	#AF_NETBEUI
 
PF_NETBEUI


	)

133 
	#AF_SECURITY
 
PF_SECURITY


	)

134 
	#AF_KEY
 
PF_KEY


	)

135 
	#AF_NETLINK
 
PF_NETLINK


	)

136 
	#AF_ROUTE
 
PF_ROUTE


	)

137 
	#AF_PACKET
 
PF_PACKET


	)

138 
	#AF_ASH
 
PF_ASH


	)

139 
	#AF_ECONET
 
PF_ECONET


	)

140 
	#AF_ATMSVC
 
PF_ATMSVC


	)

141 
	#AF_RDS
 
PF_RDS


	)

142 
	#AF_SNA
 
PF_SNA


	)

143 
	#AF_IRDA
 
PF_IRDA


	)

144 
	#AF_PPPOX
 
PF_PPPOX


	)

145 
	#AF_WANPIPE
 
PF_WANPIPE


	)

146 
	#AF_LLC
 
PF_LLC


	)

147 
	#AF_CAN
 
PF_CAN


	)

148 
	#AF_TIPC
 
PF_TIPC


	)

149 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

150 
	#AF_IUCV
 
PF_IUCV


	)

151 
	#AF_RXRPC
 
PF_RXRPC


	)

152 
	#AF_ISDN
 
PF_ISDN


	)

153 
	#AF_PHONET
 
PF_PHONET


	)

154 
	#AF_IEEE802154
 
PF_IEEE802154


	)

155 
	#AF_CAIF
 
PF_CAIF


	)

156 
	#AF_ALG
 
PF_ALG


	)

157 
	#AF_MAX
 
PF_MAX


	)

163 
	#SOL_RAW
 255

	)

164 
	#SOL_DECNET
 261

	)

165 
	#SOL_X25
 262

	)

166 
	#SOL_PACKET
 263

	)

167 
	#SOL_ATM
 264

	)

168 
	#SOL_AAL
 265

	)

169 
	#SOL_IRDA
 266

	)

172 
	#SOMAXCONN
 128

	)

175 
	~<bôs/sockaddr.h
>

178 
	ssockaddr


180 
__SOCKADDR_COMMON
 (
ß_
);

181 
	mß_d©a
[14];

187 
	#__ss_Æig¡y≥
 

	)

188 
	#_SS_SIZE
 128

	)

189 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

191 
	ssockaddr_°‹age


193 
__SOCKADDR_COMMON
 (
ss_
);

194 
__ss_Æig¡y≥
 
	m__ss_Æign
;

195 
	m__ss_∑ddög
[
_SS_PADSIZE
];

202 
	mMSG_OOB
 = 0x01,

203 
	#MSG_OOB
 
MSG_OOB


	)

204 
	mMSG_PEEK
 = 0x02,

205 
	#MSG_PEEK
 
MSG_PEEK


	)

206 
	mMSG_DONTROUTE
 = 0x04,

207 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

208 #ifde‡
__USE_GNU


210 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

211 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

213 
	mMSG_CTRUNC
 = 0x08,

214 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

215 
	mMSG_PROXY
 = 0x10,

216 
	#MSG_PROXY
 
MSG_PROXY


	)

217 
	mMSG_TRUNC
 = 0x20,

218 
	#MSG_TRUNC
 
MSG_TRUNC


	)

219 
	mMSG_DONTWAIT
 = 0x40,

220 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

221 
	mMSG_EOR
 = 0x80,

222 
	#MSG_EOR
 
MSG_EOR


	)

223 
	mMSG_WAITALL
 = 0x100,

224 
	#MSG_WAITALL
 
MSG_WAITALL


	)

225 
	mMSG_FIN
 = 0x200,

226 
	#MSG_FIN
 
MSG_FIN


	)

227 
	mMSG_SYN
 = 0x400,

228 
	#MSG_SYN
 
MSG_SYN


	)

229 
	mMSG_CONFIRM
 = 0x800,

230 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

231 
	mMSG_RST
 = 0x1000,

232 
	#MSG_RST
 
MSG_RST


	)

233 
	mMSG_ERRQUEUE
 = 0x2000,

234 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

235 
	mMSG_NOSIGNAL
 = 0x4000,

236 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

237 
	mMSG_MORE
 = 0x8000,

238 
	#MSG_MORE
 
MSG_MORE


	)

239 
	mMSG_WAITFORONE
 = 0x10000,

240 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

242 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

245 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

251 
	smsghdr


253 *
	mmsg_«me
;

254 
sockÀn_t
 
	mmsg_«mñí
;

256 
iovec
 *
	mmsg_iov
;

257 
size_t
 
	mmsg_iovÀn
;

259 *
	mmsg_c⁄åﬁ
;

260 
size_t
 
	mmsg_c⁄åﬁÀn
;

265 
	mmsg_Êags
;

268 #ifde‡
__USE_GNU


270 
	smmsghdr


272 
msghdr
 
	mmsg_hdr
;

273 
	mmsg_Àn
;

278 
	scmsghdr


280 
size_t
 
	mcmsg_Àn
;

285 
	mcmsg_Àvñ
;

286 
	mcmsg_ty≥
;

287 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

288 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

293 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

294 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

296 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

298 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

299 
	#CMSG_FIRSTHDR
(
mhdr
) \

300 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

301 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

302 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

303 & (
size_t
Ë~( (size_tË- 1))

	)

304 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

305 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

306 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

308 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

309 
cmsghdr
 *
__cmsg
Ë
__THROW
;

310 #ifde‡
__USE_EXTERN_INLINES


311 #i‚de‡
_EXTERN_INLINE


312 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

314 
_EXTERN_INLINE
 
cmsghdr
 *

315 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

317 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

321 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

322 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

323 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


324 + 
__mhdr
->
msg_c⁄åﬁÀn
)

325 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

326 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

329  
__cmsg
;

330 
	}
}

337 
	mSCM_RIGHTS
 = 0x01

338 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

339 #ifde‡
__USE_GNU


340 , 
	mSCM_CREDENTIALS
 = 0x02

341 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

345 #ifde‡
__USE_GNU


347 
	su¸ed


349 
pid_t
 
	mpid
;

350 
uid_t
 
	muid
;

351 
gid_t
 
	mgid
;

356 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


357 #i‚de‡
FIOGETOWN


358 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

360 #i‚de‡
FIOSETOWN


361 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

363 #i‚de‡
SIOCATMARK


364 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

366 #i‚de‡
SIOCGPGRP


367 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

369 #i‚de‡
SIOCGSTAMP


370 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

372 #i‚de‡
SIOCGSTAMPNS


373 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

375 #i‚de‡
SIOCSPGRP


376 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

381 
	~<asm/sockë.h
>

383 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


384 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


385 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


386 #unde‡
FIOGETOWN


388 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


389 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


390 #unde‡
FIOSETOWN


392 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


393 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


394 #unde‡
SIOCATMARK


396 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


397 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


398 #unde‡
SIOCGPGRP


400 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


401 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


402 #unde‡
SIOCGSTAMP


404 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


405 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


406 #unde‡
SIOCGSTAMPNS


408 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


409 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


410 #unde‡
SIOCSPGRP


415 
	slögî


417 
	ml_⁄off
;

418 
	ml_lögî
;

422 
__BEGIN_DECLS


429 
ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

430 
__vÀn
, 
__Êags
,

431 
__c⁄°
 
time•ec
 *
__tmo
);

433 
	g__END_DECLS


	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡
_FORTIFY_SOURCE
 > 1

314 
	#__USE_FORTIFY_LEVEL
 2

	)

316 
	#__USE_FORTIFY_LEVEL
 1

	)

319 
	#__USE_FORTIFY_LEVEL
 0

	)

323 
	~<bôs/¥edefs.h
>

326 
	#__STDC_ISO_10646__
 200009L

	)

334 #unde‡
__GNU_LIBRARY__


335 
	#__GNU_LIBRARY__
 6

	)

339 
	#__GLIBC__
 2

	)

340 
	#__GLIBC_MINOR__
 13

	)

342 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

343 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

346 #i‡
deföed
 
__GNUC__
 \

347 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

348 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

349 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

350 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

354 #i‚de‡
__ASSEMBLER__


355 #i‚de‡
_SYS_CDEFS_H


356 
	~<sys/cdefs.h
>

361 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


362 
	#__USE_LARGEFILE
 1

	)

363 
	#__USE_LARGEFILE64
 1

	)

369 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

370 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

371 && 
deföed
 
	g__exã∫_ölöe


372 
	#__USE_EXTERN_INLINES
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] |
	`__FDMASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] &~
	`__FDMASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

663 ...), 
__isoc99_swsˇnf
)

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@
1
.
1
/usr/include
145
3507
config.h
example1.c
example2.c
global.h
host2ip.c
md5.h
md5c.c
rtp_api.c
rtp_api.h
rtp_api_internal.c
rtp_api_internal.h
rtp_collision.c
rtp_collision.h
rtp_encrypt.c
rtp_encrypt.h
rtp_highlevel.c
rtp_highlevel.h
rtp_highlevel_internal.h
rtp_lowlevel.h
rtp_mlist.c
rtp_mlist.h
rtp_mlist_internal.c
rtp_mlist_internal.h
rtp_unix.c
rtp_unix.h
sysdep.h
tclHash.c
tclHash.h
/usr/include/arpa/inet.h
/usr/include/errno.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/rpcsvc/ypclnt.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/param.h
/usr/include/sys/socket.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/utsname.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/rpc/netdb.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/param.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/param.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/bits/local_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
